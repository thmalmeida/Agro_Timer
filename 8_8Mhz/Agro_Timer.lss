
Agro_Timer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001aee  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000126  00800060  00001aee  00001b82  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000000e2  00800186  00800186  00001ca8  2**0
                  ALLOC
  3 .stab         00003594  00000000  00000000  00001ca8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000406b  00000000  00000000  0000523c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000200  00000000  00000000  000092a7  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000253  00000000  00000000  000094a7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002b10  00000000  00000000  000096fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001782  00000000  00000000  0000c20a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000014a9  00000000  00000000  0000d98c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000220  00000000  00000000  0000ee38  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000031a  00000000  00000000  0000f058  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000a92  00000000  00000000  0000f372  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000fe04  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	13 c0       	rjmp	.+38     	; 0x28 <__ctors_end>
       2:	37 c0       	rjmp	.+110    	; 0x72 <__bad_interrupt>
       4:	36 c0       	rjmp	.+108    	; 0x72 <__bad_interrupt>
       6:	35 c0       	rjmp	.+106    	; 0x72 <__bad_interrupt>
       8:	34 c0       	rjmp	.+104    	; 0x72 <__bad_interrupt>
       a:	33 c0       	rjmp	.+102    	; 0x72 <__bad_interrupt>
       c:	32 c0       	rjmp	.+100    	; 0x72 <__bad_interrupt>
       e:	31 c0       	rjmp	.+98     	; 0x72 <__bad_interrupt>
      10:	f1 c5       	rjmp	.+3042   	; 0xbf4 <__vector_8>
      12:	ec cb       	rjmp	.-2088   	; 0xfffff7ec <__eeprom_end+0xff7ef7ec>
      14:	2e c0       	rjmp	.+92     	; 0x72 <__bad_interrupt>
      16:	8b c9       	rjmp	.-3306   	; 0xfffff32e <__eeprom_end+0xff7ef32e>
      18:	c1 c9       	rjmp	.-3198   	; 0xfffff39c <__eeprom_end+0xff7ef39c>
      1a:	2b c0       	rjmp	.+86     	; 0x72 <__bad_interrupt>
      1c:	2a c0       	rjmp	.+84     	; 0x72 <__bad_interrupt>
      1e:	29 c0       	rjmp	.+82     	; 0x72 <__bad_interrupt>
      20:	28 c0       	rjmp	.+80     	; 0x72 <__bad_interrupt>
      22:	27 c0       	rjmp	.+78     	; 0x72 <__bad_interrupt>
      24:	26 c0       	rjmp	.+76     	; 0x72 <__bad_interrupt>

00000026 <__ctors_start>:
      26:	2b 0b       	sbc	r18, r27

00000028 <__ctors_end>:
      28:	11 24       	eor	r1, r1
      2a:	1f be       	out	0x3f, r1	; 63
      2c:	cf e5       	ldi	r28, 0x5F	; 95
      2e:	d4 e0       	ldi	r29, 0x04	; 4
      30:	de bf       	out	0x3e, r29	; 62
      32:	cd bf       	out	0x3d, r28	; 61

00000034 <__do_copy_data>:
      34:	11 e0       	ldi	r17, 0x01	; 1
      36:	a0 e6       	ldi	r26, 0x60	; 96
      38:	b0 e0       	ldi	r27, 0x00	; 0
      3a:	ee ee       	ldi	r30, 0xEE	; 238
      3c:	fa e1       	ldi	r31, 0x1A	; 26
      3e:	02 c0       	rjmp	.+4      	; 0x44 <.do_copy_data_start>

00000040 <.do_copy_data_loop>:
      40:	05 90       	lpm	r0, Z+
      42:	0d 92       	st	X+, r0

00000044 <.do_copy_data_start>:
      44:	a6 38       	cpi	r26, 0x86	; 134
      46:	b1 07       	cpc	r27, r17
      48:	d9 f7       	brne	.-10     	; 0x40 <.do_copy_data_loop>

0000004a <__do_clear_bss>:
      4a:	12 e0       	ldi	r17, 0x02	; 2
      4c:	a6 e8       	ldi	r26, 0x86	; 134
      4e:	b1 e0       	ldi	r27, 0x01	; 1
      50:	01 c0       	rjmp	.+2      	; 0x54 <.do_clear_bss_start>

00000052 <.do_clear_bss_loop>:
      52:	1d 92       	st	X+, r1

00000054 <.do_clear_bss_start>:
      54:	a8 36       	cpi	r26, 0x68	; 104
      56:	b1 07       	cpc	r27, r17
      58:	e1 f7       	brne	.-8      	; 0x52 <.do_clear_bss_loop>

0000005a <__do_global_ctors>:
      5a:	10 e0       	ldi	r17, 0x00	; 0
      5c:	c8 e2       	ldi	r28, 0x28	; 40
      5e:	d0 e0       	ldi	r29, 0x00	; 0
      60:	03 c0       	rjmp	.+6      	; 0x68 <.do_global_ctors_start>

00000062 <.do_global_ctors_loop>:
      62:	22 97       	sbiw	r28, 0x02	; 2
      64:	fe 01       	movw	r30, r28
      66:	91 dc       	rcall	.-1758   	; 0xfffff98a <__eeprom_end+0xff7ef98a>

00000068 <.do_global_ctors_start>:
      68:	c6 32       	cpi	r28, 0x26	; 38
      6a:	d1 07       	cpc	r29, r17
      6c:	d1 f7       	brne	.-12     	; 0x62 <.do_global_ctors_loop>
      6e:	1a d8       	rcall	.-4044   	; 0xfffff0a4 <__eeprom_end+0xff7ef0a4>
      70:	3c cd       	rjmp	.-1416   	; 0xfffffaea <__eeprom_end+0xff7efaea>

00000072 <__bad_interrupt>:
      72:	c6 cf       	rjmp	.-116    	; 0x0 <__vectors>

00000074 <_fpadd_parts>:
      74:	a0 e0       	ldi	r26, 0x00	; 0
      76:	b0 e0       	ldi	r27, 0x00	; 0
      78:	ef e3       	ldi	r30, 0x3F	; 63
      7a:	f0 e0       	ldi	r31, 0x00	; 0
      7c:	4d cc       	rjmp	.-1894   	; 0xfffff918 <__eeprom_end+0xff7ef918>
      7e:	dc 01       	movw	r26, r24
      80:	2b 01       	movw	r4, r22
      82:	fa 01       	movw	r30, r20
      84:	9c 91       	ld	r25, X
      86:	92 30       	cpi	r25, 0x02	; 2
      88:	08 f4       	brcc	.+2      	; 0x8c <_fpadd_parts+0x18>
      8a:	39 c1       	rjmp	.+626    	; 0x2fe <_fpadd_parts+0x28a>
      8c:	eb 01       	movw	r28, r22
      8e:	88 81       	ld	r24, Y
      90:	82 30       	cpi	r24, 0x02	; 2
      92:	08 f4       	brcc	.+2      	; 0x96 <_fpadd_parts+0x22>
      94:	33 c1       	rjmp	.+614    	; 0x2fc <_fpadd_parts+0x288>
      96:	94 30       	cpi	r25, 0x04	; 4
      98:	69 f4       	brne	.+26     	; 0xb4 <_fpadd_parts+0x40>
      9a:	84 30       	cpi	r24, 0x04	; 4
      9c:	09 f0       	breq	.+2      	; 0xa0 <_fpadd_parts+0x2c>
      9e:	2f c1       	rjmp	.+606    	; 0x2fe <_fpadd_parts+0x28a>
      a0:	11 96       	adiw	r26, 0x01	; 1
      a2:	9c 91       	ld	r25, X
      a4:	11 97       	sbiw	r26, 0x01	; 1
      a6:	89 81       	ldd	r24, Y+1	; 0x01
      a8:	98 17       	cp	r25, r24
      aa:	09 f4       	brne	.+2      	; 0xae <_fpadd_parts+0x3a>
      ac:	28 c1       	rjmp	.+592    	; 0x2fe <_fpadd_parts+0x28a>
      ae:	a5 e6       	ldi	r26, 0x65	; 101
      b0:	b0 e0       	ldi	r27, 0x00	; 0
      b2:	25 c1       	rjmp	.+586    	; 0x2fe <_fpadd_parts+0x28a>
      b4:	84 30       	cpi	r24, 0x04	; 4
      b6:	09 f4       	brne	.+2      	; 0xba <_fpadd_parts+0x46>
      b8:	21 c1       	rjmp	.+578    	; 0x2fc <_fpadd_parts+0x288>
      ba:	82 30       	cpi	r24, 0x02	; 2
      bc:	a9 f4       	brne	.+42     	; 0xe8 <_fpadd_parts+0x74>
      be:	92 30       	cpi	r25, 0x02	; 2
      c0:	09 f0       	breq	.+2      	; 0xc4 <_fpadd_parts+0x50>
      c2:	1d c1       	rjmp	.+570    	; 0x2fe <_fpadd_parts+0x28a>
      c4:	9a 01       	movw	r18, r20
      c6:	ad 01       	movw	r20, r26
      c8:	88 e0       	ldi	r24, 0x08	; 8
      ca:	ea 01       	movw	r28, r20
      cc:	09 90       	ld	r0, Y+
      ce:	ae 01       	movw	r20, r28
      d0:	e9 01       	movw	r28, r18
      d2:	09 92       	st	Y+, r0
      d4:	9e 01       	movw	r18, r28
      d6:	81 50       	subi	r24, 0x01	; 1
      d8:	c1 f7       	brne	.-16     	; 0xca <_fpadd_parts+0x56>
      da:	e2 01       	movw	r28, r4
      dc:	89 81       	ldd	r24, Y+1	; 0x01
      de:	11 96       	adiw	r26, 0x01	; 1
      e0:	9c 91       	ld	r25, X
      e2:	89 23       	and	r24, r25
      e4:	81 83       	std	Z+1, r24	; 0x01
      e6:	08 c1       	rjmp	.+528    	; 0x2f8 <_fpadd_parts+0x284>
      e8:	92 30       	cpi	r25, 0x02	; 2
      ea:	09 f4       	brne	.+2      	; 0xee <_fpadd_parts+0x7a>
      ec:	07 c1       	rjmp	.+526    	; 0x2fc <_fpadd_parts+0x288>
      ee:	12 96       	adiw	r26, 0x02	; 2
      f0:	2d 90       	ld	r2, X+
      f2:	3c 90       	ld	r3, X
      f4:	13 97       	sbiw	r26, 0x03	; 3
      f6:	eb 01       	movw	r28, r22
      f8:	8a 81       	ldd	r24, Y+2	; 0x02
      fa:	9b 81       	ldd	r25, Y+3	; 0x03
      fc:	14 96       	adiw	r26, 0x04	; 4
      fe:	ad 90       	ld	r10, X+
     100:	bd 90       	ld	r11, X+
     102:	cd 90       	ld	r12, X+
     104:	dc 90       	ld	r13, X
     106:	17 97       	sbiw	r26, 0x07	; 7
     108:	ec 80       	ldd	r14, Y+4	; 0x04
     10a:	fd 80       	ldd	r15, Y+5	; 0x05
     10c:	0e 81       	ldd	r16, Y+6	; 0x06
     10e:	1f 81       	ldd	r17, Y+7	; 0x07
     110:	91 01       	movw	r18, r2
     112:	28 1b       	sub	r18, r24
     114:	39 0b       	sbc	r19, r25
     116:	b9 01       	movw	r22, r18
     118:	37 ff       	sbrs	r19, 7
     11a:	04 c0       	rjmp	.+8      	; 0x124 <_fpadd_parts+0xb0>
     11c:	66 27       	eor	r22, r22
     11e:	77 27       	eor	r23, r23
     120:	62 1b       	sub	r22, r18
     122:	73 0b       	sbc	r23, r19
     124:	60 32       	cpi	r22, 0x20	; 32
     126:	71 05       	cpc	r23, r1
     128:	0c f0       	brlt	.+2      	; 0x12c <_fpadd_parts+0xb8>
     12a:	61 c0       	rjmp	.+194    	; 0x1ee <_fpadd_parts+0x17a>
     12c:	12 16       	cp	r1, r18
     12e:	13 06       	cpc	r1, r19
     130:	6c f5       	brge	.+90     	; 0x18c <_fpadd_parts+0x118>
     132:	37 01       	movw	r6, r14
     134:	48 01       	movw	r8, r16
     136:	06 2e       	mov	r0, r22
     138:	04 c0       	rjmp	.+8      	; 0x142 <_fpadd_parts+0xce>
     13a:	96 94       	lsr	r9
     13c:	87 94       	ror	r8
     13e:	77 94       	ror	r7
     140:	67 94       	ror	r6
     142:	0a 94       	dec	r0
     144:	d2 f7       	brpl	.-12     	; 0x13a <_fpadd_parts+0xc6>
     146:	21 e0       	ldi	r18, 0x01	; 1
     148:	30 e0       	ldi	r19, 0x00	; 0
     14a:	40 e0       	ldi	r20, 0x00	; 0
     14c:	50 e0       	ldi	r21, 0x00	; 0
     14e:	04 c0       	rjmp	.+8      	; 0x158 <_fpadd_parts+0xe4>
     150:	22 0f       	add	r18, r18
     152:	33 1f       	adc	r19, r19
     154:	44 1f       	adc	r20, r20
     156:	55 1f       	adc	r21, r21
     158:	6a 95       	dec	r22
     15a:	d2 f7       	brpl	.-12     	; 0x150 <_fpadd_parts+0xdc>
     15c:	21 50       	subi	r18, 0x01	; 1
     15e:	30 40       	sbci	r19, 0x00	; 0
     160:	40 40       	sbci	r20, 0x00	; 0
     162:	50 40       	sbci	r21, 0x00	; 0
     164:	2e 21       	and	r18, r14
     166:	3f 21       	and	r19, r15
     168:	40 23       	and	r20, r16
     16a:	51 23       	and	r21, r17
     16c:	21 15       	cp	r18, r1
     16e:	31 05       	cpc	r19, r1
     170:	41 05       	cpc	r20, r1
     172:	51 05       	cpc	r21, r1
     174:	21 f0       	breq	.+8      	; 0x17e <_fpadd_parts+0x10a>
     176:	21 e0       	ldi	r18, 0x01	; 1
     178:	30 e0       	ldi	r19, 0x00	; 0
     17a:	40 e0       	ldi	r20, 0x00	; 0
     17c:	50 e0       	ldi	r21, 0x00	; 0
     17e:	79 01       	movw	r14, r18
     180:	8a 01       	movw	r16, r20
     182:	e6 28       	or	r14, r6
     184:	f7 28       	or	r15, r7
     186:	08 29       	or	r16, r8
     188:	19 29       	or	r17, r9
     18a:	3c c0       	rjmp	.+120    	; 0x204 <_fpadd_parts+0x190>
     18c:	23 2b       	or	r18, r19
     18e:	d1 f1       	breq	.+116    	; 0x204 <_fpadd_parts+0x190>
     190:	26 0e       	add	r2, r22
     192:	37 1e       	adc	r3, r23
     194:	35 01       	movw	r6, r10
     196:	46 01       	movw	r8, r12
     198:	06 2e       	mov	r0, r22
     19a:	04 c0       	rjmp	.+8      	; 0x1a4 <_fpadd_parts+0x130>
     19c:	96 94       	lsr	r9
     19e:	87 94       	ror	r8
     1a0:	77 94       	ror	r7
     1a2:	67 94       	ror	r6
     1a4:	0a 94       	dec	r0
     1a6:	d2 f7       	brpl	.-12     	; 0x19c <_fpadd_parts+0x128>
     1a8:	21 e0       	ldi	r18, 0x01	; 1
     1aa:	30 e0       	ldi	r19, 0x00	; 0
     1ac:	40 e0       	ldi	r20, 0x00	; 0
     1ae:	50 e0       	ldi	r21, 0x00	; 0
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0x146>
     1b2:	22 0f       	add	r18, r18
     1b4:	33 1f       	adc	r19, r19
     1b6:	44 1f       	adc	r20, r20
     1b8:	55 1f       	adc	r21, r21
     1ba:	6a 95       	dec	r22
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0x13e>
     1be:	21 50       	subi	r18, 0x01	; 1
     1c0:	30 40       	sbci	r19, 0x00	; 0
     1c2:	40 40       	sbci	r20, 0x00	; 0
     1c4:	50 40       	sbci	r21, 0x00	; 0
     1c6:	2a 21       	and	r18, r10
     1c8:	3b 21       	and	r19, r11
     1ca:	4c 21       	and	r20, r12
     1cc:	5d 21       	and	r21, r13
     1ce:	21 15       	cp	r18, r1
     1d0:	31 05       	cpc	r19, r1
     1d2:	41 05       	cpc	r20, r1
     1d4:	51 05       	cpc	r21, r1
     1d6:	21 f0       	breq	.+8      	; 0x1e0 <_fpadd_parts+0x16c>
     1d8:	21 e0       	ldi	r18, 0x01	; 1
     1da:	30 e0       	ldi	r19, 0x00	; 0
     1dc:	40 e0       	ldi	r20, 0x00	; 0
     1de:	50 e0       	ldi	r21, 0x00	; 0
     1e0:	59 01       	movw	r10, r18
     1e2:	6a 01       	movw	r12, r20
     1e4:	a6 28       	or	r10, r6
     1e6:	b7 28       	or	r11, r7
     1e8:	c8 28       	or	r12, r8
     1ea:	d9 28       	or	r13, r9
     1ec:	0b c0       	rjmp	.+22     	; 0x204 <_fpadd_parts+0x190>
     1ee:	82 15       	cp	r24, r2
     1f0:	93 05       	cpc	r25, r3
     1f2:	2c f0       	brlt	.+10     	; 0x1fe <_fpadd_parts+0x18a>
     1f4:	1c 01       	movw	r2, r24
     1f6:	aa 24       	eor	r10, r10
     1f8:	bb 24       	eor	r11, r11
     1fa:	65 01       	movw	r12, r10
     1fc:	03 c0       	rjmp	.+6      	; 0x204 <_fpadd_parts+0x190>
     1fe:	ee 24       	eor	r14, r14
     200:	ff 24       	eor	r15, r15
     202:	87 01       	movw	r16, r14
     204:	11 96       	adiw	r26, 0x01	; 1
     206:	9c 91       	ld	r25, X
     208:	d2 01       	movw	r26, r4
     20a:	11 96       	adiw	r26, 0x01	; 1
     20c:	8c 91       	ld	r24, X
     20e:	98 17       	cp	r25, r24
     210:	09 f4       	brne	.+2      	; 0x214 <_fpadd_parts+0x1a0>
     212:	45 c0       	rjmp	.+138    	; 0x29e <_fpadd_parts+0x22a>
     214:	99 23       	and	r25, r25
     216:	39 f0       	breq	.+14     	; 0x226 <_fpadd_parts+0x1b2>
     218:	a8 01       	movw	r20, r16
     21a:	97 01       	movw	r18, r14
     21c:	2a 19       	sub	r18, r10
     21e:	3b 09       	sbc	r19, r11
     220:	4c 09       	sbc	r20, r12
     222:	5d 09       	sbc	r21, r13
     224:	06 c0       	rjmp	.+12     	; 0x232 <_fpadd_parts+0x1be>
     226:	a6 01       	movw	r20, r12
     228:	95 01       	movw	r18, r10
     22a:	2e 19       	sub	r18, r14
     22c:	3f 09       	sbc	r19, r15
     22e:	40 0b       	sbc	r20, r16
     230:	51 0b       	sbc	r21, r17
     232:	57 fd       	sbrc	r21, 7
     234:	08 c0       	rjmp	.+16     	; 0x246 <_fpadd_parts+0x1d2>
     236:	11 82       	std	Z+1, r1	; 0x01
     238:	33 82       	std	Z+3, r3	; 0x03
     23a:	22 82       	std	Z+2, r2	; 0x02
     23c:	24 83       	std	Z+4, r18	; 0x04
     23e:	35 83       	std	Z+5, r19	; 0x05
     240:	46 83       	std	Z+6, r20	; 0x06
     242:	57 83       	std	Z+7, r21	; 0x07
     244:	1d c0       	rjmp	.+58     	; 0x280 <_fpadd_parts+0x20c>
     246:	81 e0       	ldi	r24, 0x01	; 1
     248:	81 83       	std	Z+1, r24	; 0x01
     24a:	33 82       	std	Z+3, r3	; 0x03
     24c:	22 82       	std	Z+2, r2	; 0x02
     24e:	88 27       	eor	r24, r24
     250:	99 27       	eor	r25, r25
     252:	dc 01       	movw	r26, r24
     254:	82 1b       	sub	r24, r18
     256:	93 0b       	sbc	r25, r19
     258:	a4 0b       	sbc	r26, r20
     25a:	b5 0b       	sbc	r27, r21
     25c:	84 83       	std	Z+4, r24	; 0x04
     25e:	95 83       	std	Z+5, r25	; 0x05
     260:	a6 83       	std	Z+6, r26	; 0x06
     262:	b7 83       	std	Z+7, r27	; 0x07
     264:	0d c0       	rjmp	.+26     	; 0x280 <_fpadd_parts+0x20c>
     266:	22 0f       	add	r18, r18
     268:	33 1f       	adc	r19, r19
     26a:	44 1f       	adc	r20, r20
     26c:	55 1f       	adc	r21, r21
     26e:	24 83       	std	Z+4, r18	; 0x04
     270:	35 83       	std	Z+5, r19	; 0x05
     272:	46 83       	std	Z+6, r20	; 0x06
     274:	57 83       	std	Z+7, r21	; 0x07
     276:	82 81       	ldd	r24, Z+2	; 0x02
     278:	93 81       	ldd	r25, Z+3	; 0x03
     27a:	01 97       	sbiw	r24, 0x01	; 1
     27c:	93 83       	std	Z+3, r25	; 0x03
     27e:	82 83       	std	Z+2, r24	; 0x02
     280:	24 81       	ldd	r18, Z+4	; 0x04
     282:	35 81       	ldd	r19, Z+5	; 0x05
     284:	46 81       	ldd	r20, Z+6	; 0x06
     286:	57 81       	ldd	r21, Z+7	; 0x07
     288:	da 01       	movw	r26, r20
     28a:	c9 01       	movw	r24, r18
     28c:	01 97       	sbiw	r24, 0x01	; 1
     28e:	a1 09       	sbc	r26, r1
     290:	b1 09       	sbc	r27, r1
     292:	8f 5f       	subi	r24, 0xFF	; 255
     294:	9f 4f       	sbci	r25, 0xFF	; 255
     296:	af 4f       	sbci	r26, 0xFF	; 255
     298:	bf 43       	sbci	r27, 0x3F	; 63
     29a:	28 f3       	brcs	.-54     	; 0x266 <_fpadd_parts+0x1f2>
     29c:	0b c0       	rjmp	.+22     	; 0x2b4 <_fpadd_parts+0x240>
     29e:	91 83       	std	Z+1, r25	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	ea 0c       	add	r14, r10
     2a6:	fb 1c       	adc	r15, r11
     2a8:	0c 1d       	adc	r16, r12
     2aa:	1d 1d       	adc	r17, r13
     2ac:	e4 82       	std	Z+4, r14	; 0x04
     2ae:	f5 82       	std	Z+5, r15	; 0x05
     2b0:	06 83       	std	Z+6, r16	; 0x06
     2b2:	17 83       	std	Z+7, r17	; 0x07
     2b4:	83 e0       	ldi	r24, 0x03	; 3
     2b6:	80 83       	st	Z, r24
     2b8:	24 81       	ldd	r18, Z+4	; 0x04
     2ba:	35 81       	ldd	r19, Z+5	; 0x05
     2bc:	46 81       	ldd	r20, Z+6	; 0x06
     2be:	57 81       	ldd	r21, Z+7	; 0x07
     2c0:	57 ff       	sbrs	r21, 7
     2c2:	1a c0       	rjmp	.+52     	; 0x2f8 <_fpadd_parts+0x284>
     2c4:	c9 01       	movw	r24, r18
     2c6:	aa 27       	eor	r26, r26
     2c8:	97 fd       	sbrc	r25, 7
     2ca:	a0 95       	com	r26
     2cc:	ba 2f       	mov	r27, r26
     2ce:	81 70       	andi	r24, 0x01	; 1
     2d0:	90 70       	andi	r25, 0x00	; 0
     2d2:	a0 70       	andi	r26, 0x00	; 0
     2d4:	b0 70       	andi	r27, 0x00	; 0
     2d6:	56 95       	lsr	r21
     2d8:	47 95       	ror	r20
     2da:	37 95       	ror	r19
     2dc:	27 95       	ror	r18
     2de:	82 2b       	or	r24, r18
     2e0:	93 2b       	or	r25, r19
     2e2:	a4 2b       	or	r26, r20
     2e4:	b5 2b       	or	r27, r21
     2e6:	84 83       	std	Z+4, r24	; 0x04
     2e8:	95 83       	std	Z+5, r25	; 0x05
     2ea:	a6 83       	std	Z+6, r26	; 0x06
     2ec:	b7 83       	std	Z+7, r27	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 96       	adiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	df 01       	movw	r26, r30
     2fa:	01 c0       	rjmp	.+2      	; 0x2fe <_fpadd_parts+0x28a>
     2fc:	d2 01       	movw	r26, r4
     2fe:	cd 01       	movw	r24, r26
     300:	cd b7       	in	r28, 0x3d	; 61
     302:	de b7       	in	r29, 0x3e	; 62
     304:	e2 e1       	ldi	r30, 0x12	; 18
     306:	24 cb       	rjmp	.-2488   	; 0xfffff950 <__eeprom_end+0xff7ef950>

00000308 <__subsf3>:
     308:	a0 e2       	ldi	r26, 0x20	; 32
     30a:	b0 e0       	ldi	r27, 0x00	; 0
     30c:	e9 e8       	ldi	r30, 0x89	; 137
     30e:	f1 e0       	ldi	r31, 0x01	; 1
     310:	0f cb       	rjmp	.-2530   	; 0xfffff930 <__eeprom_end+0xff7ef930>
     312:	69 83       	std	Y+1, r22	; 0x01
     314:	7a 83       	std	Y+2, r23	; 0x02
     316:	8b 83       	std	Y+3, r24	; 0x03
     318:	9c 83       	std	Y+4, r25	; 0x04
     31a:	2d 83       	std	Y+5, r18	; 0x05
     31c:	3e 83       	std	Y+6, r19	; 0x06
     31e:	4f 83       	std	Y+7, r20	; 0x07
     320:	58 87       	std	Y+8, r21	; 0x08
     322:	e9 e0       	ldi	r30, 0x09	; 9
     324:	ee 2e       	mov	r14, r30
     326:	f1 2c       	mov	r15, r1
     328:	ec 0e       	add	r14, r28
     32a:	fd 1e       	adc	r15, r29
     32c:	ce 01       	movw	r24, r28
     32e:	01 96       	adiw	r24, 0x01	; 1
     330:	b7 01       	movw	r22, r14
     332:	56 d3       	rcall	.+1708   	; 0x9e0 <__unpack_f>
     334:	8e 01       	movw	r16, r28
     336:	0f 5e       	subi	r16, 0xEF	; 239
     338:	1f 4f       	sbci	r17, 0xFF	; 255
     33a:	ce 01       	movw	r24, r28
     33c:	05 96       	adiw	r24, 0x05	; 5
     33e:	b8 01       	movw	r22, r16
     340:	4f d3       	rcall	.+1694   	; 0x9e0 <__unpack_f>
     342:	8a 89       	ldd	r24, Y+18	; 0x12
     344:	91 e0       	ldi	r25, 0x01	; 1
     346:	89 27       	eor	r24, r25
     348:	8a 8b       	std	Y+18, r24	; 0x12
     34a:	c7 01       	movw	r24, r14
     34c:	b8 01       	movw	r22, r16
     34e:	ae 01       	movw	r20, r28
     350:	47 5e       	subi	r20, 0xE7	; 231
     352:	5f 4f       	sbci	r21, 0xFF	; 255
     354:	8f de       	rcall	.-738    	; 0x74 <_fpadd_parts>
     356:	6f d2       	rcall	.+1246   	; 0x836 <__pack_f>
     358:	a0 96       	adiw	r28, 0x20	; 32
     35a:	e6 e0       	ldi	r30, 0x06	; 6
     35c:	05 cb       	rjmp	.-2550   	; 0xfffff968 <__eeprom_end+0xff7ef968>

0000035e <__addsf3>:
     35e:	a0 e2       	ldi	r26, 0x20	; 32
     360:	b0 e0       	ldi	r27, 0x00	; 0
     362:	e4 eb       	ldi	r30, 0xB4	; 180
     364:	f1 e0       	ldi	r31, 0x01	; 1
     366:	e4 ca       	rjmp	.-2616   	; 0xfffff930 <__eeprom_end+0xff7ef930>
     368:	69 83       	std	Y+1, r22	; 0x01
     36a:	7a 83       	std	Y+2, r23	; 0x02
     36c:	8b 83       	std	Y+3, r24	; 0x03
     36e:	9c 83       	std	Y+4, r25	; 0x04
     370:	2d 83       	std	Y+5, r18	; 0x05
     372:	3e 83       	std	Y+6, r19	; 0x06
     374:	4f 83       	std	Y+7, r20	; 0x07
     376:	58 87       	std	Y+8, r21	; 0x08
     378:	f9 e0       	ldi	r31, 0x09	; 9
     37a:	ef 2e       	mov	r14, r31
     37c:	f1 2c       	mov	r15, r1
     37e:	ec 0e       	add	r14, r28
     380:	fd 1e       	adc	r15, r29
     382:	ce 01       	movw	r24, r28
     384:	01 96       	adiw	r24, 0x01	; 1
     386:	b7 01       	movw	r22, r14
     388:	2b d3       	rcall	.+1622   	; 0x9e0 <__unpack_f>
     38a:	8e 01       	movw	r16, r28
     38c:	0f 5e       	subi	r16, 0xEF	; 239
     38e:	1f 4f       	sbci	r17, 0xFF	; 255
     390:	ce 01       	movw	r24, r28
     392:	05 96       	adiw	r24, 0x05	; 5
     394:	b8 01       	movw	r22, r16
     396:	24 d3       	rcall	.+1608   	; 0x9e0 <__unpack_f>
     398:	c7 01       	movw	r24, r14
     39a:	b8 01       	movw	r22, r16
     39c:	ae 01       	movw	r20, r28
     39e:	47 5e       	subi	r20, 0xE7	; 231
     3a0:	5f 4f       	sbci	r21, 0xFF	; 255
     3a2:	68 de       	rcall	.-816    	; 0x74 <_fpadd_parts>
     3a4:	48 d2       	rcall	.+1168   	; 0x836 <__pack_f>
     3a6:	a0 96       	adiw	r28, 0x20	; 32
     3a8:	e6 e0       	ldi	r30, 0x06	; 6
     3aa:	de ca       	rjmp	.-2628   	; 0xfffff968 <__eeprom_end+0xff7ef968>

000003ac <__mulsf3>:
     3ac:	a0 e2       	ldi	r26, 0x20	; 32
     3ae:	b0 e0       	ldi	r27, 0x00	; 0
     3b0:	eb ed       	ldi	r30, 0xDB	; 219
     3b2:	f1 e0       	ldi	r31, 0x01	; 1
     3b4:	b1 ca       	rjmp	.-2718   	; 0xfffff918 <__eeprom_end+0xff7ef918>
     3b6:	69 83       	std	Y+1, r22	; 0x01
     3b8:	7a 83       	std	Y+2, r23	; 0x02
     3ba:	8b 83       	std	Y+3, r24	; 0x03
     3bc:	9c 83       	std	Y+4, r25	; 0x04
     3be:	2d 83       	std	Y+5, r18	; 0x05
     3c0:	3e 83       	std	Y+6, r19	; 0x06
     3c2:	4f 83       	std	Y+7, r20	; 0x07
     3c4:	58 87       	std	Y+8, r21	; 0x08
     3c6:	ce 01       	movw	r24, r28
     3c8:	01 96       	adiw	r24, 0x01	; 1
     3ca:	be 01       	movw	r22, r28
     3cc:	67 5f       	subi	r22, 0xF7	; 247
     3ce:	7f 4f       	sbci	r23, 0xFF	; 255
     3d0:	07 d3       	rcall	.+1550   	; 0x9e0 <__unpack_f>
     3d2:	ce 01       	movw	r24, r28
     3d4:	05 96       	adiw	r24, 0x05	; 5
     3d6:	be 01       	movw	r22, r28
     3d8:	6f 5e       	subi	r22, 0xEF	; 239
     3da:	7f 4f       	sbci	r23, 0xFF	; 255
     3dc:	01 d3       	rcall	.+1538   	; 0x9e0 <__unpack_f>
     3de:	99 85       	ldd	r25, Y+9	; 0x09
     3e0:	92 30       	cpi	r25, 0x02	; 2
     3e2:	88 f0       	brcs	.+34     	; 0x406 <__mulsf3+0x5a>
     3e4:	89 89       	ldd	r24, Y+17	; 0x11
     3e6:	82 30       	cpi	r24, 0x02	; 2
     3e8:	c8 f0       	brcs	.+50     	; 0x41c <__mulsf3+0x70>
     3ea:	94 30       	cpi	r25, 0x04	; 4
     3ec:	19 f4       	brne	.+6      	; 0x3f4 <__mulsf3+0x48>
     3ee:	82 30       	cpi	r24, 0x02	; 2
     3f0:	51 f4       	brne	.+20     	; 0x406 <__mulsf3+0x5a>
     3f2:	04 c0       	rjmp	.+8      	; 0x3fc <__mulsf3+0x50>
     3f4:	84 30       	cpi	r24, 0x04	; 4
     3f6:	29 f4       	brne	.+10     	; 0x402 <__mulsf3+0x56>
     3f8:	92 30       	cpi	r25, 0x02	; 2
     3fa:	81 f4       	brne	.+32     	; 0x41c <__mulsf3+0x70>
     3fc:	85 e6       	ldi	r24, 0x65	; 101
     3fe:	90 e0       	ldi	r25, 0x00	; 0
     400:	c6 c0       	rjmp	.+396    	; 0x58e <__stack+0x12f>
     402:	92 30       	cpi	r25, 0x02	; 2
     404:	49 f4       	brne	.+18     	; 0x418 <__mulsf3+0x6c>
     406:	20 e0       	ldi	r18, 0x00	; 0
     408:	9a 85       	ldd	r25, Y+10	; 0x0a
     40a:	8a 89       	ldd	r24, Y+18	; 0x12
     40c:	98 13       	cpse	r25, r24
     40e:	21 e0       	ldi	r18, 0x01	; 1
     410:	2a 87       	std	Y+10, r18	; 0x0a
     412:	ce 01       	movw	r24, r28
     414:	09 96       	adiw	r24, 0x09	; 9
     416:	bb c0       	rjmp	.+374    	; 0x58e <__stack+0x12f>
     418:	82 30       	cpi	r24, 0x02	; 2
     41a:	49 f4       	brne	.+18     	; 0x42e <__mulsf3+0x82>
     41c:	20 e0       	ldi	r18, 0x00	; 0
     41e:	9a 85       	ldd	r25, Y+10	; 0x0a
     420:	8a 89       	ldd	r24, Y+18	; 0x12
     422:	98 13       	cpse	r25, r24
     424:	21 e0       	ldi	r18, 0x01	; 1
     426:	2a 8b       	std	Y+18, r18	; 0x12
     428:	ce 01       	movw	r24, r28
     42a:	41 96       	adiw	r24, 0x11	; 17
     42c:	b0 c0       	rjmp	.+352    	; 0x58e <__stack+0x12f>
     42e:	2d 84       	ldd	r2, Y+13	; 0x0d
     430:	3e 84       	ldd	r3, Y+14	; 0x0e
     432:	4f 84       	ldd	r4, Y+15	; 0x0f
     434:	58 88       	ldd	r5, Y+16	; 0x10
     436:	6d 88       	ldd	r6, Y+21	; 0x15
     438:	7e 88       	ldd	r7, Y+22	; 0x16
     43a:	8f 88       	ldd	r8, Y+23	; 0x17
     43c:	98 8c       	ldd	r9, Y+24	; 0x18
     43e:	ee 24       	eor	r14, r14
     440:	ff 24       	eor	r15, r15
     442:	87 01       	movw	r16, r14
     444:	aa 24       	eor	r10, r10
     446:	bb 24       	eor	r11, r11
     448:	65 01       	movw	r12, r10
     44a:	40 e0       	ldi	r20, 0x00	; 0
     44c:	50 e0       	ldi	r21, 0x00	; 0
     44e:	60 e0       	ldi	r22, 0x00	; 0
     450:	70 e0       	ldi	r23, 0x00	; 0
     452:	e0 e0       	ldi	r30, 0x00	; 0
     454:	f0 e0       	ldi	r31, 0x00	; 0
     456:	c1 01       	movw	r24, r2
     458:	81 70       	andi	r24, 0x01	; 1
     45a:	90 70       	andi	r25, 0x00	; 0
     45c:	89 2b       	or	r24, r25
     45e:	e9 f0       	breq	.+58     	; 0x49a <__stack+0x3b>
     460:	e6 0c       	add	r14, r6
     462:	f7 1c       	adc	r15, r7
     464:	08 1d       	adc	r16, r8
     466:	19 1d       	adc	r17, r9
     468:	9a 01       	movw	r18, r20
     46a:	ab 01       	movw	r20, r22
     46c:	2a 0d       	add	r18, r10
     46e:	3b 1d       	adc	r19, r11
     470:	4c 1d       	adc	r20, r12
     472:	5d 1d       	adc	r21, r13
     474:	80 e0       	ldi	r24, 0x00	; 0
     476:	90 e0       	ldi	r25, 0x00	; 0
     478:	a0 e0       	ldi	r26, 0x00	; 0
     47a:	b0 e0       	ldi	r27, 0x00	; 0
     47c:	e6 14       	cp	r14, r6
     47e:	f7 04       	cpc	r15, r7
     480:	08 05       	cpc	r16, r8
     482:	19 05       	cpc	r17, r9
     484:	20 f4       	brcc	.+8      	; 0x48e <__stack+0x2f>
     486:	81 e0       	ldi	r24, 0x01	; 1
     488:	90 e0       	ldi	r25, 0x00	; 0
     48a:	a0 e0       	ldi	r26, 0x00	; 0
     48c:	b0 e0       	ldi	r27, 0x00	; 0
     48e:	ba 01       	movw	r22, r20
     490:	a9 01       	movw	r20, r18
     492:	48 0f       	add	r20, r24
     494:	59 1f       	adc	r21, r25
     496:	6a 1f       	adc	r22, r26
     498:	7b 1f       	adc	r23, r27
     49a:	aa 0c       	add	r10, r10
     49c:	bb 1c       	adc	r11, r11
     49e:	cc 1c       	adc	r12, r12
     4a0:	dd 1c       	adc	r13, r13
     4a2:	97 fe       	sbrs	r9, 7
     4a4:	08 c0       	rjmp	.+16     	; 0x4b6 <__stack+0x57>
     4a6:	81 e0       	ldi	r24, 0x01	; 1
     4a8:	90 e0       	ldi	r25, 0x00	; 0
     4aa:	a0 e0       	ldi	r26, 0x00	; 0
     4ac:	b0 e0       	ldi	r27, 0x00	; 0
     4ae:	a8 2a       	or	r10, r24
     4b0:	b9 2a       	or	r11, r25
     4b2:	ca 2a       	or	r12, r26
     4b4:	db 2a       	or	r13, r27
     4b6:	31 96       	adiw	r30, 0x01	; 1
     4b8:	e0 32       	cpi	r30, 0x20	; 32
     4ba:	f1 05       	cpc	r31, r1
     4bc:	49 f0       	breq	.+18     	; 0x4d0 <__stack+0x71>
     4be:	66 0c       	add	r6, r6
     4c0:	77 1c       	adc	r7, r7
     4c2:	88 1c       	adc	r8, r8
     4c4:	99 1c       	adc	r9, r9
     4c6:	56 94       	lsr	r5
     4c8:	47 94       	ror	r4
     4ca:	37 94       	ror	r3
     4cc:	27 94       	ror	r2
     4ce:	c3 cf       	rjmp	.-122    	; 0x456 <__mulsf3+0xaa>
     4d0:	fa 85       	ldd	r31, Y+10	; 0x0a
     4d2:	ea 89       	ldd	r30, Y+18	; 0x12
     4d4:	2b 89       	ldd	r18, Y+19	; 0x13
     4d6:	3c 89       	ldd	r19, Y+20	; 0x14
     4d8:	8b 85       	ldd	r24, Y+11	; 0x0b
     4da:	9c 85       	ldd	r25, Y+12	; 0x0c
     4dc:	28 0f       	add	r18, r24
     4de:	39 1f       	adc	r19, r25
     4e0:	2e 5f       	subi	r18, 0xFE	; 254
     4e2:	3f 4f       	sbci	r19, 0xFF	; 255
     4e4:	17 c0       	rjmp	.+46     	; 0x514 <__stack+0xb5>
     4e6:	ca 01       	movw	r24, r20
     4e8:	81 70       	andi	r24, 0x01	; 1
     4ea:	90 70       	andi	r25, 0x00	; 0
     4ec:	89 2b       	or	r24, r25
     4ee:	61 f0       	breq	.+24     	; 0x508 <__stack+0xa9>
     4f0:	16 95       	lsr	r17
     4f2:	07 95       	ror	r16
     4f4:	f7 94       	ror	r15
     4f6:	e7 94       	ror	r14
     4f8:	80 e0       	ldi	r24, 0x00	; 0
     4fa:	90 e0       	ldi	r25, 0x00	; 0
     4fc:	a0 e0       	ldi	r26, 0x00	; 0
     4fe:	b0 e8       	ldi	r27, 0x80	; 128
     500:	e8 2a       	or	r14, r24
     502:	f9 2a       	or	r15, r25
     504:	0a 2b       	or	r16, r26
     506:	1b 2b       	or	r17, r27
     508:	76 95       	lsr	r23
     50a:	67 95       	ror	r22
     50c:	57 95       	ror	r21
     50e:	47 95       	ror	r20
     510:	2f 5f       	subi	r18, 0xFF	; 255
     512:	3f 4f       	sbci	r19, 0xFF	; 255
     514:	77 fd       	sbrc	r23, 7
     516:	e7 cf       	rjmp	.-50     	; 0x4e6 <__stack+0x87>
     518:	0c c0       	rjmp	.+24     	; 0x532 <__stack+0xd3>
     51a:	44 0f       	add	r20, r20
     51c:	55 1f       	adc	r21, r21
     51e:	66 1f       	adc	r22, r22
     520:	77 1f       	adc	r23, r23
     522:	17 fd       	sbrc	r17, 7
     524:	41 60       	ori	r20, 0x01	; 1
     526:	ee 0c       	add	r14, r14
     528:	ff 1c       	adc	r15, r15
     52a:	00 1f       	adc	r16, r16
     52c:	11 1f       	adc	r17, r17
     52e:	21 50       	subi	r18, 0x01	; 1
     530:	30 40       	sbci	r19, 0x00	; 0
     532:	40 30       	cpi	r20, 0x00	; 0
     534:	90 e0       	ldi	r25, 0x00	; 0
     536:	59 07       	cpc	r21, r25
     538:	90 e0       	ldi	r25, 0x00	; 0
     53a:	69 07       	cpc	r22, r25
     53c:	90 e4       	ldi	r25, 0x40	; 64
     53e:	79 07       	cpc	r23, r25
     540:	60 f3       	brcs	.-40     	; 0x51a <__stack+0xbb>
     542:	2b 8f       	std	Y+27, r18	; 0x1b
     544:	3c 8f       	std	Y+28, r19	; 0x1c
     546:	db 01       	movw	r26, r22
     548:	ca 01       	movw	r24, r20
     54a:	8f 77       	andi	r24, 0x7F	; 127
     54c:	90 70       	andi	r25, 0x00	; 0
     54e:	a0 70       	andi	r26, 0x00	; 0
     550:	b0 70       	andi	r27, 0x00	; 0
     552:	80 34       	cpi	r24, 0x40	; 64
     554:	91 05       	cpc	r25, r1
     556:	a1 05       	cpc	r26, r1
     558:	b1 05       	cpc	r27, r1
     55a:	61 f4       	brne	.+24     	; 0x574 <__stack+0x115>
     55c:	47 fd       	sbrc	r20, 7
     55e:	0a c0       	rjmp	.+20     	; 0x574 <__stack+0x115>
     560:	e1 14       	cp	r14, r1
     562:	f1 04       	cpc	r15, r1
     564:	01 05       	cpc	r16, r1
     566:	11 05       	cpc	r17, r1
     568:	29 f0       	breq	.+10     	; 0x574 <__stack+0x115>
     56a:	40 5c       	subi	r20, 0xC0	; 192
     56c:	5f 4f       	sbci	r21, 0xFF	; 255
     56e:	6f 4f       	sbci	r22, 0xFF	; 255
     570:	7f 4f       	sbci	r23, 0xFF	; 255
     572:	40 78       	andi	r20, 0x80	; 128
     574:	1a 8e       	std	Y+26, r1	; 0x1a
     576:	fe 17       	cp	r31, r30
     578:	11 f0       	breq	.+4      	; 0x57e <__stack+0x11f>
     57a:	81 e0       	ldi	r24, 0x01	; 1
     57c:	8a 8f       	std	Y+26, r24	; 0x1a
     57e:	4d 8f       	std	Y+29, r20	; 0x1d
     580:	5e 8f       	std	Y+30, r21	; 0x1e
     582:	6f 8f       	std	Y+31, r22	; 0x1f
     584:	78 a3       	std	Y+32, r23	; 0x20
     586:	83 e0       	ldi	r24, 0x03	; 3
     588:	89 8f       	std	Y+25, r24	; 0x19
     58a:	ce 01       	movw	r24, r28
     58c:	49 96       	adiw	r24, 0x19	; 25
     58e:	53 d1       	rcall	.+678    	; 0x836 <__pack_f>
     590:	a0 96       	adiw	r28, 0x20	; 32
     592:	e2 e1       	ldi	r30, 0x12	; 18
     594:	dd c9       	rjmp	.-3142   	; 0xfffff950 <__eeprom_end+0xff7ef950>

00000596 <__divsf3>:
     596:	a8 e1       	ldi	r26, 0x18	; 24
     598:	b0 e0       	ldi	r27, 0x00	; 0
     59a:	e0 ed       	ldi	r30, 0xD0	; 208
     59c:	f2 e0       	ldi	r31, 0x02	; 2
     59e:	c4 c9       	rjmp	.-3192   	; 0xfffff928 <__eeprom_end+0xff7ef928>
     5a0:	69 83       	std	Y+1, r22	; 0x01
     5a2:	7a 83       	std	Y+2, r23	; 0x02
     5a4:	8b 83       	std	Y+3, r24	; 0x03
     5a6:	9c 83       	std	Y+4, r25	; 0x04
     5a8:	2d 83       	std	Y+5, r18	; 0x05
     5aa:	3e 83       	std	Y+6, r19	; 0x06
     5ac:	4f 83       	std	Y+7, r20	; 0x07
     5ae:	58 87       	std	Y+8, r21	; 0x08
     5b0:	b9 e0       	ldi	r27, 0x09	; 9
     5b2:	eb 2e       	mov	r14, r27
     5b4:	f1 2c       	mov	r15, r1
     5b6:	ec 0e       	add	r14, r28
     5b8:	fd 1e       	adc	r15, r29
     5ba:	ce 01       	movw	r24, r28
     5bc:	01 96       	adiw	r24, 0x01	; 1
     5be:	b7 01       	movw	r22, r14
     5c0:	0f d2       	rcall	.+1054   	; 0x9e0 <__unpack_f>
     5c2:	8e 01       	movw	r16, r28
     5c4:	0f 5e       	subi	r16, 0xEF	; 239
     5c6:	1f 4f       	sbci	r17, 0xFF	; 255
     5c8:	ce 01       	movw	r24, r28
     5ca:	05 96       	adiw	r24, 0x05	; 5
     5cc:	b8 01       	movw	r22, r16
     5ce:	08 d2       	rcall	.+1040   	; 0x9e0 <__unpack_f>
     5d0:	29 85       	ldd	r18, Y+9	; 0x09
     5d2:	22 30       	cpi	r18, 0x02	; 2
     5d4:	08 f4       	brcc	.+2      	; 0x5d8 <__divsf3+0x42>
     5d6:	7e c0       	rjmp	.+252    	; 0x6d4 <__divsf3+0x13e>
     5d8:	39 89       	ldd	r19, Y+17	; 0x11
     5da:	32 30       	cpi	r19, 0x02	; 2
     5dc:	10 f4       	brcc	.+4      	; 0x5e2 <__divsf3+0x4c>
     5de:	b8 01       	movw	r22, r16
     5e0:	7c c0       	rjmp	.+248    	; 0x6da <__divsf3+0x144>
     5e2:	8a 85       	ldd	r24, Y+10	; 0x0a
     5e4:	9a 89       	ldd	r25, Y+18	; 0x12
     5e6:	89 27       	eor	r24, r25
     5e8:	8a 87       	std	Y+10, r24	; 0x0a
     5ea:	24 30       	cpi	r18, 0x04	; 4
     5ec:	11 f0       	breq	.+4      	; 0x5f2 <__divsf3+0x5c>
     5ee:	22 30       	cpi	r18, 0x02	; 2
     5f0:	31 f4       	brne	.+12     	; 0x5fe <__divsf3+0x68>
     5f2:	23 17       	cp	r18, r19
     5f4:	09 f0       	breq	.+2      	; 0x5f8 <__divsf3+0x62>
     5f6:	6e c0       	rjmp	.+220    	; 0x6d4 <__divsf3+0x13e>
     5f8:	65 e6       	ldi	r22, 0x65	; 101
     5fa:	70 e0       	ldi	r23, 0x00	; 0
     5fc:	6e c0       	rjmp	.+220    	; 0x6da <__divsf3+0x144>
     5fe:	34 30       	cpi	r19, 0x04	; 4
     600:	39 f4       	brne	.+14     	; 0x610 <__divsf3+0x7a>
     602:	1d 86       	std	Y+13, r1	; 0x0d
     604:	1e 86       	std	Y+14, r1	; 0x0e
     606:	1f 86       	std	Y+15, r1	; 0x0f
     608:	18 8a       	std	Y+16, r1	; 0x10
     60a:	1c 86       	std	Y+12, r1	; 0x0c
     60c:	1b 86       	std	Y+11, r1	; 0x0b
     60e:	04 c0       	rjmp	.+8      	; 0x618 <__divsf3+0x82>
     610:	32 30       	cpi	r19, 0x02	; 2
     612:	21 f4       	brne	.+8      	; 0x61c <__divsf3+0x86>
     614:	84 e0       	ldi	r24, 0x04	; 4
     616:	89 87       	std	Y+9, r24	; 0x09
     618:	b7 01       	movw	r22, r14
     61a:	5f c0       	rjmp	.+190    	; 0x6da <__divsf3+0x144>
     61c:	2b 85       	ldd	r18, Y+11	; 0x0b
     61e:	3c 85       	ldd	r19, Y+12	; 0x0c
     620:	8b 89       	ldd	r24, Y+19	; 0x13
     622:	9c 89       	ldd	r25, Y+20	; 0x14
     624:	28 1b       	sub	r18, r24
     626:	39 0b       	sbc	r19, r25
     628:	3c 87       	std	Y+12, r19	; 0x0c
     62a:	2b 87       	std	Y+11, r18	; 0x0b
     62c:	ed 84       	ldd	r14, Y+13	; 0x0d
     62e:	fe 84       	ldd	r15, Y+14	; 0x0e
     630:	0f 85       	ldd	r16, Y+15	; 0x0f
     632:	18 89       	ldd	r17, Y+16	; 0x10
     634:	ad 88       	ldd	r10, Y+21	; 0x15
     636:	be 88       	ldd	r11, Y+22	; 0x16
     638:	cf 88       	ldd	r12, Y+23	; 0x17
     63a:	d8 8c       	ldd	r13, Y+24	; 0x18
     63c:	ea 14       	cp	r14, r10
     63e:	fb 04       	cpc	r15, r11
     640:	0c 05       	cpc	r16, r12
     642:	1d 05       	cpc	r17, r13
     644:	40 f4       	brcc	.+16     	; 0x656 <__divsf3+0xc0>
     646:	ee 0c       	add	r14, r14
     648:	ff 1c       	adc	r15, r15
     64a:	00 1f       	adc	r16, r16
     64c:	11 1f       	adc	r17, r17
     64e:	21 50       	subi	r18, 0x01	; 1
     650:	30 40       	sbci	r19, 0x00	; 0
     652:	3c 87       	std	Y+12, r19	; 0x0c
     654:	2b 87       	std	Y+11, r18	; 0x0b
     656:	20 e0       	ldi	r18, 0x00	; 0
     658:	30 e0       	ldi	r19, 0x00	; 0
     65a:	40 e0       	ldi	r20, 0x00	; 0
     65c:	50 e0       	ldi	r21, 0x00	; 0
     65e:	80 e0       	ldi	r24, 0x00	; 0
     660:	90 e0       	ldi	r25, 0x00	; 0
     662:	a0 e0       	ldi	r26, 0x00	; 0
     664:	b0 e4       	ldi	r27, 0x40	; 64
     666:	60 e0       	ldi	r22, 0x00	; 0
     668:	70 e0       	ldi	r23, 0x00	; 0
     66a:	ea 14       	cp	r14, r10
     66c:	fb 04       	cpc	r15, r11
     66e:	0c 05       	cpc	r16, r12
     670:	1d 05       	cpc	r17, r13
     672:	40 f0       	brcs	.+16     	; 0x684 <__divsf3+0xee>
     674:	28 2b       	or	r18, r24
     676:	39 2b       	or	r19, r25
     678:	4a 2b       	or	r20, r26
     67a:	5b 2b       	or	r21, r27
     67c:	ea 18       	sub	r14, r10
     67e:	fb 08       	sbc	r15, r11
     680:	0c 09       	sbc	r16, r12
     682:	1d 09       	sbc	r17, r13
     684:	b6 95       	lsr	r27
     686:	a7 95       	ror	r26
     688:	97 95       	ror	r25
     68a:	87 95       	ror	r24
     68c:	ee 0c       	add	r14, r14
     68e:	ff 1c       	adc	r15, r15
     690:	00 1f       	adc	r16, r16
     692:	11 1f       	adc	r17, r17
     694:	6f 5f       	subi	r22, 0xFF	; 255
     696:	7f 4f       	sbci	r23, 0xFF	; 255
     698:	6f 31       	cpi	r22, 0x1F	; 31
     69a:	71 05       	cpc	r23, r1
     69c:	31 f7       	brne	.-52     	; 0x66a <__divsf3+0xd4>
     69e:	da 01       	movw	r26, r20
     6a0:	c9 01       	movw	r24, r18
     6a2:	8f 77       	andi	r24, 0x7F	; 127
     6a4:	90 70       	andi	r25, 0x00	; 0
     6a6:	a0 70       	andi	r26, 0x00	; 0
     6a8:	b0 70       	andi	r27, 0x00	; 0
     6aa:	80 34       	cpi	r24, 0x40	; 64
     6ac:	91 05       	cpc	r25, r1
     6ae:	a1 05       	cpc	r26, r1
     6b0:	b1 05       	cpc	r27, r1
     6b2:	61 f4       	brne	.+24     	; 0x6cc <__divsf3+0x136>
     6b4:	27 fd       	sbrc	r18, 7
     6b6:	0a c0       	rjmp	.+20     	; 0x6cc <__divsf3+0x136>
     6b8:	e1 14       	cp	r14, r1
     6ba:	f1 04       	cpc	r15, r1
     6bc:	01 05       	cpc	r16, r1
     6be:	11 05       	cpc	r17, r1
     6c0:	29 f0       	breq	.+10     	; 0x6cc <__divsf3+0x136>
     6c2:	20 5c       	subi	r18, 0xC0	; 192
     6c4:	3f 4f       	sbci	r19, 0xFF	; 255
     6c6:	4f 4f       	sbci	r20, 0xFF	; 255
     6c8:	5f 4f       	sbci	r21, 0xFF	; 255
     6ca:	20 78       	andi	r18, 0x80	; 128
     6cc:	2d 87       	std	Y+13, r18	; 0x0d
     6ce:	3e 87       	std	Y+14, r19	; 0x0e
     6d0:	4f 87       	std	Y+15, r20	; 0x0f
     6d2:	58 8b       	std	Y+16, r21	; 0x10
     6d4:	be 01       	movw	r22, r28
     6d6:	67 5f       	subi	r22, 0xF7	; 247
     6d8:	7f 4f       	sbci	r23, 0xFF	; 255
     6da:	cb 01       	movw	r24, r22
     6dc:	ac d0       	rcall	.+344    	; 0x836 <__pack_f>
     6de:	68 96       	adiw	r28, 0x18	; 24
     6e0:	ea e0       	ldi	r30, 0x0A	; 10
     6e2:	3e c9       	rjmp	.-3460   	; 0xfffff960 <__eeprom_end+0xff7ef960>

000006e4 <__floatsisf>:
     6e4:	a8 e0       	ldi	r26, 0x08	; 8
     6e6:	b0 e0       	ldi	r27, 0x00	; 0
     6e8:	e7 e7       	ldi	r30, 0x77	; 119
     6ea:	f3 e0       	ldi	r31, 0x03	; 3
     6ec:	1e c9       	rjmp	.-3524   	; 0xfffff92a <__eeprom_end+0xff7ef92a>
     6ee:	9b 01       	movw	r18, r22
     6f0:	ac 01       	movw	r20, r24
     6f2:	83 e0       	ldi	r24, 0x03	; 3
     6f4:	89 83       	std	Y+1, r24	; 0x01
     6f6:	da 01       	movw	r26, r20
     6f8:	c9 01       	movw	r24, r18
     6fa:	88 27       	eor	r24, r24
     6fc:	b7 fd       	sbrc	r27, 7
     6fe:	83 95       	inc	r24
     700:	99 27       	eor	r25, r25
     702:	aa 27       	eor	r26, r26
     704:	bb 27       	eor	r27, r27
     706:	b8 2e       	mov	r11, r24
     708:	21 15       	cp	r18, r1
     70a:	31 05       	cpc	r19, r1
     70c:	41 05       	cpc	r20, r1
     70e:	51 05       	cpc	r21, r1
     710:	19 f4       	brne	.+6      	; 0x718 <__floatsisf+0x34>
     712:	82 e0       	ldi	r24, 0x02	; 2
     714:	89 83       	std	Y+1, r24	; 0x01
     716:	39 c0       	rjmp	.+114    	; 0x78a <__floatsisf+0xa6>
     718:	88 23       	and	r24, r24
     71a:	a9 f0       	breq	.+42     	; 0x746 <__floatsisf+0x62>
     71c:	20 30       	cpi	r18, 0x00	; 0
     71e:	80 e0       	ldi	r24, 0x00	; 0
     720:	38 07       	cpc	r19, r24
     722:	80 e0       	ldi	r24, 0x00	; 0
     724:	48 07       	cpc	r20, r24
     726:	80 e8       	ldi	r24, 0x80	; 128
     728:	58 07       	cpc	r21, r24
     72a:	29 f4       	brne	.+10     	; 0x736 <__floatsisf+0x52>
     72c:	60 e0       	ldi	r22, 0x00	; 0
     72e:	70 e0       	ldi	r23, 0x00	; 0
     730:	80 e0       	ldi	r24, 0x00	; 0
     732:	9f ec       	ldi	r25, 0xCF	; 207
     734:	2e c0       	rjmp	.+92     	; 0x792 <__floatsisf+0xae>
     736:	ee 24       	eor	r14, r14
     738:	ff 24       	eor	r15, r15
     73a:	87 01       	movw	r16, r14
     73c:	e2 1a       	sub	r14, r18
     73e:	f3 0a       	sbc	r15, r19
     740:	04 0b       	sbc	r16, r20
     742:	15 0b       	sbc	r17, r21
     744:	02 c0       	rjmp	.+4      	; 0x74a <__floatsisf+0x66>
     746:	79 01       	movw	r14, r18
     748:	8a 01       	movw	r16, r20
     74a:	8e e1       	ldi	r24, 0x1E	; 30
     74c:	c8 2e       	mov	r12, r24
     74e:	d1 2c       	mov	r13, r1
     750:	dc 82       	std	Y+4, r13	; 0x04
     752:	cb 82       	std	Y+3, r12	; 0x03
     754:	ed 82       	std	Y+5, r14	; 0x05
     756:	fe 82       	std	Y+6, r15	; 0x06
     758:	0f 83       	std	Y+7, r16	; 0x07
     75a:	18 87       	std	Y+8, r17	; 0x08
     75c:	c8 01       	movw	r24, r16
     75e:	b7 01       	movw	r22, r14
     760:	1b d0       	rcall	.+54     	; 0x798 <__clzsi2>
     762:	01 97       	sbiw	r24, 0x01	; 1
     764:	18 16       	cp	r1, r24
     766:	19 06       	cpc	r1, r25
     768:	84 f4       	brge	.+32     	; 0x78a <__floatsisf+0xa6>
     76a:	08 2e       	mov	r0, r24
     76c:	04 c0       	rjmp	.+8      	; 0x776 <__floatsisf+0x92>
     76e:	ee 0c       	add	r14, r14
     770:	ff 1c       	adc	r15, r15
     772:	00 1f       	adc	r16, r16
     774:	11 1f       	adc	r17, r17
     776:	0a 94       	dec	r0
     778:	d2 f7       	brpl	.-12     	; 0x76e <__floatsisf+0x8a>
     77a:	ed 82       	std	Y+5, r14	; 0x05
     77c:	fe 82       	std	Y+6, r15	; 0x06
     77e:	0f 83       	std	Y+7, r16	; 0x07
     780:	18 87       	std	Y+8, r17	; 0x08
     782:	c8 1a       	sub	r12, r24
     784:	d9 0a       	sbc	r13, r25
     786:	dc 82       	std	Y+4, r13	; 0x04
     788:	cb 82       	std	Y+3, r12	; 0x03
     78a:	ba 82       	std	Y+2, r11	; 0x02
     78c:	ce 01       	movw	r24, r28
     78e:	01 96       	adiw	r24, 0x01	; 1
     790:	52 d0       	rcall	.+164    	; 0x836 <__pack_f>
     792:	28 96       	adiw	r28, 0x08	; 8
     794:	e9 e0       	ldi	r30, 0x09	; 9
     796:	e5 c8       	rjmp	.-3638   	; 0xfffff962 <__eeprom_end+0xff7ef962>

00000798 <__clzsi2>:
     798:	ef 92       	push	r14
     79a:	ff 92       	push	r15
     79c:	0f 93       	push	r16
     79e:	1f 93       	push	r17
     7a0:	7b 01       	movw	r14, r22
     7a2:	8c 01       	movw	r16, r24
     7a4:	80 e0       	ldi	r24, 0x00	; 0
     7a6:	e8 16       	cp	r14, r24
     7a8:	80 e0       	ldi	r24, 0x00	; 0
     7aa:	f8 06       	cpc	r15, r24
     7ac:	81 e0       	ldi	r24, 0x01	; 1
     7ae:	08 07       	cpc	r16, r24
     7b0:	80 e0       	ldi	r24, 0x00	; 0
     7b2:	18 07       	cpc	r17, r24
     7b4:	88 f4       	brcc	.+34     	; 0x7d8 <__clzsi2+0x40>
     7b6:	8f ef       	ldi	r24, 0xFF	; 255
     7b8:	e8 16       	cp	r14, r24
     7ba:	f1 04       	cpc	r15, r1
     7bc:	01 05       	cpc	r16, r1
     7be:	11 05       	cpc	r17, r1
     7c0:	31 f0       	breq	.+12     	; 0x7ce <__clzsi2+0x36>
     7c2:	28 f0       	brcs	.+10     	; 0x7ce <__clzsi2+0x36>
     7c4:	88 e0       	ldi	r24, 0x08	; 8
     7c6:	90 e0       	ldi	r25, 0x00	; 0
     7c8:	a0 e0       	ldi	r26, 0x00	; 0
     7ca:	b0 e0       	ldi	r27, 0x00	; 0
     7cc:	17 c0       	rjmp	.+46     	; 0x7fc <__clzsi2+0x64>
     7ce:	80 e0       	ldi	r24, 0x00	; 0
     7d0:	90 e0       	ldi	r25, 0x00	; 0
     7d2:	a0 e0       	ldi	r26, 0x00	; 0
     7d4:	b0 e0       	ldi	r27, 0x00	; 0
     7d6:	12 c0       	rjmp	.+36     	; 0x7fc <__clzsi2+0x64>
     7d8:	80 e0       	ldi	r24, 0x00	; 0
     7da:	e8 16       	cp	r14, r24
     7dc:	80 e0       	ldi	r24, 0x00	; 0
     7de:	f8 06       	cpc	r15, r24
     7e0:	80 e0       	ldi	r24, 0x00	; 0
     7e2:	08 07       	cpc	r16, r24
     7e4:	81 e0       	ldi	r24, 0x01	; 1
     7e6:	18 07       	cpc	r17, r24
     7e8:	28 f0       	brcs	.+10     	; 0x7f4 <__clzsi2+0x5c>
     7ea:	88 e1       	ldi	r24, 0x18	; 24
     7ec:	90 e0       	ldi	r25, 0x00	; 0
     7ee:	a0 e0       	ldi	r26, 0x00	; 0
     7f0:	b0 e0       	ldi	r27, 0x00	; 0
     7f2:	04 c0       	rjmp	.+8      	; 0x7fc <__clzsi2+0x64>
     7f4:	80 e1       	ldi	r24, 0x10	; 16
     7f6:	90 e0       	ldi	r25, 0x00	; 0
     7f8:	a0 e0       	ldi	r26, 0x00	; 0
     7fa:	b0 e0       	ldi	r27, 0x00	; 0
     7fc:	20 e2       	ldi	r18, 0x20	; 32
     7fe:	30 e0       	ldi	r19, 0x00	; 0
     800:	40 e0       	ldi	r20, 0x00	; 0
     802:	50 e0       	ldi	r21, 0x00	; 0
     804:	28 1b       	sub	r18, r24
     806:	39 0b       	sbc	r19, r25
     808:	4a 0b       	sbc	r20, r26
     80a:	5b 0b       	sbc	r21, r27
     80c:	04 c0       	rjmp	.+8      	; 0x816 <__clzsi2+0x7e>
     80e:	16 95       	lsr	r17
     810:	07 95       	ror	r16
     812:	f7 94       	ror	r15
     814:	e7 94       	ror	r14
     816:	8a 95       	dec	r24
     818:	d2 f7       	brpl	.-12     	; 0x80e <__clzsi2+0x76>
     81a:	f7 01       	movw	r30, r14
     81c:	e3 59       	subi	r30, 0x93	; 147
     81e:	ff 4f       	sbci	r31, 0xFF	; 255
     820:	80 81       	ld	r24, Z
     822:	28 1b       	sub	r18, r24
     824:	31 09       	sbc	r19, r1
     826:	41 09       	sbc	r20, r1
     828:	51 09       	sbc	r21, r1
     82a:	c9 01       	movw	r24, r18
     82c:	1f 91       	pop	r17
     82e:	0f 91       	pop	r16
     830:	ff 90       	pop	r15
     832:	ef 90       	pop	r14
     834:	08 95       	ret

00000836 <__pack_f>:
     836:	df 92       	push	r13
     838:	ef 92       	push	r14
     83a:	ff 92       	push	r15
     83c:	0f 93       	push	r16
     83e:	1f 93       	push	r17
     840:	fc 01       	movw	r30, r24
     842:	e4 80       	ldd	r14, Z+4	; 0x04
     844:	f5 80       	ldd	r15, Z+5	; 0x05
     846:	06 81       	ldd	r16, Z+6	; 0x06
     848:	17 81       	ldd	r17, Z+7	; 0x07
     84a:	d1 80       	ldd	r13, Z+1	; 0x01
     84c:	80 81       	ld	r24, Z
     84e:	82 30       	cpi	r24, 0x02	; 2
     850:	48 f4       	brcc	.+18     	; 0x864 <__pack_f+0x2e>
     852:	80 e0       	ldi	r24, 0x00	; 0
     854:	90 e0       	ldi	r25, 0x00	; 0
     856:	a0 e1       	ldi	r26, 0x10	; 16
     858:	b0 e0       	ldi	r27, 0x00	; 0
     85a:	e8 2a       	or	r14, r24
     85c:	f9 2a       	or	r15, r25
     85e:	0a 2b       	or	r16, r26
     860:	1b 2b       	or	r17, r27
     862:	a5 c0       	rjmp	.+330    	; 0x9ae <__pack_f+0x178>
     864:	84 30       	cpi	r24, 0x04	; 4
     866:	09 f4       	brne	.+2      	; 0x86a <__pack_f+0x34>
     868:	9f c0       	rjmp	.+318    	; 0x9a8 <__pack_f+0x172>
     86a:	82 30       	cpi	r24, 0x02	; 2
     86c:	21 f4       	brne	.+8      	; 0x876 <__pack_f+0x40>
     86e:	ee 24       	eor	r14, r14
     870:	ff 24       	eor	r15, r15
     872:	87 01       	movw	r16, r14
     874:	05 c0       	rjmp	.+10     	; 0x880 <__pack_f+0x4a>
     876:	e1 14       	cp	r14, r1
     878:	f1 04       	cpc	r15, r1
     87a:	01 05       	cpc	r16, r1
     87c:	11 05       	cpc	r17, r1
     87e:	19 f4       	brne	.+6      	; 0x886 <__pack_f+0x50>
     880:	e0 e0       	ldi	r30, 0x00	; 0
     882:	f0 e0       	ldi	r31, 0x00	; 0
     884:	96 c0       	rjmp	.+300    	; 0x9b2 <__pack_f+0x17c>
     886:	62 81       	ldd	r22, Z+2	; 0x02
     888:	73 81       	ldd	r23, Z+3	; 0x03
     88a:	9f ef       	ldi	r25, 0xFF	; 255
     88c:	62 38       	cpi	r22, 0x82	; 130
     88e:	79 07       	cpc	r23, r25
     890:	0c f0       	brlt	.+2      	; 0x894 <__pack_f+0x5e>
     892:	5b c0       	rjmp	.+182    	; 0x94a <__pack_f+0x114>
     894:	22 e8       	ldi	r18, 0x82	; 130
     896:	3f ef       	ldi	r19, 0xFF	; 255
     898:	26 1b       	sub	r18, r22
     89a:	37 0b       	sbc	r19, r23
     89c:	2a 31       	cpi	r18, 0x1A	; 26
     89e:	31 05       	cpc	r19, r1
     8a0:	2c f0       	brlt	.+10     	; 0x8ac <__pack_f+0x76>
     8a2:	20 e0       	ldi	r18, 0x00	; 0
     8a4:	30 e0       	ldi	r19, 0x00	; 0
     8a6:	40 e0       	ldi	r20, 0x00	; 0
     8a8:	50 e0       	ldi	r21, 0x00	; 0
     8aa:	2a c0       	rjmp	.+84     	; 0x900 <__pack_f+0xca>
     8ac:	b8 01       	movw	r22, r16
     8ae:	a7 01       	movw	r20, r14
     8b0:	02 2e       	mov	r0, r18
     8b2:	04 c0       	rjmp	.+8      	; 0x8bc <__pack_f+0x86>
     8b4:	76 95       	lsr	r23
     8b6:	67 95       	ror	r22
     8b8:	57 95       	ror	r21
     8ba:	47 95       	ror	r20
     8bc:	0a 94       	dec	r0
     8be:	d2 f7       	brpl	.-12     	; 0x8b4 <__pack_f+0x7e>
     8c0:	81 e0       	ldi	r24, 0x01	; 1
     8c2:	90 e0       	ldi	r25, 0x00	; 0
     8c4:	a0 e0       	ldi	r26, 0x00	; 0
     8c6:	b0 e0       	ldi	r27, 0x00	; 0
     8c8:	04 c0       	rjmp	.+8      	; 0x8d2 <__pack_f+0x9c>
     8ca:	88 0f       	add	r24, r24
     8cc:	99 1f       	adc	r25, r25
     8ce:	aa 1f       	adc	r26, r26
     8d0:	bb 1f       	adc	r27, r27
     8d2:	2a 95       	dec	r18
     8d4:	d2 f7       	brpl	.-12     	; 0x8ca <__pack_f+0x94>
     8d6:	01 97       	sbiw	r24, 0x01	; 1
     8d8:	a1 09       	sbc	r26, r1
     8da:	b1 09       	sbc	r27, r1
     8dc:	8e 21       	and	r24, r14
     8de:	9f 21       	and	r25, r15
     8e0:	a0 23       	and	r26, r16
     8e2:	b1 23       	and	r27, r17
     8e4:	00 97       	sbiw	r24, 0x00	; 0
     8e6:	a1 05       	cpc	r26, r1
     8e8:	b1 05       	cpc	r27, r1
     8ea:	21 f0       	breq	.+8      	; 0x8f4 <__pack_f+0xbe>
     8ec:	81 e0       	ldi	r24, 0x01	; 1
     8ee:	90 e0       	ldi	r25, 0x00	; 0
     8f0:	a0 e0       	ldi	r26, 0x00	; 0
     8f2:	b0 e0       	ldi	r27, 0x00	; 0
     8f4:	9a 01       	movw	r18, r20
     8f6:	ab 01       	movw	r20, r22
     8f8:	28 2b       	or	r18, r24
     8fa:	39 2b       	or	r19, r25
     8fc:	4a 2b       	or	r20, r26
     8fe:	5b 2b       	or	r21, r27
     900:	da 01       	movw	r26, r20
     902:	c9 01       	movw	r24, r18
     904:	8f 77       	andi	r24, 0x7F	; 127
     906:	90 70       	andi	r25, 0x00	; 0
     908:	a0 70       	andi	r26, 0x00	; 0
     90a:	b0 70       	andi	r27, 0x00	; 0
     90c:	80 34       	cpi	r24, 0x40	; 64
     90e:	91 05       	cpc	r25, r1
     910:	a1 05       	cpc	r26, r1
     912:	b1 05       	cpc	r27, r1
     914:	39 f4       	brne	.+14     	; 0x924 <__pack_f+0xee>
     916:	27 ff       	sbrs	r18, 7
     918:	09 c0       	rjmp	.+18     	; 0x92c <__pack_f+0xf6>
     91a:	20 5c       	subi	r18, 0xC0	; 192
     91c:	3f 4f       	sbci	r19, 0xFF	; 255
     91e:	4f 4f       	sbci	r20, 0xFF	; 255
     920:	5f 4f       	sbci	r21, 0xFF	; 255
     922:	04 c0       	rjmp	.+8      	; 0x92c <__pack_f+0xf6>
     924:	21 5c       	subi	r18, 0xC1	; 193
     926:	3f 4f       	sbci	r19, 0xFF	; 255
     928:	4f 4f       	sbci	r20, 0xFF	; 255
     92a:	5f 4f       	sbci	r21, 0xFF	; 255
     92c:	e0 e0       	ldi	r30, 0x00	; 0
     92e:	f0 e0       	ldi	r31, 0x00	; 0
     930:	20 30       	cpi	r18, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	3a 07       	cpc	r19, r26
     936:	a0 e0       	ldi	r26, 0x00	; 0
     938:	4a 07       	cpc	r20, r26
     93a:	a0 e4       	ldi	r26, 0x40	; 64
     93c:	5a 07       	cpc	r21, r26
     93e:	10 f0       	brcs	.+4      	; 0x944 <__pack_f+0x10e>
     940:	e1 e0       	ldi	r30, 0x01	; 1
     942:	f0 e0       	ldi	r31, 0x00	; 0
     944:	79 01       	movw	r14, r18
     946:	8a 01       	movw	r16, r20
     948:	27 c0       	rjmp	.+78     	; 0x998 <__pack_f+0x162>
     94a:	60 38       	cpi	r22, 0x80	; 128
     94c:	71 05       	cpc	r23, r1
     94e:	64 f5       	brge	.+88     	; 0x9a8 <__pack_f+0x172>
     950:	fb 01       	movw	r30, r22
     952:	e1 58       	subi	r30, 0x81	; 129
     954:	ff 4f       	sbci	r31, 0xFF	; 255
     956:	d8 01       	movw	r26, r16
     958:	c7 01       	movw	r24, r14
     95a:	8f 77       	andi	r24, 0x7F	; 127
     95c:	90 70       	andi	r25, 0x00	; 0
     95e:	a0 70       	andi	r26, 0x00	; 0
     960:	b0 70       	andi	r27, 0x00	; 0
     962:	80 34       	cpi	r24, 0x40	; 64
     964:	91 05       	cpc	r25, r1
     966:	a1 05       	cpc	r26, r1
     968:	b1 05       	cpc	r27, r1
     96a:	39 f4       	brne	.+14     	; 0x97a <__pack_f+0x144>
     96c:	e7 fe       	sbrs	r14, 7
     96e:	0d c0       	rjmp	.+26     	; 0x98a <__pack_f+0x154>
     970:	80 e4       	ldi	r24, 0x40	; 64
     972:	90 e0       	ldi	r25, 0x00	; 0
     974:	a0 e0       	ldi	r26, 0x00	; 0
     976:	b0 e0       	ldi	r27, 0x00	; 0
     978:	04 c0       	rjmp	.+8      	; 0x982 <__pack_f+0x14c>
     97a:	8f e3       	ldi	r24, 0x3F	; 63
     97c:	90 e0       	ldi	r25, 0x00	; 0
     97e:	a0 e0       	ldi	r26, 0x00	; 0
     980:	b0 e0       	ldi	r27, 0x00	; 0
     982:	e8 0e       	add	r14, r24
     984:	f9 1e       	adc	r15, r25
     986:	0a 1f       	adc	r16, r26
     988:	1b 1f       	adc	r17, r27
     98a:	17 ff       	sbrs	r17, 7
     98c:	05 c0       	rjmp	.+10     	; 0x998 <__pack_f+0x162>
     98e:	16 95       	lsr	r17
     990:	07 95       	ror	r16
     992:	f7 94       	ror	r15
     994:	e7 94       	ror	r14
     996:	31 96       	adiw	r30, 0x01	; 1
     998:	87 e0       	ldi	r24, 0x07	; 7
     99a:	16 95       	lsr	r17
     99c:	07 95       	ror	r16
     99e:	f7 94       	ror	r15
     9a0:	e7 94       	ror	r14
     9a2:	8a 95       	dec	r24
     9a4:	d1 f7       	brne	.-12     	; 0x99a <__pack_f+0x164>
     9a6:	05 c0       	rjmp	.+10     	; 0x9b2 <__pack_f+0x17c>
     9a8:	ee 24       	eor	r14, r14
     9aa:	ff 24       	eor	r15, r15
     9ac:	87 01       	movw	r16, r14
     9ae:	ef ef       	ldi	r30, 0xFF	; 255
     9b0:	f0 e0       	ldi	r31, 0x00	; 0
     9b2:	6e 2f       	mov	r22, r30
     9b4:	67 95       	ror	r22
     9b6:	66 27       	eor	r22, r22
     9b8:	67 95       	ror	r22
     9ba:	90 2f       	mov	r25, r16
     9bc:	9f 77       	andi	r25, 0x7F	; 127
     9be:	d7 94       	ror	r13
     9c0:	dd 24       	eor	r13, r13
     9c2:	d7 94       	ror	r13
     9c4:	8e 2f       	mov	r24, r30
     9c6:	86 95       	lsr	r24
     9c8:	49 2f       	mov	r20, r25
     9ca:	46 2b       	or	r20, r22
     9cc:	58 2f       	mov	r21, r24
     9ce:	5d 29       	or	r21, r13
     9d0:	b7 01       	movw	r22, r14
     9d2:	ca 01       	movw	r24, r20
     9d4:	1f 91       	pop	r17
     9d6:	0f 91       	pop	r16
     9d8:	ff 90       	pop	r15
     9da:	ef 90       	pop	r14
     9dc:	df 90       	pop	r13
     9de:	08 95       	ret

000009e0 <__unpack_f>:
     9e0:	fc 01       	movw	r30, r24
     9e2:	db 01       	movw	r26, r22
     9e4:	40 81       	ld	r20, Z
     9e6:	51 81       	ldd	r21, Z+1	; 0x01
     9e8:	22 81       	ldd	r18, Z+2	; 0x02
     9ea:	62 2f       	mov	r22, r18
     9ec:	6f 77       	andi	r22, 0x7F	; 127
     9ee:	70 e0       	ldi	r23, 0x00	; 0
     9f0:	22 1f       	adc	r18, r18
     9f2:	22 27       	eor	r18, r18
     9f4:	22 1f       	adc	r18, r18
     9f6:	93 81       	ldd	r25, Z+3	; 0x03
     9f8:	89 2f       	mov	r24, r25
     9fa:	88 0f       	add	r24, r24
     9fc:	82 2b       	or	r24, r18
     9fe:	28 2f       	mov	r18, r24
     a00:	30 e0       	ldi	r19, 0x00	; 0
     a02:	99 1f       	adc	r25, r25
     a04:	99 27       	eor	r25, r25
     a06:	99 1f       	adc	r25, r25
     a08:	11 96       	adiw	r26, 0x01	; 1
     a0a:	9c 93       	st	X, r25
     a0c:	11 97       	sbiw	r26, 0x01	; 1
     a0e:	21 15       	cp	r18, r1
     a10:	31 05       	cpc	r19, r1
     a12:	a9 f5       	brne	.+106    	; 0xa7e <__unpack_f+0x9e>
     a14:	41 15       	cp	r20, r1
     a16:	51 05       	cpc	r21, r1
     a18:	61 05       	cpc	r22, r1
     a1a:	71 05       	cpc	r23, r1
     a1c:	11 f4       	brne	.+4      	; 0xa22 <__unpack_f+0x42>
     a1e:	82 e0       	ldi	r24, 0x02	; 2
     a20:	37 c0       	rjmp	.+110    	; 0xa90 <__unpack_f+0xb0>
     a22:	82 e8       	ldi	r24, 0x82	; 130
     a24:	9f ef       	ldi	r25, 0xFF	; 255
     a26:	13 96       	adiw	r26, 0x03	; 3
     a28:	9c 93       	st	X, r25
     a2a:	8e 93       	st	-X, r24
     a2c:	12 97       	sbiw	r26, 0x02	; 2
     a2e:	9a 01       	movw	r18, r20
     a30:	ab 01       	movw	r20, r22
     a32:	67 e0       	ldi	r22, 0x07	; 7
     a34:	22 0f       	add	r18, r18
     a36:	33 1f       	adc	r19, r19
     a38:	44 1f       	adc	r20, r20
     a3a:	55 1f       	adc	r21, r21
     a3c:	6a 95       	dec	r22
     a3e:	d1 f7       	brne	.-12     	; 0xa34 <__unpack_f+0x54>
     a40:	83 e0       	ldi	r24, 0x03	; 3
     a42:	8c 93       	st	X, r24
     a44:	0d c0       	rjmp	.+26     	; 0xa60 <__unpack_f+0x80>
     a46:	22 0f       	add	r18, r18
     a48:	33 1f       	adc	r19, r19
     a4a:	44 1f       	adc	r20, r20
     a4c:	55 1f       	adc	r21, r21
     a4e:	12 96       	adiw	r26, 0x02	; 2
     a50:	8d 91       	ld	r24, X+
     a52:	9c 91       	ld	r25, X
     a54:	13 97       	sbiw	r26, 0x03	; 3
     a56:	01 97       	sbiw	r24, 0x01	; 1
     a58:	13 96       	adiw	r26, 0x03	; 3
     a5a:	9c 93       	st	X, r25
     a5c:	8e 93       	st	-X, r24
     a5e:	12 97       	sbiw	r26, 0x02	; 2
     a60:	20 30       	cpi	r18, 0x00	; 0
     a62:	80 e0       	ldi	r24, 0x00	; 0
     a64:	38 07       	cpc	r19, r24
     a66:	80 e0       	ldi	r24, 0x00	; 0
     a68:	48 07       	cpc	r20, r24
     a6a:	80 e4       	ldi	r24, 0x40	; 64
     a6c:	58 07       	cpc	r21, r24
     a6e:	58 f3       	brcs	.-42     	; 0xa46 <__unpack_f+0x66>
     a70:	14 96       	adiw	r26, 0x04	; 4
     a72:	2d 93       	st	X+, r18
     a74:	3d 93       	st	X+, r19
     a76:	4d 93       	st	X+, r20
     a78:	5c 93       	st	X, r21
     a7a:	17 97       	sbiw	r26, 0x07	; 7
     a7c:	08 95       	ret
     a7e:	2f 3f       	cpi	r18, 0xFF	; 255
     a80:	31 05       	cpc	r19, r1
     a82:	79 f4       	brne	.+30     	; 0xaa2 <__unpack_f+0xc2>
     a84:	41 15       	cp	r20, r1
     a86:	51 05       	cpc	r21, r1
     a88:	61 05       	cpc	r22, r1
     a8a:	71 05       	cpc	r23, r1
     a8c:	19 f4       	brne	.+6      	; 0xa94 <__unpack_f+0xb4>
     a8e:	84 e0       	ldi	r24, 0x04	; 4
     a90:	8c 93       	st	X, r24
     a92:	08 95       	ret
     a94:	64 ff       	sbrs	r22, 4
     a96:	03 c0       	rjmp	.+6      	; 0xa9e <__unpack_f+0xbe>
     a98:	81 e0       	ldi	r24, 0x01	; 1
     a9a:	8c 93       	st	X, r24
     a9c:	12 c0       	rjmp	.+36     	; 0xac2 <__unpack_f+0xe2>
     a9e:	1c 92       	st	X, r1
     aa0:	10 c0       	rjmp	.+32     	; 0xac2 <__unpack_f+0xe2>
     aa2:	2f 57       	subi	r18, 0x7F	; 127
     aa4:	30 40       	sbci	r19, 0x00	; 0
     aa6:	13 96       	adiw	r26, 0x03	; 3
     aa8:	3c 93       	st	X, r19
     aaa:	2e 93       	st	-X, r18
     aac:	12 97       	sbiw	r26, 0x02	; 2
     aae:	83 e0       	ldi	r24, 0x03	; 3
     ab0:	8c 93       	st	X, r24
     ab2:	87 e0       	ldi	r24, 0x07	; 7
     ab4:	44 0f       	add	r20, r20
     ab6:	55 1f       	adc	r21, r21
     ab8:	66 1f       	adc	r22, r22
     aba:	77 1f       	adc	r23, r23
     abc:	8a 95       	dec	r24
     abe:	d1 f7       	brne	.-12     	; 0xab4 <__unpack_f+0xd4>
     ac0:	70 64       	ori	r23, 0x40	; 64
     ac2:	14 96       	adiw	r26, 0x04	; 4
     ac4:	4d 93       	st	X+, r20
     ac6:	5d 93       	st	X+, r21
     ac8:	6d 93       	st	X+, r22
     aca:	7c 93       	st	X, r23
     acc:	17 97       	sbiw	r26, 0x07	; 7
     ace:	08 95       	ret

00000ad0 <_Z8init_allv>:
{
	// Enable 1Hz counter.
//	timer1_enable();

	// set output for red (PB1) and green (PB2) LED.
	DDRB |= (1<<1) | (1<<2);
     ad0:	87 b3       	in	r24, 0x17	; 23
     ad2:	86 60       	ori	r24, 0x06	; 6
     ad4:	87 bb       	out	0x17, r24	; 23
	// set output for triac driver.
	DDRD |= (1<<3) | (1<<4);
     ad6:	81 b3       	in	r24, 0x11	; 17
     ad8:	88 61       	ori	r24, 0x18	; 24
     ada:	81 bb       	out	0x11, r24	; 17
	// set input for push button.
	DDRD &= ~(1<<2);
     adc:	8a 98       	cbi	0x11, 2	; 17
	/* turn on internal pull-up resistor for the switch */
//	BUTTON_PORT |= _BV(BUTTON_BIT);
}
     ade:	08 95       	ret

00000ae0 <_Z8init_ADCv>:
void init_ADC()
{
//	ADCSRA ==> ADEN ADSC ADATE ADIF ADIE ADPS2 ADPS1 ADPS0
	ADCSRA |= (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);	// Set 128 division clock
     ae0:	86 b1       	in	r24, 0x06	; 6
     ae2:	87 60       	ori	r24, 0x07	; 7
     ae4:	86 b9       	out	0x06, r24	; 6
	ADCSRA |= (1<<ADEN); 							// Enable module
     ae6:	37 9a       	sbi	0x06, 7	; 6
//	ADCSRB &= ~(1<<ADTS0);

//	ADCSRB &= ~(1<<MUX5);							// To select ADC0;

//	ADMUX ==> REFS1 REFS0 ADLAR MUX4 MUX3 MUX2 MUX1 MUX0
	ADMUX &= ~(1<<REFS1);							// AVCC is the Vref
     ae8:	3f 98       	cbi	0x07, 7	; 7
	ADMUX |=  (1<<REFS0);
     aea:	3e 9a       	sbi	0x07, 6	; 7

	ADMUX &= ~(1<<ADLAR);							// Left Adjust result. To ADCH register.
     aec:	3d 98       	cbi	0x07, 5	; 7


//	ADMUX &= ~(1<<MUX4);							// Select ADC0
	ADMUX &= ~(1<<MUX3);
     aee:	3b 98       	cbi	0x07, 3	; 7
	ADMUX &= ~(1<<MUX2);
     af0:	3a 98       	cbi	0x07, 2	; 7
	ADMUX &= ~(1<<MUX1);
     af2:	39 98       	cbi	0x07, 1	; 7
	ADMUX &= ~(1<<MUX0);
     af4:	38 98       	cbi	0x07, 0	; 7

	ADMUX |=  (1<<REFS0);							// Internal 2.56V reference
     af6:	3e 9a       	sbi	0x07, 6	; 7
	ADMUX |=  (1<<REFS1);
     af8:	3f 9a       	sbi	0x07, 7	; 7
}
     afa:	08 95       	ret

00000afc <_Z11motor_startv>:
}

void motor_start()
{
	// LEDs
	PORTB |= (1<<1);
     afc:	c1 9a       	sbi	0x18, 1	; 24
	PORTB &= ~(1<<2);
     afe:	c2 98       	cbi	0x18, 2	; 24

	// Triacs
	PORTD |= (1<<3);
     b00:	93 9a       	sbi	0x12, 3	; 18
	PORTD |= (1<<4);
     b02:	94 9a       	sbi	0x12, 4	; 18
     b04:	88 e8       	ldi	r24, 0x88	; 136
     b06:	93 e1       	ldi	r25, 0x13	; 19
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
     b08:	28 ec       	ldi	r18, 0xC8	; 200
     b0a:	30 e0       	ldi	r19, 0x00	; 0
     b0c:	f9 01       	movw	r30, r18
     b0e:	31 97       	sbiw	r30, 0x01	; 1
     b10:	f1 f7       	brne	.-4      	; 0xb0e <_Z11motor_startv+0x12>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b12:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b14:	d9 f7       	brne	.-10     	; 0xb0c <_Z11motor_startv+0x10>
	_delay_ms(500);
	PORTD &= ~(1<<4);
     b16:	94 98       	cbi	0x12, 4	; 18

	motorStatus = 1;
     b18:	81 e0       	ldi	r24, 0x01	; 1
     b1a:	80 93 b0 01 	sts	0x01B0, r24
     b1e:	80 e3       	ldi	r24, 0x30	; 48
     b20:	95 e7       	ldi	r25, 0x75	; 117
     b22:	28 ec       	ldi	r18, 0xC8	; 200
     b24:	30 e0       	ldi	r19, 0x00	; 0
     b26:	f9 01       	movw	r30, r18
     b28:	31 97       	sbiw	r30, 0x01	; 1
     b2a:	f1 f7       	brne	.-4      	; 0xb28 <_Z11motor_startv+0x2c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b2c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b2e:	d9 f7       	brne	.-10     	; 0xb26 <_Z11motor_startv+0x2a>

	_delay_ms(3000);
}
     b30:	08 95       	ret

00000b32 <_Z10motor_stopv>:
void motor_stop()
{
	// LEDs
	PORTB &= ~(1<<1);
     b32:	c1 98       	cbi	0x18, 1	; 24
	PORTB |= (1<<2);
     b34:	c2 9a       	sbi	0x18, 2	; 24

	motorStatus = 0;
     b36:	10 92 b0 01 	sts	0x01B0, r1

	// Triacs
	PORTD &= ~(1<<3);
     b3a:	93 98       	cbi	0x12, 3	; 18
	PORTD &= ~(1<<4);
     b3c:	94 98       	cbi	0x12, 4	; 18
     b3e:	80 e3       	ldi	r24, 0x30	; 48
     b40:	95 e7       	ldi	r25, 0x75	; 117
     b42:	28 ec       	ldi	r18, 0xC8	; 200
     b44:	30 e0       	ldi	r19, 0x00	; 0
     b46:	f9 01       	movw	r30, r18
     b48:	31 97       	sbiw	r30, 0x01	; 1
     b4a:	f1 f7       	brne	.-4      	; 0xb48 <_Z10motor_stopv+0x16>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b4c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b4e:	d9 f7       	brne	.-10     	; 0xb46 <_Z10motor_stopv+0x14>

	_delay_ms(3000);
//	PORTD |= (1<<3);
}
     b50:	08 95       	ret

00000b52 <_Z16sensorRead_Levelv>:
{
	uint8_t low, high;
	uint16_t value;
	const uint16_t reference = 300;

	ADMUX &= ~(1<<MUX3);							// Select ADC0
     b52:	3b 98       	cbi	0x07, 3	; 7
	ADMUX &= ~(1<<MUX2);
     b54:	3a 98       	cbi	0x07, 2	; 7
	ADMUX &= ~(1<<MUX1);
     b56:	39 98       	cbi	0x07, 1	; 7
	ADMUX &= ~(1<<MUX0);
     b58:	38 98       	cbi	0x07, 0	; 7

	ADCSRA |= (1<<ADSC);				// Start conversion;
     b5a:	36 9a       	sbi	0x06, 6	; 6
	while (bit_is_set(ADCSRA, ADSC));	// wait until conversion done;
     b5c:	36 99       	sbic	0x06, 6	; 6
     b5e:	fe cf       	rjmp	.-4      	; 0xb5c <_Z16sensorRead_Levelv+0xa>

	low  = ADCL;
     b60:	84 b1       	in	r24, 0x04	; 4
	high = ADCH;
     b62:	45 b1       	in	r20, 0x05	; 5
	value = (high << 8) | low;
//	levelSensorLL_d = value;

	if(value<reference)
     b64:	34 2f       	mov	r19, r20
     b66:	20 e0       	ldi	r18, 0x00	; 0
     b68:	90 e0       	ldi	r25, 0x00	; 0
     b6a:	28 2b       	or	r18, r24
     b6c:	39 2b       	or	r19, r25
     b6e:	2c 52       	subi	r18, 0x2C	; 44
     b70:	31 40       	sbci	r19, 0x01	; 1
     b72:	20 f4       	brcc	.+8      	; 0xb7c <_Z16sensorRead_Levelv+0x2a>
		levelSensorLL = 1;
     b74:	81 e0       	ldi	r24, 0x01	; 1
     b76:	80 93 90 01 	sts	0x0190, r24
     b7a:	02 c0       	rjmp	.+4      	; 0xb80 <_Z16sensorRead_Levelv+0x2e>
	else
		levelSensorLL = 0;
     b7c:	10 92 90 01 	sts	0x0190, r1


	ADMUX &= ~(1<<MUX3);							// Select ADC1
     b80:	3b 98       	cbi	0x07, 3	; 7
	ADMUX &= ~(1<<MUX2);
     b82:	3a 98       	cbi	0x07, 2	; 7
	ADMUX &= ~(1<<MUX1);
     b84:	39 98       	cbi	0x07, 1	; 7
	ADMUX |=  (1<<MUX0);
     b86:	38 9a       	sbi	0x07, 0	; 7

	ADCSRA |= (1<<ADSC);				// Start conversion;
     b88:	36 9a       	sbi	0x06, 6	; 6
	while (bit_is_set(ADCSRA, ADSC));	// wait until conversion done;
     b8a:	36 99       	sbic	0x06, 6	; 6
     b8c:	fe cf       	rjmp	.-4      	; 0xb8a <_Z16sensorRead_Levelv+0x38>

	low  = ADCL;
     b8e:	84 b1       	in	r24, 0x04	; 4
	high = ADCH;
     b90:	45 b1       	in	r20, 0x05	; 5
	value = (high << 8) | low;
//	levelSensorMLL_d = value;

	if(value<reference)
     b92:	34 2f       	mov	r19, r20
     b94:	20 e0       	ldi	r18, 0x00	; 0
     b96:	90 e0       	ldi	r25, 0x00	; 0
     b98:	28 2b       	or	r18, r24
     b9a:	39 2b       	or	r19, r25
     b9c:	2c 52       	subi	r18, 0x2C	; 44
     b9e:	31 40       	sbci	r19, 0x01	; 1
     ba0:	20 f4       	brcc	.+8      	; 0xbaa <_Z16sensorRead_Levelv+0x58>
		levelSensorMLL = 1;
     ba2:	81 e0       	ldi	r24, 0x01	; 1
     ba4:	80 93 8f 01 	sts	0x018F, r24
     ba8:	08 95       	ret
	else
		levelSensorMLL = 0;
     baa:	10 92 8f 01 	sts	0x018F, r1
     bae:	08 95       	ret

00000bb0 <_Z12processTimerv>:
		}
	}
}
void processTimer()
{
	switch (state)
     bb0:	80 91 6e 01 	lds	r24, 0x016E
     bb4:	82 30       	cpi	r24, 0x02	; 2
     bb6:	59 f0       	breq	.+22     	; 0xbce <_Z12processTimerv+0x1e>
     bb8:	83 30       	cpi	r24, 0x03	; 3
     bba:	99 f0       	breq	.+38     	; 0xbe2 <_Z12processTimerv+0x32>
     bbc:	81 30       	cpi	r24, 0x01	; 1
     bbe:	c9 f4       	brne	.+50     	; 0xbf2 <_Z12processTimerv+0x42>
		case WAITING:

			break;

		case TURN_ON:
			motor_start();
     bc0:	9d df       	rcall	.-198    	; 0xafc <_Z11motor_startv>
			timeCounter = 0;
     bc2:	10 92 89 01 	sts	0x0189, r1
     bc6:	10 92 88 01 	sts	0x0188, r1

			state = DECREASING;
     bca:	82 e0       	ldi	r24, 0x02	; 2
     bcc:	07 c0       	rjmp	.+14     	; 0xbdc <_Z12processTimerv+0x2c>
			break;

		case DECREASING:
			if(flag_timeOver)
     bce:	80 91 8a 01 	lds	r24, 0x018A
     bd2:	88 23       	and	r24, r24
     bd4:	71 f0       	breq	.+28     	; 0xbf2 <_Z12processTimerv+0x42>
			{
				flag_timeOver = 0;
     bd6:	10 92 8a 01 	sts	0x018A, r1
				state = TURN_OFF;
     bda:	83 e0       	ldi	r24, 0x03	; 3
     bdc:	80 93 6e 01 	sts	0x016E, r24
     be0:	08 95       	ret
			}
			break;

		case TURN_OFF:
			motor_stop();
     be2:	a7 df       	rcall	.-178    	; 0xb32 <_Z10motor_stopv>
			flag_timeOver = 0;
     be4:	10 92 8a 01 	sts	0x018A, r1
			stateMode = automaticState;
     be8:	81 e0       	ldi	r24, 0x01	; 1
     bea:	80 93 6d 01 	sts	0x016D, r24
			state = WAITING;
     bee:	10 92 6e 01 	sts	0x016E, r1
     bf2:	08 95       	ret

00000bf4 <__vector_8>:
//			Serial.write(pf0[0]);
//		}
	}
}

ISR(TIMER1_OVF_vect)
     bf4:	1f 92       	push	r1
     bf6:	0f 92       	push	r0
     bf8:	0f b6       	in	r0, 0x3f	; 63
     bfa:	0f 92       	push	r0
     bfc:	11 24       	eor	r1, r1
     bfe:	2f 93       	push	r18
     c00:	8f 93       	push	r24
     c02:	9f 93       	push	r25
{
	if(timeCounterSync == 240)
     c04:	80 91 8b 01 	lds	r24, 0x018B
     c08:	80 3f       	cpi	r24, 0xF0	; 240
     c0a:	31 f4       	brne	.+12     	; 0xc18 <__vector_8+0x24>
	{
		flag_timeSync = 1;
     c0c:	81 e0       	ldi	r24, 0x01	; 1
     c0e:	80 93 8c 01 	sts	0x018C, r24
		timeCounterSync = 0;
     c12:	10 92 8b 01 	sts	0x018B, r1
     c16:	05 c0       	rjmp	.+10     	; 0xc22 <__vector_8+0x2e>
	}
	else
	{
		timeCounterSync++;
     c18:	80 91 8b 01 	lds	r24, 0x018B
     c1c:	8f 5f       	subi	r24, 0xFF	; 255
     c1e:	80 93 8b 01 	sts	0x018B, r24
	}

	if(state == DECREASING)
     c22:	80 91 6e 01 	lds	r24, 0x016E
     c26:	82 30       	cpi	r24, 0x02	; 2
     c28:	a1 f4       	brne	.+40     	; 0xc52 <__vector_8+0x5e>
	{
		if(timeCounter > timeSecSet)
     c2a:	80 91 88 01 	lds	r24, 0x0188
     c2e:	90 91 89 01 	lds	r25, 0x0189
     c32:	81 5c       	subi	r24, 0xC1	; 193
     c34:	92 41       	sbci	r25, 0x12	; 18
     c36:	20 f0       	brcs	.+8      	; 0xc40 <__vector_8+0x4c>
		{
			flag_timeOver = 1;
     c38:	81 e0       	ldi	r24, 0x01	; 1
     c3a:	80 93 8a 01 	sts	0x018A, r24
     c3e:	09 c0       	rjmp	.+18     	; 0xc52 <__vector_8+0x5e>
		}
		else
		{
			timeCounter++;
     c40:	80 91 88 01 	lds	r24, 0x0188
     c44:	90 91 89 01 	lds	r25, 0x0189
     c48:	01 96       	adiw	r24, 0x01	; 1
     c4a:	90 93 89 01 	sts	0x0189, r25
     c4e:	80 93 88 01 	sts	0x0188, r24
		}
	}
	timeMainCounter++;
     c52:	80 91 8d 01 	lds	r24, 0x018D
     c56:	90 91 8e 01 	lds	r25, 0x018E
     c5a:	01 96       	adiw	r24, 0x01	; 1
     c5c:	90 93 8e 01 	sts	0x018E, r25
     c60:	80 93 8d 01 	sts	0x018D, r24
}
     c64:	9f 91       	pop	r25
     c66:	8f 91       	pop	r24
     c68:	2f 91       	pop	r18
     c6a:	0f 90       	pop	r0
     c6c:	0f be       	out	0x3f, r0	; 63
     c6e:	0f 90       	pop	r0
     c70:	1f 90       	pop	r1
     c72:	18 95       	reti

00000c74 <_Z11comm_Serialv>:
		}
		memset(sInstr,0,sizeof(sInstr));
	}
}

void comm_Serial()
     c74:	0f 93       	push	r16
     c76:	1f 93       	push	r17
     c78:	cf 93       	push	r28
     c7a:	df 93       	push	r29
		inChar = Serial.read();

		if(inChar=='$')
		{
			j2 = 0;
			flag_frameStart = 1;
     c7c:	11 e0       	ldi	r17, 0x01	; 1

		j2++;

		if(j2>=sizeof(sInstrRx))
		{
			memset(sInstrRx,0,sizeof(sInstrRx));
     c7e:	c6 e9       	ldi	r28, 0x96	; 150
     c80:	d1 e0       	ldi	r29, 0x01	; 1
     c82:	0a e0       	ldi	r16, 0x0A	; 10
     c84:	32 c0       	rjmp	.+100    	; 0xcea <_Z11comm_Serialv+0x76>
void comm_Serial()
{
	// Rx - Always listening
	while((Serial.available()>0))	// Reading from serial
	{
		inChar = Serial.read();
     c86:	89 e3       	ldi	r24, 0x39	; 57
     c88:	92 e0       	ldi	r25, 0x02	; 2
     c8a:	6c d4       	rcall	.+2264   	; 0x1564 <_ZN14HardwareSerial4readEv>
     c8c:	98 2f       	mov	r25, r24
     c8e:	80 93 94 01 	sts	0x0194, r24

		if(inChar=='$')
     c92:	84 32       	cpi	r24, 0x24	; 36
     c94:	21 f4       	brne	.+8      	; 0xc9e <_Z11comm_Serialv+0x2a>
		{
			j2 = 0;
     c96:	10 92 93 01 	sts	0x0193, r1
			flag_frameStart = 1;
     c9a:	10 93 95 01 	sts	0x0195, r17
		}

		if(flag_frameStart)
     c9e:	80 91 95 01 	lds	r24, 0x0195
     ca2:	88 23       	and	r24, r24
     ca4:	31 f0       	breq	.+12     	; 0xcb2 <_Z11comm_Serialv+0x3e>
			sInstrRx[j2] = inChar;
     ca6:	e0 91 93 01 	lds	r30, 0x0193
     caa:	f0 e0       	ldi	r31, 0x00	; 0
     cac:	ea 56       	subi	r30, 0x6A	; 106
     cae:	fe 4f       	sbci	r31, 0xFE	; 254
     cb0:	90 83       	st	Z, r25

		j2++;
     cb2:	80 91 93 01 	lds	r24, 0x0193
     cb6:	8f 5f       	subi	r24, 0xFF	; 255
     cb8:	80 93 93 01 	sts	0x0193, r24

		if(j2>=sizeof(sInstrRx))
     cbc:	8a 30       	cpi	r24, 0x0A	; 10
     cbe:	38 f0       	brcs	.+14     	; 0xcce <_Z11comm_Serialv+0x5a>
		{
			memset(sInstrRx,0,sizeof(sInstrRx));
     cc0:	de 01       	movw	r26, r28
     cc2:	e0 2f       	mov	r30, r16
     cc4:	1d 92       	st	X+, r1
     cc6:	ea 95       	dec	r30
     cc8:	e9 f7       	brne	.-6      	; 0xcc4 <_Z11comm_Serialv+0x50>
			j2=0;
     cca:	10 92 93 01 	sts	0x0193, r1
		}

		if(inChar==';')
     cce:	80 91 94 01 	lds	r24, 0x0194
     cd2:	8b 33       	cpi	r24, 0x3B	; 59
     cd4:	51 f4       	brne	.+20     	; 0xcea <_Z11comm_Serialv+0x76>
		{
			if(flag_frameStart)
     cd6:	80 91 95 01 	lds	r24, 0x0195
     cda:	88 23       	and	r24, r24
     cdc:	31 f0       	breq	.+12     	; 0xcea <_Z11comm_Serialv+0x76>
			{
				flag_frameStart = 0;
     cde:	10 92 95 01 	sts	0x0195, r1
//				rLength = j2;
				j2 = 0;
     ce2:	10 92 93 01 	sts	0x0193, r1
				enableTranslate = 1;
     ce6:	10 93 aa 01 	sts	0x01AA, r17
}

void comm_Serial()
{
	// Rx - Always listening
	while((Serial.available()>0))	// Reading from serial
     cea:	89 e3       	ldi	r24, 0x39	; 57
     cec:	92 e0       	ldi	r25, 0x02	; 2
     cee:	09 d4       	rcall	.+2066   	; 0x1502 <_ZN14HardwareSerial9availableEv>
     cf0:	18 16       	cp	r1, r24
     cf2:	19 06       	cpc	r1, r25
     cf4:	44 f2       	brlt	.-112    	; 0xc86 <_Z11comm_Serialv+0x12>
				enableTranslate = 1;
			}
		}
	}

	if(enableTranslate)
     cf6:	80 91 aa 01 	lds	r24, 0x01AA
     cfa:	88 23       	and	r24, r24
     cfc:	61 f1       	breq	.+88     	; 0xd56 <_Z11comm_Serialv+0xe2>
	{
		enableTranslate = 0;
     cfe:	10 92 aa 01 	sts	0x01AA, r1

		char *pi0, *pf0;
		pi0 = strchr(sInstrRx,'$');
     d02:	86 e9       	ldi	r24, 0x96	; 150
     d04:	91 e0       	ldi	r25, 0x01	; 1
     d06:	64 e2       	ldi	r22, 0x24	; 36
     d08:	70 e0       	ldi	r23, 0x00	; 0
     d0a:	dc d6       	rcall	.+3512   	; 0x1ac4 <strchr>
     d0c:	ec 01       	movw	r28, r24
		pf0 = strchr(sInstrRx,';');
     d0e:	86 e9       	ldi	r24, 0x96	; 150
     d10:	91 e0       	ldi	r25, 0x01	; 1
     d12:	6b e3       	ldi	r22, 0x3B	; 59
     d14:	70 e0       	ldi	r23, 0x00	; 0
     d16:	d6 d6       	rcall	.+3500   	; 0x1ac4 <strchr>

		if(pi0!=NULL)
     d18:	20 97       	sbiw	r28, 0x00	; 0
     d1a:	e9 f0       	breq	.+58     	; 0xd56 <_Z11comm_Serialv+0xe2>
		{
			uint8_t l0=0;
			l0 = pf0 - pi0;
     d1c:	8c 1b       	sub	r24, r28
     d1e:	21 e0       	ldi	r18, 0x01	; 1
     d20:	30 e0       	ldi	r19, 0x00	; 0

			int i;
			for(i=1;i<=l0;i++)
     d22:	48 2f       	mov	r20, r24
     d24:	50 e0       	ldi	r21, 0x00	; 0
     d26:	0a c0       	rjmp	.+20     	; 0xd3c <_Z11comm_Serialv+0xc8>
			{
				sInstr[i-1] = pi0[i];
     d28:	f9 01       	movw	r30, r18
     d2a:	e1 56       	subi	r30, 0x61	; 97
     d2c:	fe 4f       	sbci	r31, 0xFE	; 254
     d2e:	de 01       	movw	r26, r28
     d30:	a2 0f       	add	r26, r18
     d32:	b3 1f       	adc	r27, r19
     d34:	8c 91       	ld	r24, X
     d36:	80 83       	st	Z, r24
		{
			uint8_t l0=0;
			l0 = pf0 - pi0;

			int i;
			for(i=1;i<=l0;i++)
     d38:	2f 5f       	subi	r18, 0xFF	; 255
     d3a:	3f 4f       	sbci	r19, 0xFF	; 255
     d3c:	42 17       	cp	r20, r18
     d3e:	53 07       	cpc	r21, r19
     d40:	9c f7       	brge	.-26     	; 0xd28 <_Z11comm_Serialv+0xb4>
			{
				sInstr[i-1] = pi0[i];
			}
			memset(sInstrRx,0,sizeof(sInstrRx));
     d42:	8a e0       	ldi	r24, 0x0A	; 10
     d44:	e6 e9       	ldi	r30, 0x96	; 150
     d46:	f1 e0       	ldi	r31, 0x01	; 1
     d48:	df 01       	movw	r26, r30
     d4a:	1d 92       	st	X+, r1
     d4c:	8a 95       	dec	r24
     d4e:	e9 f7       	brne	.-6      	; 0xd4a <_Z11comm_Serialv+0xd6>

			enableDecode = 1;
     d50:	81 e0       	ldi	r24, 0x01	; 1
     d52:	80 93 ab 01 	sts	0x01AB, r24
//			Serial.println("Error BT!!");
//			Serial.write(pi0[0]);
//			Serial.write(pf0[0]);
//		}
	}
}
     d56:	df 91       	pop	r29
     d58:	cf 91       	pop	r28
     d5a:	1f 91       	pop	r17
     d5c:	0f 91       	pop	r16
     d5e:	08 95       	ret

00000d60 <_Z13handleMessagev>:
			stateMode = automaticState;
			break;
	}
}

void handleMessage()
     d60:	1f 93       	push	r17
{
	if(enableDecode)
     d62:	80 91 ab 01 	lds	r24, 0x01AB
     d66:	88 23       	and	r24, r24
     d68:	c9 f1       	breq	.+114    	; 0xddc <_Z13handleMessagev+0x7c>
	{
		enableDecode = 0;
     d6a:	10 92 ab 01 	sts	0x01AB, r1

		// Getting the opcode
		aux[0] = '0';
     d6e:	80 e3       	ldi	r24, 0x30	; 48
     d70:	80 93 ad 01 	sts	0x01AD, r24
		aux[1] = sInstr[0];
     d74:	80 91 a0 01 	lds	r24, 0x01A0
     d78:	80 93 ae 01 	sts	0x01AE, r24
		aux[2] = '\0';
     d7c:	10 92 af 01 	sts	0x01AF, r1
		opcode = (uint8_t) atoi(aux);
     d80:	8d ea       	ldi	r24, 0xAD	; 173
     d82:	91 e0       	ldi	r25, 0x01	; 1
     d84:	82 d6       	rcall	.+3332   	; 0x1a8a <atoi>
     d86:	80 93 ac 01 	sts	0x01AC, r24

		switch (opcode)
     d8a:	81 30       	cpi	r24, 0x01	; 1
     d8c:	01 f5       	brne	.+64     	; 0xdce <_Z13handleMessagev+0x6e>
// -----------------------------------------------------------------
			case 1:		// Set-up clock
			{
				// Getting the parameters
				uint8_t tmHour, tmMinute;//, tmSecond;
				aux[0] = sInstr[1];
     d8e:	80 91 a1 01 	lds	r24, 0x01A1
     d92:	80 93 ad 01 	sts	0x01AD, r24
				aux[1] = sInstr[2];
     d96:	80 91 a2 01 	lds	r24, 0x01A2
     d9a:	80 93 ae 01 	sts	0x01AE, r24
				aux[2] = '\0';
     d9e:	10 92 af 01 	sts	0x01AF, r1
				tmHour = (uint8_t) atoi(aux);
     da2:	8d ea       	ldi	r24, 0xAD	; 173
     da4:	91 e0       	ldi	r25, 0x01	; 1
     da6:	71 d6       	rcall	.+3298   	; 0x1a8a <atoi>
     da8:	18 2f       	mov	r17, r24

				aux[0] = sInstr[3];
     daa:	80 91 a3 01 	lds	r24, 0x01A3
     dae:	80 93 ad 01 	sts	0x01AD, r24
				aux[1] = sInstr[4];
     db2:	80 91 a4 01 	lds	r24, 0x01A4
     db6:	80 93 ae 01 	sts	0x01AE, r24
				aux[2] = '\0';
				tmMinute = (uint8_t) atoi(aux);
     dba:	8d ea       	ldi	r24, 0xAD	; 173
     dbc:	91 e0       	ldi	r25, 0x01	; 1
     dbe:	65 d6       	rcall	.+3274   	; 0x1a8a <atoi>
//				aux[0] = sInstr[5];
//				aux[1] = sInstr[6];
//				aux[2] = '\0';
//				tmSecond = (uint8_t) atoi(aux);

				timeMainCounter = tmHour*tmMinute;
     dc0:	81 9f       	mul	r24, r17
     dc2:	c0 01       	movw	r24, r0
     dc4:	11 24       	eor	r1, r1
     dc6:	90 93 8e 01 	sts	0x018E, r25
     dca:	80 93 8d 01 	sts	0x018D, r24
//				timeMainCounter = tmHour*tmMinute*tmSecond;
			}
			break;
		}
		memset(sInstr,0,sizeof(sInstr));
     dce:	8a e0       	ldi	r24, 0x0A	; 10
     dd0:	e0 ea       	ldi	r30, 0xA0	; 160
     dd2:	f1 e0       	ldi	r31, 0x01	; 1
     dd4:	df 01       	movw	r26, r30
     dd6:	1d 92       	st	X+, r1
     dd8:	8a 95       	dec	r24
     dda:	e9 f7       	brne	.-6      	; 0xdd6 <_Z13handleMessagev+0x76>
	}
}
     ddc:	1f 91       	pop	r17
     dde:	08 95       	ret

00000de0 <_Z19timeSyncSendCommandv>:
//	return 0;
//}

void timeSyncSendCommand()
{
	Serial.println("$02;");
     de0:	89 e3       	ldi	r24, 0x39	; 57
     de2:	92 e0       	ldi	r25, 0x02	; 2
     de4:	60 e6       	ldi	r22, 0x60	; 96
     de6:	70 e0       	ldi	r23, 0x00	; 0
     de8:	f0 c4       	rjmp	.+2528   	; 0x17ca <_ZN5Print7printlnEPKc>

00000dea <_Z16refreshVariablesv>:
	}
}

void refreshVariables()
{
	if(flag_timeSync)
     dea:	80 91 8c 01 	lds	r24, 0x018C
     dee:	88 23       	and	r24, r24
     df0:	19 f0       	breq	.+6      	; 0xdf8 <_Z16refreshVariablesv+0xe>
	{
		flag_timeSync = 0;
     df2:	10 92 8c 01 	sts	0x018C, r1
		timeSyncSendCommand();
     df6:	f4 df       	rcall	.-24     	; 0xde0 <_Z19timeSyncSendCommandv>
	}
}

void periodVerify2()
{
	if (timeMainCounter < timeMainSet)
     df8:	80 91 8d 01 	lds	r24, 0x018D
     dfc:	90 91 8e 01 	lds	r25, 0x018E
     e00:	80 56       	subi	r24, 0x60	; 96
     e02:	94 45       	sbci	r25, 0x54	; 84
     e04:	38 f4       	brcc	.+14     	; 0xe14 <_Z16refreshVariablesv+0x2a>
	{
		periodo = greenTime;
     e06:	81 e0       	ldi	r24, 0x01	; 1
     e08:	90 e0       	ldi	r25, 0x00	; 0
     e0a:	90 93 87 01 	sts	0x0187, r25
     e0e:	80 93 86 01 	sts	0x0186, r24
     e12:	04 c0       	rjmp	.+8      	; 0xe1c <_Z16refreshVariablesv+0x32>
//		flag_02 = 1;
//		flag_03 = 0;
	}
	else
	{
		periodo = redTime;
     e14:	10 92 87 01 	sts	0x0187, r1
     e18:	10 92 86 01 	sts	0x0186, r1
		timeSyncSendCommand();
	}

	periodVerify2();

	if(button_read)
     e1c:	82 99       	sbic	0x10, 2	; 16
     e1e:	0d c0       	rjmp	.+26     	; 0xe3a <_Z16refreshVariablesv+0x50>
	{
		if(state == DECREASING)
     e20:	80 91 6e 01 	lds	r24, 0x016E
     e24:	82 30       	cpi	r24, 0x02	; 2
     e26:	21 f4       	brne	.+8      	; 0xe30 <_Z16refreshVariablesv+0x46>
		{
			state = TURN_OFF;
     e28:	83 e0       	ldi	r24, 0x03	; 3
     e2a:	80 93 6e 01 	sts	0x016E, r24
     e2e:	08 95       	ret
		}
		else
		{
			stateMode = timerState;
     e30:	10 92 6d 01 	sts	0x016D, r1
			state = TURN_ON;
     e34:	81 e0       	ldi	r24, 0x01	; 1
     e36:	80 93 6e 01 	sts	0x016E, r24
     e3a:	08 95       	ret

00000e3c <_Z8calcIrmsv>:
}
void led_green_off(){
	PORTB &= ~(1<<2);
}

float calcIrms()
     e3c:	6f 92       	push	r6
     e3e:	7f 92       	push	r7
     e40:	8f 92       	push	r8
     e42:	9f 92       	push	r9
     e44:	af 92       	push	r10
     e46:	bf 92       	push	r11
     e48:	cf 92       	push	r12
     e4a:	df 92       	push	r13
     e4c:	ef 92       	push	r14
     e4e:	ff 92       	push	r15
     e50:	0f 93       	push	r16
     e52:	1f 93       	push	r17
     e54:	cf 93       	push	r28
     e56:	df 93       	push	r29
	float I = 0.0;		// Current statement;
	float k = 2020.0;	// sensor constant;
	float R = 310.0;	// burden resistor [ohms];

	// Select ADC0 channel
	ADMUX &= ~(1<<MUX3);
     e58:	3b 98       	cbi	0x07, 3	; 7
	ADMUX &= ~(1<<MUX2);
     e5a:	3a 98       	cbi	0x07, 2	; 7
	ADMUX &= ~(1<<MUX1);
     e5c:	39 98       	cbi	0x07, 1	; 7
	ADMUX &= ~(1<<MUX0);
     e5e:	38 98       	cbi	0x07, 0	; 7
//	Serial.println(buffer);
//	Serial.println("");


	int *adcSamples = NULL;
	adcSamples = (int*)malloc(nPoints_div * sizeof(int));
     e60:	80 e8       	ldi	r24, 0x80	; 128
     e62:	92 e0       	ldi	r25, 0x02	; 2
     e64:	2f d1       	rcall	.+606    	; 0x10c4 <malloc>
     e66:	ec 01       	movw	r28, r24
     e68:	40 e0       	ldi	r20, 0x00	; 0
     e6a:	50 e0       	ldi	r21, 0x00	; 0
     e6c:	81 e0       	ldi	r24, 0x01	; 1
     e6e:	90 e0       	ldi	r25, 0x00	; 0

	// 160.2564 = 16000000/128/13/60.0;
	for(i=0;i<nPoints;i++)
	{
		ADCSRA |= (1<<ADSC);				// Start conversion;
     e70:	36 9a       	sbi	0x06, 6	; 6
		while (bit_is_set(ADCSRA, ADSC));	// wait until conversion done;
     e72:	36 99       	sbic	0x06, 6	; 6
     e74:	fe cf       	rjmp	.-4      	; 0xe72 <_Z8calcIrmsv+0x36>

//		Serial.println((ADCH << 8) | ADCL);

		if(divScale_count == 1)
     e76:	81 30       	cpi	r24, 0x01	; 1
     e78:	91 05       	cpc	r25, r1
     e7a:	a9 f4       	brne	.+42     	; 0xea6 <_Z8calcIrmsv+0x6a>
		{
			low  = ADCL;
     e7c:	84 b1       	in	r24, 0x04	; 4
			high = ADCH;
     e7e:	25 b1       	in	r18, 0x05	; 5

			j = (int) i/divScale;
			adcSamples[j] = (high << 8) | low;
     e80:	fa 01       	movw	r30, r20
     e82:	f5 95       	asr	r31
     e84:	e7 95       	ror	r30
     e86:	f5 95       	asr	r31
     e88:	e7 95       	ror	r30
     e8a:	ee 0f       	add	r30, r30
     e8c:	ff 1f       	adc	r31, r31
     e8e:	ec 0f       	add	r30, r28
     e90:	fd 1f       	adc	r31, r29
     e92:	32 2f       	mov	r19, r18
     e94:	20 e0       	ldi	r18, 0x00	; 0
     e96:	90 e0       	ldi	r25, 0x00	; 0
     e98:	82 2b       	or	r24, r18
     e9a:	93 2b       	or	r25, r19
     e9c:	91 83       	std	Z+1, r25	; 0x01
     e9e:	80 83       	st	Z, r24
     ea0:	84 e0       	ldi	r24, 0x04	; 4
     ea2:	90 e0       	ldi	r25, 0x00	; 0
     ea4:	01 c0       	rjmp	.+2      	; 0xea8 <_Z8calcIrmsv+0x6c>
			divScale_count = divScale;
		}
		else
		{
			divScale_count--;
     ea6:	01 97       	sbiw	r24, 0x01	; 1

	int *adcSamples = NULL;
	adcSamples = (int*)malloc(nPoints_div * sizeof(int));

	// 160.2564 = 16000000/128/13/60.0;
	for(i=0;i<nPoints;i++)
     ea8:	4f 5f       	subi	r20, 0xFF	; 255
     eaa:	5f 4f       	sbci	r21, 0xFF	; 255
     eac:	65 e0       	ldi	r22, 0x05	; 5
     eae:	40 30       	cpi	r20, 0x00	; 0
     eb0:	56 07       	cpc	r21, r22
     eb2:	f1 f6       	brne	.-68     	; 0xe70 <_Z8calcIrmsv+0x34>
//	}
//	Serial.println("SAIU!");


	float *vs = NULL;
	vs = (float*)malloc(nPoints_div * sizeof(float));
     eb4:	80 e0       	ldi	r24, 0x00	; 0
     eb6:	95 e0       	ldi	r25, 0x05	; 5
     eb8:	05 d1       	rcall	.+522    	; 0x10c4 <malloc>
     eba:	79 2e       	mov	r7, r25
     ebc:	c8 2e       	mov	r12, r24
     ebe:	d9 2e       	mov	r13, r25
     ec0:	68 2e       	mov	r6, r24
     ec2:	8e 01       	movw	r16, r28
     ec4:	56 01       	movw	r10, r12
     ec6:	76 01       	movw	r14, r12

	for(i=0;i<nPoints_div;i++)
     ec8:	90 e8       	ldi	r25, 0x80	; 128
     eca:	89 2e       	mov	r8, r25
     ecc:	92 e0       	ldi	r25, 0x02	; 2
     ece:	99 2e       	mov	r9, r25
     ed0:	8c 0e       	add	r8, r28
     ed2:	9d 1e       	adc	r9, r29
	{
		vs[i] = (adcSamples[i]*5.0)/1024.0;
     ed4:	f8 01       	movw	r30, r16
     ed6:	61 91       	ld	r22, Z+
     ed8:	71 91       	ld	r23, Z+
     eda:	8f 01       	movw	r16, r30
     edc:	88 27       	eor	r24, r24
     ede:	77 fd       	sbrc	r23, 7
     ee0:	80 95       	com	r24
     ee2:	98 2f       	mov	r25, r24
     ee4:	ff db       	rcall	.-2050   	; 0x6e4 <__floatsisf>
     ee6:	20 e0       	ldi	r18, 0x00	; 0
     ee8:	30 e0       	ldi	r19, 0x00	; 0
     eea:	40 ea       	ldi	r20, 0xA0	; 160
     eec:	50 e4       	ldi	r21, 0x40	; 64
     eee:	5e da       	rcall	.-2884   	; 0x3ac <__mulsf3>
     ef0:	20 e0       	ldi	r18, 0x00	; 0
     ef2:	30 e0       	ldi	r19, 0x00	; 0
     ef4:	40 e8       	ldi	r20, 0x80	; 128
     ef6:	5a e3       	ldi	r21, 0x3A	; 58
     ef8:	59 da       	rcall	.-2894   	; 0x3ac <__mulsf3>
     efa:	f7 01       	movw	r30, r14
     efc:	61 93       	st	Z+, r22
     efe:	71 93       	st	Z+, r23
     f00:	81 93       	st	Z+, r24
     f02:	91 93       	st	Z+, r25
     f04:	7f 01       	movw	r14, r30


	float *vs = NULL;
	vs = (float*)malloc(nPoints_div * sizeof(float));

	for(i=0;i<nPoints_div;i++)
     f06:	08 15       	cp	r16, r8
     f08:	19 05       	cpc	r17, r9
     f0a:	21 f7       	brne	.-56     	; 0xed4 <_Z8calcIrmsv+0x98>
	{
		vs[i] = (adcSamples[i]*5.0)/1024.0;
	}

	free(adcSamples);
     f0c:	ce 01       	movw	r24, r28
     f0e:	77 d1       	rcall	.+750    	; 0x11fe <free>
     f10:	e6 01       	movw	r28, r12
     f12:	60 e0       	ldi	r22, 0x00	; 0
     f14:	70 e0       	ldi	r23, 0x00	; 0
     f16:	80 e0       	ldi	r24, 0x00	; 0
     f18:	90 e0       	ldi	r25, 0x00	; 0

	// Offset remove.
	float Vmean = 0.0;
	for(i=0;i<nPoints_div;i++)
     f1a:	86 01       	movw	r16, r12
     f1c:	00 50       	subi	r16, 0x00	; 0
     f1e:	1b 4f       	sbci	r17, 0xFB	; 251
		Vmean += vs[i];
     f20:	29 91       	ld	r18, Y+
     f22:	39 91       	ld	r19, Y+
     f24:	49 91       	ld	r20, Y+
     f26:	59 91       	ld	r21, Y+
     f28:	1a da       	rcall	.-3020   	; 0x35e <__addsf3>

	free(adcSamples);

	// Offset remove.
	float Vmean = 0.0;
	for(i=0;i<nPoints_div;i++)
     f2a:	c0 17       	cp	r28, r16
     f2c:	d1 07       	cpc	r29, r17
     f2e:	c1 f7       	brne	.-16     	; 0xf20 <_Z8calcIrmsv+0xe4>
		Vmean += vs[i];

	Vmean = Vmean/nPoints_div;
     f30:	20 e0       	ldi	r18, 0x00	; 0
     f32:	30 e0       	ldi	r19, 0x00	; 0
     f34:	40 ea       	ldi	r20, 0xA0	; 160
     f36:	53 e4       	ldi	r21, 0x43	; 67
     f38:	2e db       	rcall	.-2468   	; 0x596 <__divsf3>
     f3a:	7b 01       	movw	r14, r22
     f3c:	8c 01       	movw	r16, r24

	for(i=0;i<nPoints_div;i++)
		vs[i] = vs[i] - Vmean;
     f3e:	f5 01       	movw	r30, r10
     f40:	60 81       	ld	r22, Z
     f42:	71 81       	ldd	r23, Z+1	; 0x01
     f44:	82 81       	ldd	r24, Z+2	; 0x02
     f46:	93 81       	ldd	r25, Z+3	; 0x03
     f48:	a8 01       	movw	r20, r16
     f4a:	97 01       	movw	r18, r14
     f4c:	dd d9       	rcall	.-3142   	; 0x308 <__subsf3>
     f4e:	f5 01       	movw	r30, r10
     f50:	61 93       	st	Z+, r22
     f52:	71 93       	st	Z+, r23
     f54:	81 93       	st	Z+, r24
     f56:	91 93       	st	Z+, r25
     f58:	5f 01       	movw	r10, r30
	for(i=0;i<nPoints_div;i++)
		Vmean += vs[i];

	Vmean = Vmean/nPoints_div;

	for(i=0;i<nPoints_div;i++)
     f5a:	ec 17       	cp	r30, r28
     f5c:	fd 07       	cpc	r31, r29
     f5e:	79 f7       	brne	.-34     	; 0xf3e <_Z8calcIrmsv+0x102>
		vs[i] = vs[i] - Vmean;

	float *vs2 = NULL;
	vs2 = (float*)malloc(nPoints_div * sizeof(float));
     f60:	80 e0       	ldi	r24, 0x00	; 0
     f62:	95 e0       	ldi	r25, 0x05	; 5
     f64:	af d0       	rcall	.+350    	; 0x10c4 <malloc>
     f66:	b9 2e       	mov	r11, r25
     f68:	e8 2e       	mov	r14, r24
     f6a:	f9 2e       	mov	r15, r25
     f6c:	a8 2e       	mov	r10, r24
     f6e:	c0 e0       	ldi	r28, 0x00	; 0
     f70:	d0 e0       	ldi	r29, 0x00	; 0

	// Power signal
	for(i=0;i<nPoints_div;i++)
		vs2[i] = vs[i]*vs[i];
     f72:	f6 01       	movw	r30, r12
     f74:	ec 0f       	add	r30, r28
     f76:	fd 1f       	adc	r31, r29
     f78:	20 81       	ld	r18, Z
     f7a:	31 81       	ldd	r19, Z+1	; 0x01
     f7c:	42 81       	ldd	r20, Z+2	; 0x02
     f7e:	53 81       	ldd	r21, Z+3	; 0x03
     f80:	87 01       	movw	r16, r14
     f82:	0c 0f       	add	r16, r28
     f84:	1d 1f       	adc	r17, r29
     f86:	ca 01       	movw	r24, r20
     f88:	b9 01       	movw	r22, r18
     f8a:	10 da       	rcall	.-3040   	; 0x3ac <__mulsf3>
     f8c:	f8 01       	movw	r30, r16
     f8e:	60 83       	st	Z, r22
     f90:	71 83       	std	Z+1, r23	; 0x01
     f92:	82 83       	std	Z+2, r24	; 0x02
     f94:	93 83       	std	Z+3, r25	; 0x03
     f96:	24 96       	adiw	r28, 0x04	; 4

	float *vs2 = NULL;
	vs2 = (float*)malloc(nPoints_div * sizeof(float));

	// Power signal
	for(i=0;i<nPoints_div;i++)
     f98:	f5 e0       	ldi	r31, 0x05	; 5
     f9a:	c0 30       	cpi	r28, 0x00	; 0
     f9c:	df 07       	cpc	r29, r31
     f9e:	49 f7       	brne	.-46     	; 0xf72 <_Z8calcIrmsv+0x136>
		vs2[i] = vs[i]*vs[i];

	free(vs);
     fa0:	c3 01       	movw	r24, r6
     fa2:	2d d1       	rcall	.+602    	; 0x11fe <free>
     fa4:	e7 01       	movw	r28, r14
     fa6:	0f 2e       	mov	r0, r31
     fa8:	f0 e0       	ldi	r31, 0x00	; 0
     faa:	ef 2e       	mov	r14, r31
     fac:	f0 e0       	ldi	r31, 0x00	; 0
     fae:	ff 2e       	mov	r15, r31
     fb0:	f0 e0       	ldi	r31, 0x00	; 0
     fb2:	0f 2f       	mov	r16, r31
     fb4:	f0 e0       	ldi	r31, 0x00	; 0
     fb6:	1f 2f       	mov	r17, r31
     fb8:	f0 2d       	mov	r31, r0

	float sum=0;
	float V2mean;

	// mean finder
	for(i=0;i<nPoints_div;i++)
     fba:	c1 2c       	mov	r12, r1
     fbc:	85 e0       	ldi	r24, 0x05	; 5
     fbe:	d8 2e       	mov	r13, r24
     fc0:	cc 0e       	add	r12, r28
     fc2:	dd 1e       	adc	r13, r29
		sum += vs2[i];
     fc4:	c8 01       	movw	r24, r16
     fc6:	b7 01       	movw	r22, r14
     fc8:	29 91       	ld	r18, Y+
     fca:	39 91       	ld	r19, Y+
     fcc:	49 91       	ld	r20, Y+
     fce:	59 91       	ld	r21, Y+
     fd0:	c6 d9       	rcall	.-3188   	; 0x35e <__addsf3>
     fd2:	7b 01       	movw	r14, r22
     fd4:	8c 01       	movw	r16, r24

	float sum=0;
	float V2mean;

	// mean finder
	for(i=0;i<nPoints_div;i++)
     fd6:	cc 15       	cp	r28, r12
     fd8:	dd 05       	cpc	r29, r13
     fda:	a1 f7       	brne	.-24     	; 0xfc4 <_Z8calcIrmsv+0x188>
		sum += vs2[i];
	V2mean = sum/nPoints_div;

	free(vs2);
     fdc:	c5 01       	movw	r24, r10
     fde:	0f d1       	rcall	.+542    	; 0x11fe <free>

	// RMS equation
	I = (k*sqrt(V2mean))/R;
     fe0:	c8 01       	movw	r24, r16
     fe2:	b7 01       	movw	r22, r14
     fe4:	20 e0       	ldi	r18, 0x00	; 0
     fe6:	30 e0       	ldi	r19, 0x00	; 0
     fe8:	40 ea       	ldi	r20, 0xA0	; 160
     fea:	53 e4       	ldi	r21, 0x43	; 67
     fec:	d4 da       	rcall	.-2648   	; 0x596 <__divsf3>
     fee:	d5 d4       	rcall	.+2474   	; 0x199a <sqrt>
     ff0:	20 e0       	ldi	r18, 0x00	; 0
     ff2:	30 e8       	ldi	r19, 0x80	; 128
     ff4:	4c ef       	ldi	r20, 0xFC	; 252
     ff6:	54 e4       	ldi	r21, 0x44	; 68
     ff8:	d9 d9       	rcall	.-3150   	; 0x3ac <__mulsf3>
     ffa:	20 e0       	ldi	r18, 0x00	; 0
     ffc:	30 e0       	ldi	r19, 0x00	; 0
     ffe:	4b e9       	ldi	r20, 0x9B	; 155
    1000:	53 e4       	ldi	r21, 0x43	; 67
    1002:	c9 da       	rcall	.-2670   	; 0x596 <__divsf3>

	return I;
}
    1004:	df 91       	pop	r29
    1006:	cf 91       	pop	r28
    1008:	1f 91       	pop	r17
    100a:	0f 91       	pop	r16
    100c:	ff 90       	pop	r15
    100e:	ef 90       	pop	r14
    1010:	df 90       	pop	r13
    1012:	cf 90       	pop	r12
    1014:	bf 90       	pop	r11
    1016:	af 90       	pop	r10
    1018:	9f 90       	pop	r9
    101a:	8f 90       	pop	r8
    101c:	7f 90       	pop	r7
    101e:	6f 90       	pop	r6
    1020:	08 95       	ret

00001022 <_Z22motorControl_bySensorsv>:
//		levelSensorHL = 0;
}
void motorControl_bySensors()
{
	float Irms;
	Irms = calcIrms();
    1022:	0c df       	rcall	.-488    	; 0xe3c <_Z8calcIrmsv>

	sensorRead_Level();
    1024:	96 dd       	rcall	.-1236   	; 0xb52 <_Z16sensorRead_Levelv>

	if(levelSensorMLL)
    1026:	80 91 8f 01 	lds	r24, 0x018F
    102a:	88 23       	and	r24, r24
    102c:	51 f0       	breq	.+20     	; 0x1042 <_Z22motorControl_bySensorsv+0x20>
	{
		if(!flag_MLL)
    102e:	80 91 92 01 	lds	r24, 0x0192
    1032:	88 23       	and	r24, r24
    1034:	31 f4       	brne	.+12     	; 0x1042 <_Z22motorControl_bySensorsv+0x20>
		{
			flag_LL = 0;
    1036:	10 92 91 01 	sts	0x0191, r1
			flag_MLL = 1;
    103a:	81 e0       	ldi	r24, 0x01	; 1
    103c:	80 93 92 01 	sts	0x0192, r24

			motor_start();
    1040:	5d dd       	rcall	.-1350   	; 0xafc <_Z11motor_startv>
		}
	}

	if(!levelSensorLL)
    1042:	80 91 90 01 	lds	r24, 0x0190
    1046:	88 23       	and	r24, r24
    1048:	51 f4       	brne	.+20     	; 0x105e <_Z22motorControl_bySensorsv+0x3c>
	{
		if(!flag_LL)
    104a:	80 91 91 01 	lds	r24, 0x0191
    104e:	88 23       	and	r24, r24
    1050:	31 f4       	brne	.+12     	; 0x105e <_Z22motorControl_bySensorsv+0x3c>
		{
			flag_LL = 1;
    1052:	81 e0       	ldi	r24, 0x01	; 1
    1054:	80 93 91 01 	sts	0x0191, r24
			flag_MLL = 0;
    1058:	10 92 92 01 	sts	0x0192, r1

			motor_stop();
    105c:	6a cd       	rjmp	.-1324   	; 0xb32 <_Z10motor_stopv>
    105e:	08 95       	ret

00001060 <_Z19motorPeriodDecisionv>:
		}
	}
}
void motorPeriodDecision()
{
	switch (periodo)
    1060:	80 91 86 01 	lds	r24, 0x0186
    1064:	90 91 87 01 	lds	r25, 0x0187
    1068:	00 97       	sbiw	r24, 0x00	; 0
    106a:	19 f0       	breq	.+6      	; 0x1072 <_Z19motorPeriodDecisionv+0x12>
    106c:	01 97       	sbiw	r24, 0x01	; 1
    106e:	61 f4       	brne	.+24     	; 0x1088 <_Z19motorPeriodDecisionv+0x28>
    1070:	0a c0       	rjmp	.+20     	; 0x1086 <_Z19motorPeriodDecisionv+0x26>
	{
	case redTime:
		if(motorStatus)
    1072:	80 91 b0 01 	lds	r24, 0x01B0
    1076:	88 23       	and	r24, r24
    1078:	39 f0       	breq	.+14     	; 0x1088 <_Z19motorPeriodDecisionv+0x28>
		{
			motor_stop();
    107a:	5b dd       	rcall	.-1354   	; 0xb32 <_Z10motor_stopv>

			flag_MLL = 0;
    107c:	10 92 92 01 	sts	0x0192, r1
			flag_LL = 0;
    1080:	10 92 91 01 	sts	0x0191, r1
    1084:	08 95       	ret
		}
		break;

	case greenTime:
		motorControl_bySensors();
    1086:	cd cf       	rjmp	.-102    	; 0x1022 <_Z22motorControl_bySensorsv>
    1088:	08 95       	ret

0000108a <_Z16processExecutionv>:
			break;
	}
}
void processExecution()
{
	switch(stateMode)
    108a:	80 91 6d 01 	lds	r24, 0x016D
    108e:	88 23       	and	r24, r24
    1090:	19 f0       	breq	.+6      	; 0x1098 <_Z16processExecutionv+0xe>
    1092:	81 30       	cpi	r24, 0x01	; 1
    1094:	19 f4       	brne	.+6      	; 0x109c <_Z16processExecutionv+0x12>
    1096:	01 c0       	rjmp	.+2      	; 0x109a <_Z16processExecutionv+0x10>
	{
		case timerState:
			processTimer();
    1098:	8b cd       	rjmp	.-1258   	; 0xbb0 <_Z12processTimerv>
    109a:	e2 cf       	rjmp	.-60     	; 0x1060 <_Z19motorPeriodDecisionv>
			break;

		case automaticState:
			motorPeriodDecision();
    109c:	81 e0       	ldi	r24, 0x01	; 1
    109e:	80 93 6d 01 	sts	0x016D, r24
			break;

		default:
			stateMode = automaticState;
    10a2:	08 95       	ret

000010a4 <main>:
//	}
//}

int main(void) {

	init();
    10a4:	f7 d3       	rcall	.+2030   	; 0x1894 <init>
	init_all();
    10a6:	14 dd       	rcall	.-1496   	; 0xad0 <_Z8init_allv>
	init_ADC();
    10a8:	1b dd       	rcall	.-1482   	; 0xae0 <_Z8init_ADCv>
	Serial.begin(9600);
    10aa:	89 e3       	ldi	r24, 0x39	; 57
    10ac:	92 e0       	ldi	r25, 0x02	; 2
    10ae:	40 e8       	ldi	r20, 0x80	; 128
    10b0:	55 e2       	ldi	r21, 0x25	; 37
    10b2:	60 e0       	ldi	r22, 0x00	; 0
    10b4:	70 e0       	ldi	r23, 0x00	; 0
    10b6:	a8 d1       	rcall	.+848    	; 0x1408 <_ZN14HardwareSerial5beginEm>

	motor_stop();
    10b8:	3c dd       	rcall	.-1416   	; 0xb32 <_Z10motor_stopv>

    while(1)
	{
    	// refresh variables
    	refreshVariables();
    10ba:	97 de       	rcall	.-722    	; 0xdea <_Z16refreshVariablesv>

    	// process mode
    	processExecution();
    10bc:	e6 df       	rcall	.-52     	; 0x108a <_Z16processExecutionv>

    	// UART communication
    	comm_Serial();
    10be:	da dd       	rcall	.-1100   	; 0xc74 <_Z11comm_Serialv>

    	// handle message
    	handleMessage();
    10c0:	4f de       	rcall	.-866    	; 0xd60 <_Z13handleMessagev>
    10c2:	fb cf       	rjmp	.-10     	; 0x10ba <main+0x16>

000010c4 <malloc>:
    10c4:	0f 93       	push	r16
    10c6:	1f 93       	push	r17
    10c8:	cf 93       	push	r28
    10ca:	df 93       	push	r29
    10cc:	bc 01       	movw	r22, r24
    10ce:	82 30       	cpi	r24, 0x02	; 2
    10d0:	91 05       	cpc	r25, r1
    10d2:	10 f4       	brcc	.+4      	; 0x10d8 <malloc+0x14>
    10d4:	62 e0       	ldi	r22, 0x02	; 2
    10d6:	70 e0       	ldi	r23, 0x00	; 0
    10d8:	e0 91 66 02 	lds	r30, 0x0266
    10dc:	f0 91 67 02 	lds	r31, 0x0267
    10e0:	40 e0       	ldi	r20, 0x00	; 0
    10e2:	50 e0       	ldi	r21, 0x00	; 0
    10e4:	a0 e0       	ldi	r26, 0x00	; 0
    10e6:	b0 e0       	ldi	r27, 0x00	; 0
    10e8:	24 c0       	rjmp	.+72     	; 0x1132 <malloc+0x6e>
    10ea:	80 81       	ld	r24, Z
    10ec:	91 81       	ldd	r25, Z+1	; 0x01
    10ee:	86 17       	cp	r24, r22
    10f0:	97 07       	cpc	r25, r23
    10f2:	d0 f0       	brcs	.+52     	; 0x1128 <malloc+0x64>
    10f4:	86 17       	cp	r24, r22
    10f6:	97 07       	cpc	r25, r23
    10f8:	71 f4       	brne	.+28     	; 0x1116 <malloc+0x52>
    10fa:	82 81       	ldd	r24, Z+2	; 0x02
    10fc:	93 81       	ldd	r25, Z+3	; 0x03
    10fe:	10 97       	sbiw	r26, 0x00	; 0
    1100:	29 f0       	breq	.+10     	; 0x110c <malloc+0x48>
    1102:	13 96       	adiw	r26, 0x03	; 3
    1104:	9c 93       	st	X, r25
    1106:	8e 93       	st	-X, r24
    1108:	12 97       	sbiw	r26, 0x02	; 2
    110a:	2c c0       	rjmp	.+88     	; 0x1164 <malloc+0xa0>
    110c:	90 93 67 02 	sts	0x0267, r25
    1110:	80 93 66 02 	sts	0x0266, r24
    1114:	27 c0       	rjmp	.+78     	; 0x1164 <malloc+0xa0>
    1116:	41 15       	cp	r20, r1
    1118:	51 05       	cpc	r21, r1
    111a:	19 f0       	breq	.+6      	; 0x1122 <malloc+0x5e>
    111c:	84 17       	cp	r24, r20
    111e:	95 07       	cpc	r25, r21
    1120:	18 f4       	brcc	.+6      	; 0x1128 <malloc+0x64>
    1122:	ac 01       	movw	r20, r24
    1124:	ef 01       	movw	r28, r30
    1126:	8d 01       	movw	r16, r26
    1128:	df 01       	movw	r26, r30
    112a:	82 81       	ldd	r24, Z+2	; 0x02
    112c:	93 81       	ldd	r25, Z+3	; 0x03
    112e:	9c 01       	movw	r18, r24
    1130:	f9 01       	movw	r30, r18
    1132:	30 97       	sbiw	r30, 0x00	; 0
    1134:	d1 f6       	brne	.-76     	; 0x10ea <malloc+0x26>
    1136:	41 15       	cp	r20, r1
    1138:	51 05       	cpc	r21, r1
    113a:	f9 f0       	breq	.+62     	; 0x117a <malloc+0xb6>
    113c:	ca 01       	movw	r24, r20
    113e:	86 1b       	sub	r24, r22
    1140:	97 0b       	sbc	r25, r23
    1142:	84 30       	cpi	r24, 0x04	; 4
    1144:	91 05       	cpc	r25, r1
    1146:	80 f4       	brcc	.+32     	; 0x1168 <malloc+0xa4>
    1148:	8a 81       	ldd	r24, Y+2	; 0x02
    114a:	9b 81       	ldd	r25, Y+3	; 0x03
    114c:	01 15       	cp	r16, r1
    114e:	11 05       	cpc	r17, r1
    1150:	21 f0       	breq	.+8      	; 0x115a <malloc+0x96>
    1152:	f8 01       	movw	r30, r16
    1154:	93 83       	std	Z+3, r25	; 0x03
    1156:	82 83       	std	Z+2, r24	; 0x02
    1158:	04 c0       	rjmp	.+8      	; 0x1162 <malloc+0x9e>
    115a:	90 93 67 02 	sts	0x0267, r25
    115e:	80 93 66 02 	sts	0x0266, r24
    1162:	fe 01       	movw	r30, r28
    1164:	32 96       	adiw	r30, 0x02	; 2
    1166:	45 c0       	rjmp	.+138    	; 0x11f2 <malloc+0x12e>
    1168:	fe 01       	movw	r30, r28
    116a:	e8 0f       	add	r30, r24
    116c:	f9 1f       	adc	r31, r25
    116e:	61 93       	st	Z+, r22
    1170:	71 93       	st	Z+, r23
    1172:	02 97       	sbiw	r24, 0x02	; 2
    1174:	99 83       	std	Y+1, r25	; 0x01
    1176:	88 83       	st	Y, r24
    1178:	3c c0       	rjmp	.+120    	; 0x11f2 <malloc+0x12e>
    117a:	80 91 64 02 	lds	r24, 0x0264
    117e:	90 91 65 02 	lds	r25, 0x0265
    1182:	89 2b       	or	r24, r25
    1184:	41 f4       	brne	.+16     	; 0x1196 <malloc+0xd2>
    1186:	80 91 71 01 	lds	r24, 0x0171
    118a:	90 91 72 01 	lds	r25, 0x0172
    118e:	90 93 65 02 	sts	0x0265, r25
    1192:	80 93 64 02 	sts	0x0264, r24
    1196:	40 91 73 01 	lds	r20, 0x0173
    119a:	50 91 74 01 	lds	r21, 0x0174
    119e:	41 15       	cp	r20, r1
    11a0:	51 05       	cpc	r21, r1
    11a2:	41 f4       	brne	.+16     	; 0x11b4 <malloc+0xf0>
    11a4:	4d b7       	in	r20, 0x3d	; 61
    11a6:	5e b7       	in	r21, 0x3e	; 62
    11a8:	80 91 6f 01 	lds	r24, 0x016F
    11ac:	90 91 70 01 	lds	r25, 0x0170
    11b0:	48 1b       	sub	r20, r24
    11b2:	59 0b       	sbc	r21, r25
    11b4:	20 91 64 02 	lds	r18, 0x0264
    11b8:	30 91 65 02 	lds	r19, 0x0265
    11bc:	24 17       	cp	r18, r20
    11be:	35 07       	cpc	r19, r21
    11c0:	b0 f4       	brcc	.+44     	; 0x11ee <malloc+0x12a>
    11c2:	ca 01       	movw	r24, r20
    11c4:	82 1b       	sub	r24, r18
    11c6:	93 0b       	sbc	r25, r19
    11c8:	86 17       	cp	r24, r22
    11ca:	97 07       	cpc	r25, r23
    11cc:	80 f0       	brcs	.+32     	; 0x11ee <malloc+0x12a>
    11ce:	ab 01       	movw	r20, r22
    11d0:	4e 5f       	subi	r20, 0xFE	; 254
    11d2:	5f 4f       	sbci	r21, 0xFF	; 255
    11d4:	84 17       	cp	r24, r20
    11d6:	95 07       	cpc	r25, r21
    11d8:	50 f0       	brcs	.+20     	; 0x11ee <malloc+0x12a>
    11da:	42 0f       	add	r20, r18
    11dc:	53 1f       	adc	r21, r19
    11de:	50 93 65 02 	sts	0x0265, r21
    11e2:	40 93 64 02 	sts	0x0264, r20
    11e6:	f9 01       	movw	r30, r18
    11e8:	61 93       	st	Z+, r22
    11ea:	71 93       	st	Z+, r23
    11ec:	02 c0       	rjmp	.+4      	; 0x11f2 <malloc+0x12e>
    11ee:	e0 e0       	ldi	r30, 0x00	; 0
    11f0:	f0 e0       	ldi	r31, 0x00	; 0
    11f2:	cf 01       	movw	r24, r30
    11f4:	df 91       	pop	r29
    11f6:	cf 91       	pop	r28
    11f8:	1f 91       	pop	r17
    11fa:	0f 91       	pop	r16
    11fc:	08 95       	ret

000011fe <free>:
    11fe:	cf 93       	push	r28
    1200:	df 93       	push	r29
    1202:	9c 01       	movw	r18, r24
    1204:	00 97       	sbiw	r24, 0x00	; 0
    1206:	09 f4       	brne	.+2      	; 0x120a <free+0xc>
    1208:	8f c0       	rjmp	.+286    	; 0x1328 <free+0x12a>
    120a:	ec 01       	movw	r28, r24
    120c:	22 97       	sbiw	r28, 0x02	; 2
    120e:	1b 82       	std	Y+3, r1	; 0x03
    1210:	1a 82       	std	Y+2, r1	; 0x02
    1212:	60 91 66 02 	lds	r22, 0x0266
    1216:	70 91 67 02 	lds	r23, 0x0267
    121a:	61 15       	cp	r22, r1
    121c:	71 05       	cpc	r23, r1
    121e:	81 f4       	brne	.+32     	; 0x1240 <free+0x42>
    1220:	88 81       	ld	r24, Y
    1222:	99 81       	ldd	r25, Y+1	; 0x01
    1224:	82 0f       	add	r24, r18
    1226:	93 1f       	adc	r25, r19
    1228:	20 91 64 02 	lds	r18, 0x0264
    122c:	30 91 65 02 	lds	r19, 0x0265
    1230:	28 17       	cp	r18, r24
    1232:	39 07       	cpc	r19, r25
    1234:	39 f5       	brne	.+78     	; 0x1284 <free+0x86>
    1236:	d0 93 65 02 	sts	0x0265, r29
    123a:	c0 93 64 02 	sts	0x0264, r28
    123e:	74 c0       	rjmp	.+232    	; 0x1328 <free+0x12a>
    1240:	db 01       	movw	r26, r22
    1242:	40 e0       	ldi	r20, 0x00	; 0
    1244:	50 e0       	ldi	r21, 0x00	; 0
    1246:	ac 17       	cp	r26, r28
    1248:	bd 07       	cpc	r27, r29
    124a:	08 f1       	brcs	.+66     	; 0x128e <free+0x90>
    124c:	bb 83       	std	Y+3, r27	; 0x03
    124e:	aa 83       	std	Y+2, r26	; 0x02
    1250:	fe 01       	movw	r30, r28
    1252:	21 91       	ld	r18, Z+
    1254:	31 91       	ld	r19, Z+
    1256:	e2 0f       	add	r30, r18
    1258:	f3 1f       	adc	r31, r19
    125a:	ae 17       	cp	r26, r30
    125c:	bf 07       	cpc	r27, r31
    125e:	79 f4       	brne	.+30     	; 0x127e <free+0x80>
    1260:	8d 91       	ld	r24, X+
    1262:	9c 91       	ld	r25, X
    1264:	11 97       	sbiw	r26, 0x01	; 1
    1266:	28 0f       	add	r18, r24
    1268:	39 1f       	adc	r19, r25
    126a:	2e 5f       	subi	r18, 0xFE	; 254
    126c:	3f 4f       	sbci	r19, 0xFF	; 255
    126e:	39 83       	std	Y+1, r19	; 0x01
    1270:	28 83       	st	Y, r18
    1272:	12 96       	adiw	r26, 0x02	; 2
    1274:	8d 91       	ld	r24, X+
    1276:	9c 91       	ld	r25, X
    1278:	13 97       	sbiw	r26, 0x03	; 3
    127a:	9b 83       	std	Y+3, r25	; 0x03
    127c:	8a 83       	std	Y+2, r24	; 0x02
    127e:	41 15       	cp	r20, r1
    1280:	51 05       	cpc	r21, r1
    1282:	71 f4       	brne	.+28     	; 0x12a0 <free+0xa2>
    1284:	d0 93 67 02 	sts	0x0267, r29
    1288:	c0 93 66 02 	sts	0x0266, r28
    128c:	4d c0       	rjmp	.+154    	; 0x1328 <free+0x12a>
    128e:	12 96       	adiw	r26, 0x02	; 2
    1290:	8d 91       	ld	r24, X+
    1292:	9c 91       	ld	r25, X
    1294:	13 97       	sbiw	r26, 0x03	; 3
    1296:	ad 01       	movw	r20, r26
    1298:	00 97       	sbiw	r24, 0x00	; 0
    129a:	11 f0       	breq	.+4      	; 0x12a0 <free+0xa2>
    129c:	dc 01       	movw	r26, r24
    129e:	d3 cf       	rjmp	.-90     	; 0x1246 <free+0x48>
    12a0:	da 01       	movw	r26, r20
    12a2:	13 96       	adiw	r26, 0x03	; 3
    12a4:	dc 93       	st	X, r29
    12a6:	ce 93       	st	-X, r28
    12a8:	12 97       	sbiw	r26, 0x02	; 2
    12aa:	fa 01       	movw	r30, r20
    12ac:	21 91       	ld	r18, Z+
    12ae:	31 91       	ld	r19, Z+
    12b0:	e2 0f       	add	r30, r18
    12b2:	f3 1f       	adc	r31, r19
    12b4:	ce 17       	cp	r28, r30
    12b6:	df 07       	cpc	r29, r31
    12b8:	69 f4       	brne	.+26     	; 0x12d4 <free+0xd6>
    12ba:	88 81       	ld	r24, Y
    12bc:	99 81       	ldd	r25, Y+1	; 0x01
    12be:	28 0f       	add	r18, r24
    12c0:	39 1f       	adc	r19, r25
    12c2:	2e 5f       	subi	r18, 0xFE	; 254
    12c4:	3f 4f       	sbci	r19, 0xFF	; 255
    12c6:	fa 01       	movw	r30, r20
    12c8:	31 83       	std	Z+1, r19	; 0x01
    12ca:	20 83       	st	Z, r18
    12cc:	8a 81       	ldd	r24, Y+2	; 0x02
    12ce:	9b 81       	ldd	r25, Y+3	; 0x03
    12d0:	93 83       	std	Z+3, r25	; 0x03
    12d2:	82 83       	std	Z+2, r24	; 0x02
    12d4:	e0 e0       	ldi	r30, 0x00	; 0
    12d6:	f0 e0       	ldi	r31, 0x00	; 0
    12d8:	db 01       	movw	r26, r22
    12da:	12 96       	adiw	r26, 0x02	; 2
    12dc:	8d 91       	ld	r24, X+
    12de:	9c 91       	ld	r25, X
    12e0:	13 97       	sbiw	r26, 0x03	; 3
    12e2:	00 97       	sbiw	r24, 0x00	; 0
    12e4:	19 f0       	breq	.+6      	; 0x12ec <free+0xee>
    12e6:	bc 01       	movw	r22, r24
    12e8:	fd 01       	movw	r30, r26
    12ea:	f6 cf       	rjmp	.-20     	; 0x12d8 <free+0xda>
    12ec:	ab 01       	movw	r20, r22
    12ee:	4e 5f       	subi	r20, 0xFE	; 254
    12f0:	5f 4f       	sbci	r21, 0xFF	; 255
    12f2:	db 01       	movw	r26, r22
    12f4:	8d 91       	ld	r24, X+
    12f6:	9c 91       	ld	r25, X
    12f8:	84 0f       	add	r24, r20
    12fa:	95 1f       	adc	r25, r21
    12fc:	20 91 64 02 	lds	r18, 0x0264
    1300:	30 91 65 02 	lds	r19, 0x0265
    1304:	28 17       	cp	r18, r24
    1306:	39 07       	cpc	r19, r25
    1308:	79 f4       	brne	.+30     	; 0x1328 <free+0x12a>
    130a:	30 97       	sbiw	r30, 0x00	; 0
    130c:	29 f4       	brne	.+10     	; 0x1318 <free+0x11a>
    130e:	10 92 67 02 	sts	0x0267, r1
    1312:	10 92 66 02 	sts	0x0266, r1
    1316:	02 c0       	rjmp	.+4      	; 0x131c <free+0x11e>
    1318:	13 82       	std	Z+3, r1	; 0x03
    131a:	12 82       	std	Z+2, r1	; 0x02
    131c:	42 50       	subi	r20, 0x02	; 2
    131e:	50 40       	sbci	r21, 0x00	; 0
    1320:	50 93 65 02 	sts	0x0265, r21
    1324:	40 93 64 02 	sts	0x0264, r20
    1328:	df 91       	pop	r29
    132a:	cf 91       	pop	r28
    132c:	08 95       	ret

0000132e <__vector_11>:
    132e:	1f 92       	push	r1
    1330:	0f 92       	push	r0
    1332:	0f b6       	in	r0, 0x3f	; 63
    1334:	0f 92       	push	r0
    1336:	11 24       	eor	r1, r1
    1338:	2f 93       	push	r18
    133a:	3f 93       	push	r19
    133c:	4f 93       	push	r20
    133e:	8f 93       	push	r24
    1340:	9f 93       	push	r25
    1342:	ef 93       	push	r30
    1344:	ff 93       	push	r31
    1346:	5a 99       	sbic	0x0b, 2	; 11
    1348:	1c c0       	rjmp	.+56     	; 0x1382 <__vector_11+0x54>
    134a:	4c b1       	in	r20, 0x0c	; 12
    134c:	20 91 f1 01 	lds	r18, 0x01F1
    1350:	30 91 f2 01 	lds	r19, 0x01F2
    1354:	2f 5f       	subi	r18, 0xFF	; 255
    1356:	3f 4f       	sbci	r19, 0xFF	; 255
    1358:	2f 73       	andi	r18, 0x3F	; 63
    135a:	30 70       	andi	r19, 0x00	; 0
    135c:	80 91 f3 01 	lds	r24, 0x01F3
    1360:	90 91 f4 01 	lds	r25, 0x01F4
    1364:	28 17       	cp	r18, r24
    1366:	39 07       	cpc	r19, r25
    1368:	69 f0       	breq	.+26     	; 0x1384 <__vector_11+0x56>
    136a:	e0 91 f1 01 	lds	r30, 0x01F1
    136e:	f0 91 f2 01 	lds	r31, 0x01F2
    1372:	ef 54       	subi	r30, 0x4F	; 79
    1374:	fe 4f       	sbci	r31, 0xFE	; 254
    1376:	40 83       	st	Z, r20
    1378:	30 93 f2 01 	sts	0x01F2, r19
    137c:	20 93 f1 01 	sts	0x01F1, r18
    1380:	01 c0       	rjmp	.+2      	; 0x1384 <__vector_11+0x56>
    1382:	8c b1       	in	r24, 0x0c	; 12
    1384:	ff 91       	pop	r31
    1386:	ef 91       	pop	r30
    1388:	9f 91       	pop	r25
    138a:	8f 91       	pop	r24
    138c:	4f 91       	pop	r20
    138e:	3f 91       	pop	r19
    1390:	2f 91       	pop	r18
    1392:	0f 90       	pop	r0
    1394:	0f be       	out	0x3f, r0	; 63
    1396:	0f 90       	pop	r0
    1398:	1f 90       	pop	r1
    139a:	18 95       	reti

0000139c <__vector_12>:
    139c:	1f 92       	push	r1
    139e:	0f 92       	push	r0
    13a0:	0f b6       	in	r0, 0x3f	; 63
    13a2:	0f 92       	push	r0
    13a4:	11 24       	eor	r1, r1
    13a6:	2f 93       	push	r18
    13a8:	3f 93       	push	r19
    13aa:	8f 93       	push	r24
    13ac:	9f 93       	push	r25
    13ae:	ef 93       	push	r30
    13b0:	ff 93       	push	r31
    13b2:	20 91 35 02 	lds	r18, 0x0235
    13b6:	30 91 36 02 	lds	r19, 0x0236
    13ba:	80 91 37 02 	lds	r24, 0x0237
    13be:	90 91 38 02 	lds	r25, 0x0238
    13c2:	28 17       	cp	r18, r24
    13c4:	39 07       	cpc	r19, r25
    13c6:	11 f4       	brne	.+4      	; 0x13cc <__vector_12+0x30>
    13c8:	55 98       	cbi	0x0a, 5	; 10
    13ca:	13 c0       	rjmp	.+38     	; 0x13f2 <__vector_12+0x56>
    13cc:	e0 91 37 02 	lds	r30, 0x0237
    13d0:	f0 91 38 02 	lds	r31, 0x0238
    13d4:	eb 50       	subi	r30, 0x0B	; 11
    13d6:	fe 4f       	sbci	r31, 0xFE	; 254
    13d8:	20 81       	ld	r18, Z
    13da:	80 91 37 02 	lds	r24, 0x0237
    13de:	90 91 38 02 	lds	r25, 0x0238
    13e2:	01 96       	adiw	r24, 0x01	; 1
    13e4:	8f 73       	andi	r24, 0x3F	; 63
    13e6:	90 70       	andi	r25, 0x00	; 0
    13e8:	90 93 38 02 	sts	0x0238, r25
    13ec:	80 93 37 02 	sts	0x0237, r24
    13f0:	2c b9       	out	0x0c, r18	; 12
    13f2:	ff 91       	pop	r31
    13f4:	ef 91       	pop	r30
    13f6:	9f 91       	pop	r25
    13f8:	8f 91       	pop	r24
    13fa:	3f 91       	pop	r19
    13fc:	2f 91       	pop	r18
    13fe:	0f 90       	pop	r0
    1400:	0f be       	out	0x3f, r0	; 63
    1402:	0f 90       	pop	r0
    1404:	1f 90       	pop	r1
    1406:	18 95       	reti

00001408 <_ZN14HardwareSerial5beginEm>:
    1408:	af 92       	push	r10
    140a:	bf 92       	push	r11
    140c:	df 92       	push	r13
    140e:	ef 92       	push	r14
    1410:	ff 92       	push	r15
    1412:	0f 93       	push	r16
    1414:	1f 93       	push	r17
    1416:	cf 93       	push	r28
    1418:	df 93       	push	r29
    141a:	ec 01       	movw	r28, r24
    141c:	7a 01       	movw	r14, r20
    141e:	8b 01       	movw	r16, r22
    1420:	dd 24       	eor	r13, r13
    1422:	d3 94       	inc	r13
    1424:	91 e0       	ldi	r25, 0x01	; 1
    1426:	a9 2e       	mov	r10, r25
    1428:	b1 2c       	mov	r11, r1
    142a:	ec 89       	ldd	r30, Y+20	; 0x14
    142c:	fd 89       	ldd	r31, Y+21	; 0x15
    142e:	dd 20       	and	r13, r13
    1430:	69 f0       	breq	.+26     	; 0x144c <_ZN14HardwareSerial5beginEm+0x44>
    1432:	c5 01       	movw	r24, r10
    1434:	08 a0       	ldd	r0, Y+32	; 0x20
    1436:	02 c0       	rjmp	.+4      	; 0x143c <_ZN14HardwareSerial5beginEm+0x34>
    1438:	88 0f       	add	r24, r24
    143a:	99 1f       	adc	r25, r25
    143c:	0a 94       	dec	r0
    143e:	e2 f7       	brpl	.-8      	; 0x1438 <_ZN14HardwareSerial5beginEm+0x30>
    1440:	80 83       	st	Z, r24
    1442:	60 e8       	ldi	r22, 0x80	; 128
    1444:	74 e8       	ldi	r23, 0x84	; 132
    1446:	8e e1       	ldi	r24, 0x1E	; 30
    1448:	90 e0       	ldi	r25, 0x00	; 0
    144a:	05 c0       	rjmp	.+10     	; 0x1456 <_ZN14HardwareSerial5beginEm+0x4e>
    144c:	10 82       	st	Z, r1
    144e:	60 e4       	ldi	r22, 0x40	; 64
    1450:	72 e4       	ldi	r23, 0x42	; 66
    1452:	8f e0       	ldi	r24, 0x0F	; 15
    1454:	90 e0       	ldi	r25, 0x00	; 0
    1456:	a8 01       	movw	r20, r16
    1458:	97 01       	movw	r18, r14
    145a:	3c d2       	rcall	.+1144   	; 0x18d4 <__udivmodsi4>
    145c:	21 50       	subi	r18, 0x01	; 1
    145e:	30 40       	sbci	r19, 0x00	; 0
    1460:	40 40       	sbci	r20, 0x00	; 0
    1462:	50 40       	sbci	r21, 0x00	; 0
    1464:	56 95       	lsr	r21
    1466:	47 95       	ror	r20
    1468:	37 95       	ror	r19
    146a:	27 95       	ror	r18
    146c:	80 e1       	ldi	r24, 0x10	; 16
    146e:	20 30       	cpi	r18, 0x00	; 0
    1470:	38 07       	cpc	r19, r24
    1472:	20 f0       	brcs	.+8      	; 0x147c <_ZN14HardwareSerial5beginEm+0x74>
    1474:	dd 20       	and	r13, r13
    1476:	11 f0       	breq	.+4      	; 0x147c <_ZN14HardwareSerial5beginEm+0x74>
    1478:	dd 24       	eor	r13, r13
    147a:	d7 cf       	rjmp	.-82     	; 0x142a <_ZN14HardwareSerial5beginEm+0x22>
    147c:	e8 89       	ldd	r30, Y+16	; 0x10
    147e:	f9 89       	ldd	r31, Y+17	; 0x11
    1480:	30 83       	st	Z, r19
    1482:	ea 89       	ldd	r30, Y+18	; 0x12
    1484:	fb 89       	ldd	r31, Y+19	; 0x13
    1486:	20 83       	st	Z, r18
    1488:	19 a2       	std	Y+33, r1	; 0x21
    148a:	ee 89       	ldd	r30, Y+22	; 0x16
    148c:	ff 89       	ldd	r31, Y+23	; 0x17
    148e:	40 81       	ld	r20, Z
    1490:	21 e0       	ldi	r18, 0x01	; 1
    1492:	30 e0       	ldi	r19, 0x00	; 0
    1494:	c9 01       	movw	r24, r18
    1496:	0c 8c       	ldd	r0, Y+28	; 0x1c
    1498:	02 c0       	rjmp	.+4      	; 0x149e <_ZN14HardwareSerial5beginEm+0x96>
    149a:	88 0f       	add	r24, r24
    149c:	99 1f       	adc	r25, r25
    149e:	0a 94       	dec	r0
    14a0:	e2 f7       	brpl	.-8      	; 0x149a <_ZN14HardwareSerial5beginEm+0x92>
    14a2:	48 2b       	or	r20, r24
    14a4:	40 83       	st	Z, r20
    14a6:	ee 89       	ldd	r30, Y+22	; 0x16
    14a8:	ff 89       	ldd	r31, Y+23	; 0x17
    14aa:	40 81       	ld	r20, Z
    14ac:	c9 01       	movw	r24, r18
    14ae:	0d 8c       	ldd	r0, Y+29	; 0x1d
    14b0:	02 c0       	rjmp	.+4      	; 0x14b6 <_ZN14HardwareSerial5beginEm+0xae>
    14b2:	88 0f       	add	r24, r24
    14b4:	99 1f       	adc	r25, r25
    14b6:	0a 94       	dec	r0
    14b8:	e2 f7       	brpl	.-8      	; 0x14b2 <_ZN14HardwareSerial5beginEm+0xaa>
    14ba:	48 2b       	or	r20, r24
    14bc:	40 83       	st	Z, r20
    14be:	ee 89       	ldd	r30, Y+22	; 0x16
    14c0:	ff 89       	ldd	r31, Y+23	; 0x17
    14c2:	40 81       	ld	r20, Z
    14c4:	c9 01       	movw	r24, r18
    14c6:	0e 8c       	ldd	r0, Y+30	; 0x1e
    14c8:	02 c0       	rjmp	.+4      	; 0x14ce <_ZN14HardwareSerial5beginEm+0xc6>
    14ca:	88 0f       	add	r24, r24
    14cc:	99 1f       	adc	r25, r25
    14ce:	0a 94       	dec	r0
    14d0:	e2 f7       	brpl	.-8      	; 0x14ca <_ZN14HardwareSerial5beginEm+0xc2>
    14d2:	48 2b       	or	r20, r24
    14d4:	40 83       	st	Z, r20
    14d6:	ee 89       	ldd	r30, Y+22	; 0x16
    14d8:	ff 89       	ldd	r31, Y+23	; 0x17
    14da:	80 81       	ld	r24, Z
    14dc:	0f 8c       	ldd	r0, Y+31	; 0x1f
    14de:	02 c0       	rjmp	.+4      	; 0x14e4 <_ZN14HardwareSerial5beginEm+0xdc>
    14e0:	22 0f       	add	r18, r18
    14e2:	33 1f       	adc	r19, r19
    14e4:	0a 94       	dec	r0
    14e6:	e2 f7       	brpl	.-8      	; 0x14e0 <_ZN14HardwareSerial5beginEm+0xd8>
    14e8:	20 95       	com	r18
    14ea:	28 23       	and	r18, r24
    14ec:	20 83       	st	Z, r18
    14ee:	df 91       	pop	r29
    14f0:	cf 91       	pop	r28
    14f2:	1f 91       	pop	r17
    14f4:	0f 91       	pop	r16
    14f6:	ff 90       	pop	r15
    14f8:	ef 90       	pop	r14
    14fa:	df 90       	pop	r13
    14fc:	bf 90       	pop	r11
    14fe:	af 90       	pop	r10
    1500:	08 95       	ret

00001502 <_ZN14HardwareSerial9availableEv>:
    1502:	dc 01       	movw	r26, r24
    1504:	1c 96       	adiw	r26, 0x0c	; 12
    1506:	ed 91       	ld	r30, X+
    1508:	fc 91       	ld	r31, X
    150a:	1d 97       	sbiw	r26, 0x0d	; 13
    150c:	e0 5c       	subi	r30, 0xC0	; 192
    150e:	ff 4f       	sbci	r31, 0xFF	; 255
    1510:	21 91       	ld	r18, Z+
    1512:	31 91       	ld	r19, Z+
    1514:	80 81       	ld	r24, Z
    1516:	91 81       	ldd	r25, Z+1	; 0x01
    1518:	28 1b       	sub	r18, r24
    151a:	39 0b       	sbc	r19, r25
    151c:	2f 73       	andi	r18, 0x3F	; 63
    151e:	30 70       	andi	r19, 0x00	; 0
    1520:	c9 01       	movw	r24, r18
    1522:	08 95       	ret

00001524 <_ZN14HardwareSerial4peekEv>:
    1524:	dc 01       	movw	r26, r24
    1526:	1c 96       	adiw	r26, 0x0c	; 12
    1528:	ed 91       	ld	r30, X+
    152a:	fc 91       	ld	r31, X
    152c:	1d 97       	sbiw	r26, 0x0d	; 13
    152e:	e0 5c       	subi	r30, 0xC0	; 192
    1530:	ff 4f       	sbci	r31, 0xFF	; 255
    1532:	20 81       	ld	r18, Z
    1534:	31 81       	ldd	r19, Z+1	; 0x01
    1536:	e0 54       	subi	r30, 0x40	; 64
    1538:	f0 40       	sbci	r31, 0x00	; 0
    153a:	df 01       	movw	r26, r30
    153c:	ae 5b       	subi	r26, 0xBE	; 190
    153e:	bf 4f       	sbci	r27, 0xFF	; 255
    1540:	8d 91       	ld	r24, X+
    1542:	9c 91       	ld	r25, X
    1544:	11 97       	sbiw	r26, 0x01	; 1
    1546:	28 17       	cp	r18, r24
    1548:	39 07       	cpc	r19, r25
    154a:	19 f4       	brne	.+6      	; 0x1552 <_ZN14HardwareSerial4peekEv+0x2e>
    154c:	2f ef       	ldi	r18, 0xFF	; 255
    154e:	3f ef       	ldi	r19, 0xFF	; 255
    1550:	07 c0       	rjmp	.+14     	; 0x1560 <_ZN14HardwareSerial4peekEv+0x3c>
    1552:	8d 91       	ld	r24, X+
    1554:	9c 91       	ld	r25, X
    1556:	e8 0f       	add	r30, r24
    1558:	f9 1f       	adc	r31, r25
    155a:	80 81       	ld	r24, Z
    155c:	28 2f       	mov	r18, r24
    155e:	30 e0       	ldi	r19, 0x00	; 0
    1560:	c9 01       	movw	r24, r18
    1562:	08 95       	ret

00001564 <_ZN14HardwareSerial4readEv>:
    1564:	dc 01       	movw	r26, r24
    1566:	1c 96       	adiw	r26, 0x0c	; 12
    1568:	ed 91       	ld	r30, X+
    156a:	fc 91       	ld	r31, X
    156c:	1d 97       	sbiw	r26, 0x0d	; 13
    156e:	e0 5c       	subi	r30, 0xC0	; 192
    1570:	ff 4f       	sbci	r31, 0xFF	; 255
    1572:	20 81       	ld	r18, Z
    1574:	31 81       	ldd	r19, Z+1	; 0x01
    1576:	e0 54       	subi	r30, 0x40	; 64
    1578:	f0 40       	sbci	r31, 0x00	; 0
    157a:	df 01       	movw	r26, r30
    157c:	ae 5b       	subi	r26, 0xBE	; 190
    157e:	bf 4f       	sbci	r27, 0xFF	; 255
    1580:	8d 91       	ld	r24, X+
    1582:	9c 91       	ld	r25, X
    1584:	11 97       	sbiw	r26, 0x01	; 1
    1586:	28 17       	cp	r18, r24
    1588:	39 07       	cpc	r19, r25
    158a:	19 f4       	brne	.+6      	; 0x1592 <_ZN14HardwareSerial4readEv+0x2e>
    158c:	2f ef       	ldi	r18, 0xFF	; 255
    158e:	3f ef       	ldi	r19, 0xFF	; 255
    1590:	10 c0       	rjmp	.+32     	; 0x15b2 <_ZN14HardwareSerial4readEv+0x4e>
    1592:	8d 91       	ld	r24, X+
    1594:	9c 91       	ld	r25, X
    1596:	11 97       	sbiw	r26, 0x01	; 1
    1598:	e8 0f       	add	r30, r24
    159a:	f9 1f       	adc	r31, r25
    159c:	20 81       	ld	r18, Z
    159e:	8d 91       	ld	r24, X+
    15a0:	9c 91       	ld	r25, X
    15a2:	11 97       	sbiw	r26, 0x01	; 1
    15a4:	01 96       	adiw	r24, 0x01	; 1
    15a6:	8f 73       	andi	r24, 0x3F	; 63
    15a8:	90 70       	andi	r25, 0x00	; 0
    15aa:	11 96       	adiw	r26, 0x01	; 1
    15ac:	9c 93       	st	X, r25
    15ae:	8e 93       	st	-X, r24
    15b0:	30 e0       	ldi	r19, 0x00	; 0
    15b2:	c9 01       	movw	r24, r18
    15b4:	08 95       	ret

000015b6 <_ZN14HardwareSerial5flushEv>:
    15b6:	dc 01       	movw	r26, r24
    15b8:	91 96       	adiw	r26, 0x21	; 33
    15ba:	8c 91       	ld	r24, X
    15bc:	91 97       	sbiw	r26, 0x21	; 33
    15be:	88 23       	and	r24, r24
    15c0:	39 f0       	breq	.+14     	; 0x15d0 <_ZN14HardwareSerial5flushEv+0x1a>
    15c2:	54 96       	adiw	r26, 0x14	; 20
    15c4:	ed 91       	ld	r30, X+
    15c6:	fc 91       	ld	r31, X
    15c8:	55 97       	sbiw	r26, 0x15	; 21
    15ca:	80 81       	ld	r24, Z
    15cc:	86 ff       	sbrs	r24, 6
    15ce:	f9 cf       	rjmp	.-14     	; 0x15c2 <_ZN14HardwareSerial5flushEv+0xc>
    15d0:	91 96       	adiw	r26, 0x21	; 33
    15d2:	1c 92       	st	X, r1
    15d4:	08 95       	ret

000015d6 <_ZN14HardwareSerial5writeEh>:
    15d6:	cf 93       	push	r28
    15d8:	df 93       	push	r29
    15da:	ec 01       	movw	r28, r24
    15dc:	ee 85       	ldd	r30, Y+14	; 0x0e
    15de:	ff 85       	ldd	r31, Y+15	; 0x0f
    15e0:	e0 5c       	subi	r30, 0xC0	; 192
    15e2:	ff 4f       	sbci	r31, 0xFF	; 255
    15e4:	20 81       	ld	r18, Z
    15e6:	31 81       	ldd	r19, Z+1	; 0x01
    15e8:	e0 54       	subi	r30, 0x40	; 64
    15ea:	f0 40       	sbci	r31, 0x00	; 0
    15ec:	2f 5f       	subi	r18, 0xFF	; 255
    15ee:	3f 4f       	sbci	r19, 0xFF	; 255
    15f0:	2f 73       	andi	r18, 0x3F	; 63
    15f2:	30 70       	andi	r19, 0x00	; 0
    15f4:	df 01       	movw	r26, r30
    15f6:	ae 5b       	subi	r26, 0xBE	; 190
    15f8:	bf 4f       	sbci	r27, 0xFF	; 255
    15fa:	8d 91       	ld	r24, X+
    15fc:	9c 91       	ld	r25, X
    15fe:	11 97       	sbiw	r26, 0x01	; 1
    1600:	28 17       	cp	r18, r24
    1602:	39 07       	cpc	r19, r25
    1604:	d1 f3       	breq	.-12     	; 0x15fa <_ZN14HardwareSerial5writeEh+0x24>
    1606:	e0 5c       	subi	r30, 0xC0	; 192
    1608:	ff 4f       	sbci	r31, 0xFF	; 255
    160a:	80 81       	ld	r24, Z
    160c:	91 81       	ldd	r25, Z+1	; 0x01
    160e:	e0 54       	subi	r30, 0x40	; 64
    1610:	f0 40       	sbci	r31, 0x00	; 0
    1612:	e8 0f       	add	r30, r24
    1614:	f9 1f       	adc	r31, r25
    1616:	60 83       	st	Z, r22
    1618:	ee 85       	ldd	r30, Y+14	; 0x0e
    161a:	ff 85       	ldd	r31, Y+15	; 0x0f
    161c:	e0 5c       	subi	r30, 0xC0	; 192
    161e:	ff 4f       	sbci	r31, 0xFF	; 255
    1620:	31 83       	std	Z+1, r19	; 0x01
    1622:	20 83       	st	Z, r18
    1624:	ee 89       	ldd	r30, Y+22	; 0x16
    1626:	ff 89       	ldd	r31, Y+23	; 0x17
    1628:	20 81       	ld	r18, Z
    162a:	81 e0       	ldi	r24, 0x01	; 1
    162c:	90 e0       	ldi	r25, 0x00	; 0
    162e:	0f 8c       	ldd	r0, Y+31	; 0x1f
    1630:	02 c0       	rjmp	.+4      	; 0x1636 <_ZN14HardwareSerial5writeEh+0x60>
    1632:	88 0f       	add	r24, r24
    1634:	99 1f       	adc	r25, r25
    1636:	0a 94       	dec	r0
    1638:	e2 f7       	brpl	.-8      	; 0x1632 <_ZN14HardwareSerial5writeEh+0x5c>
    163a:	28 2b       	or	r18, r24
    163c:	20 83       	st	Z, r18
    163e:	81 e0       	ldi	r24, 0x01	; 1
    1640:	89 a3       	std	Y+33, r24	; 0x21
    1642:	ec 89       	ldd	r30, Y+20	; 0x14
    1644:	fd 89       	ldd	r31, Y+21	; 0x15
    1646:	80 81       	ld	r24, Z
    1648:	80 64       	ori	r24, 0x40	; 64
    164a:	80 83       	st	Z, r24
    164c:	81 e0       	ldi	r24, 0x01	; 1
    164e:	90 e0       	ldi	r25, 0x00	; 0
    1650:	df 91       	pop	r29
    1652:	cf 91       	pop	r28
    1654:	08 95       	ret

00001656 <_GLOBAL__I_rx_buffer>:
    1656:	10 92 3c 02 	sts	0x023C, r1
    165a:	10 92 3b 02 	sts	0x023B, r1
    165e:	88 ee       	ldi	r24, 0xE8	; 232
    1660:	93 e0       	ldi	r25, 0x03	; 3
    1662:	a0 e0       	ldi	r26, 0x00	; 0
    1664:	b0 e0       	ldi	r27, 0x00	; 0
    1666:	80 93 3d 02 	sts	0x023D, r24
    166a:	90 93 3e 02 	sts	0x023E, r25
    166e:	a0 93 3f 02 	sts	0x023F, r26
    1672:	b0 93 40 02 	sts	0x0240, r27
    1676:	89 e7       	ldi	r24, 0x79	; 121
    1678:	91 e0       	ldi	r25, 0x01	; 1
    167a:	90 93 3a 02 	sts	0x023A, r25
    167e:	80 93 39 02 	sts	0x0239, r24
    1682:	81 eb       	ldi	r24, 0xB1	; 177
    1684:	91 e0       	ldi	r25, 0x01	; 1
    1686:	90 93 46 02 	sts	0x0246, r25
    168a:	80 93 45 02 	sts	0x0245, r24
    168e:	85 ef       	ldi	r24, 0xF5	; 245
    1690:	91 e0       	ldi	r25, 0x01	; 1
    1692:	90 93 48 02 	sts	0x0248, r25
    1696:	80 93 47 02 	sts	0x0247, r24
    169a:	20 e4       	ldi	r18, 0x40	; 64
    169c:	30 e0       	ldi	r19, 0x00	; 0
    169e:	30 93 4a 02 	sts	0x024A, r19
    16a2:	20 93 49 02 	sts	0x0249, r18
    16a6:	89 e2       	ldi	r24, 0x29	; 41
    16a8:	90 e0       	ldi	r25, 0x00	; 0
    16aa:	90 93 4c 02 	sts	0x024C, r25
    16ae:	80 93 4b 02 	sts	0x024B, r24
    16b2:	8b e2       	ldi	r24, 0x2B	; 43
    16b4:	90 e0       	ldi	r25, 0x00	; 0
    16b6:	90 93 4e 02 	sts	0x024E, r25
    16ba:	80 93 4d 02 	sts	0x024D, r24
    16be:	8a e2       	ldi	r24, 0x2A	; 42
    16c0:	90 e0       	ldi	r25, 0x00	; 0
    16c2:	90 93 50 02 	sts	0x0250, r25
    16c6:	80 93 4f 02 	sts	0x024F, r24
    16ca:	30 93 52 02 	sts	0x0252, r19
    16ce:	20 93 51 02 	sts	0x0251, r18
    16d2:	8c e2       	ldi	r24, 0x2C	; 44
    16d4:	90 e0       	ldi	r25, 0x00	; 0
    16d6:	90 93 54 02 	sts	0x0254, r25
    16da:	80 93 53 02 	sts	0x0253, r24
    16de:	84 e0       	ldi	r24, 0x04	; 4
    16e0:	80 93 55 02 	sts	0x0255, r24
    16e4:	83 e0       	ldi	r24, 0x03	; 3
    16e6:	80 93 56 02 	sts	0x0256, r24
    16ea:	87 e0       	ldi	r24, 0x07	; 7
    16ec:	80 93 57 02 	sts	0x0257, r24
    16f0:	85 e0       	ldi	r24, 0x05	; 5
    16f2:	80 93 58 02 	sts	0x0258, r24
    16f6:	81 e0       	ldi	r24, 0x01	; 1
    16f8:	80 93 59 02 	sts	0x0259, r24
    16fc:	08 95       	ret

000016fe <_ZN5Print5writeEPKhj>:
    16fe:	cf 92       	push	r12
    1700:	df 92       	push	r13
    1702:	ef 92       	push	r14
    1704:	ff 92       	push	r15
    1706:	0f 93       	push	r16
    1708:	1f 93       	push	r17
    170a:	cf 93       	push	r28
    170c:	df 93       	push	r29
    170e:	7c 01       	movw	r14, r24
    1710:	6b 01       	movw	r12, r22
    1712:	8a 01       	movw	r16, r20
    1714:	c0 e0       	ldi	r28, 0x00	; 0
    1716:	d0 e0       	ldi	r29, 0x00	; 0
    1718:	0f c0       	rjmp	.+30     	; 0x1738 <_ZN5Print5writeEPKhj+0x3a>
    171a:	d6 01       	movw	r26, r12
    171c:	6d 91       	ld	r22, X+
    171e:	6d 01       	movw	r12, r26
    1720:	d7 01       	movw	r26, r14
    1722:	ed 91       	ld	r30, X+
    1724:	fc 91       	ld	r31, X
    1726:	01 90       	ld	r0, Z+
    1728:	f0 81       	ld	r31, Z
    172a:	e0 2d       	mov	r30, r0
    172c:	c7 01       	movw	r24, r14
    172e:	09 95       	icall
    1730:	c8 0f       	add	r28, r24
    1732:	d9 1f       	adc	r29, r25
    1734:	01 50       	subi	r16, 0x01	; 1
    1736:	10 40       	sbci	r17, 0x00	; 0
    1738:	01 15       	cp	r16, r1
    173a:	11 05       	cpc	r17, r1
    173c:	71 f7       	brne	.-36     	; 0x171a <_ZN5Print5writeEPKhj+0x1c>
    173e:	ce 01       	movw	r24, r28
    1740:	df 91       	pop	r29
    1742:	cf 91       	pop	r28
    1744:	1f 91       	pop	r17
    1746:	0f 91       	pop	r16
    1748:	ff 90       	pop	r15
    174a:	ef 90       	pop	r14
    174c:	df 90       	pop	r13
    174e:	cf 90       	pop	r12
    1750:	08 95       	ret

00001752 <_ZN5Print7printlnEv>:
    1752:	ef 92       	push	r14
    1754:	ff 92       	push	r15
    1756:	0f 93       	push	r16
    1758:	1f 93       	push	r17
    175a:	8c 01       	movw	r16, r24
    175c:	dc 01       	movw	r26, r24
    175e:	ed 91       	ld	r30, X+
    1760:	fc 91       	ld	r31, X
    1762:	01 90       	ld	r0, Z+
    1764:	f0 81       	ld	r31, Z
    1766:	e0 2d       	mov	r30, r0
    1768:	6d e0       	ldi	r22, 0x0D	; 13
    176a:	09 95       	icall
    176c:	7c 01       	movw	r14, r24
    176e:	d8 01       	movw	r26, r16
    1770:	ed 91       	ld	r30, X+
    1772:	fc 91       	ld	r31, X
    1774:	01 90       	ld	r0, Z+
    1776:	f0 81       	ld	r31, Z
    1778:	e0 2d       	mov	r30, r0
    177a:	c8 01       	movw	r24, r16
    177c:	6a e0       	ldi	r22, 0x0A	; 10
    177e:	09 95       	icall
    1780:	9c 01       	movw	r18, r24
    1782:	2e 0d       	add	r18, r14
    1784:	3f 1d       	adc	r19, r15
    1786:	c9 01       	movw	r24, r18
    1788:	1f 91       	pop	r17
    178a:	0f 91       	pop	r16
    178c:	ff 90       	pop	r15
    178e:	ef 90       	pop	r14
    1790:	08 95       	ret

00001792 <_ZN5Print5writeEPKc>:
    1792:	cf 93       	push	r28
    1794:	df 93       	push	r29
    1796:	ec 01       	movw	r28, r24
    1798:	61 15       	cp	r22, r1
    179a:	71 05       	cpc	r23, r1
    179c:	19 f4       	brne	.+6      	; 0x17a4 <_ZN5Print5writeEPKc+0x12>
    179e:	20 e0       	ldi	r18, 0x00	; 0
    17a0:	30 e0       	ldi	r19, 0x00	; 0
    17a2:	0f c0       	rjmp	.+30     	; 0x17c2 <_ZN5Print5writeEPKc+0x30>
    17a4:	db 01       	movw	r26, r22
    17a6:	0d 90       	ld	r0, X+
    17a8:	00 20       	and	r0, r0
    17aa:	e9 f7       	brne	.-6      	; 0x17a6 <_ZN5Print5writeEPKc+0x14>
    17ac:	11 97       	sbiw	r26, 0x01	; 1
    17ae:	a6 1b       	sub	r26, r22
    17b0:	b7 0b       	sbc	r27, r23
    17b2:	e8 81       	ld	r30, Y
    17b4:	f9 81       	ldd	r31, Y+1	; 0x01
    17b6:	02 80       	ldd	r0, Z+2	; 0x02
    17b8:	f3 81       	ldd	r31, Z+3	; 0x03
    17ba:	e0 2d       	mov	r30, r0
    17bc:	ad 01       	movw	r20, r26
    17be:	09 95       	icall
    17c0:	9c 01       	movw	r18, r24
    17c2:	c9 01       	movw	r24, r18
    17c4:	df 91       	pop	r29
    17c6:	cf 91       	pop	r28
    17c8:	08 95       	ret

000017ca <_ZN5Print7printlnEPKc>:
    17ca:	ef 92       	push	r14
    17cc:	ff 92       	push	r15
    17ce:	0f 93       	push	r16
    17d0:	1f 93       	push	r17
    17d2:	7c 01       	movw	r14, r24
    17d4:	de df       	rcall	.-68     	; 0x1792 <_ZN5Print5writeEPKc>
    17d6:	8c 01       	movw	r16, r24
    17d8:	c7 01       	movw	r24, r14
    17da:	bb df       	rcall	.-138    	; 0x1752 <_ZN5Print7printlnEv>
    17dc:	08 0f       	add	r16, r24
    17de:	19 1f       	adc	r17, r25
    17e0:	c8 01       	movw	r24, r16
    17e2:	1f 91       	pop	r17
    17e4:	0f 91       	pop	r16
    17e6:	ff 90       	pop	r15
    17e8:	ef 90       	pop	r14
    17ea:	08 95       	ret

000017ec <__vector_9>:
    17ec:	1f 92       	push	r1
    17ee:	0f 92       	push	r0
    17f0:	0f b6       	in	r0, 0x3f	; 63
    17f2:	0f 92       	push	r0
    17f4:	11 24       	eor	r1, r1
    17f6:	2f 93       	push	r18
    17f8:	3f 93       	push	r19
    17fa:	4f 93       	push	r20
    17fc:	5f 93       	push	r21
    17fe:	6f 93       	push	r22
    1800:	7f 93       	push	r23
    1802:	8f 93       	push	r24
    1804:	9f 93       	push	r25
    1806:	af 93       	push	r26
    1808:	bf 93       	push	r27
    180a:	20 91 5f 02 	lds	r18, 0x025F
    180e:	30 91 60 02 	lds	r19, 0x0260
    1812:	40 91 61 02 	lds	r20, 0x0261
    1816:	50 91 62 02 	lds	r21, 0x0262
    181a:	70 91 63 02 	lds	r23, 0x0263
    181e:	da 01       	movw	r26, r20
    1820:	c9 01       	movw	r24, r18
    1822:	02 96       	adiw	r24, 0x02	; 2
    1824:	a1 1d       	adc	r26, r1
    1826:	b1 1d       	adc	r27, r1
    1828:	67 2f       	mov	r22, r23
    182a:	6a 5f       	subi	r22, 0xFA	; 250
    182c:	6d 37       	cpi	r22, 0x7D	; 125
    182e:	30 f0       	brcs	.+12     	; 0x183c <__vector_9+0x50>
    1830:	6d 57       	subi	r22, 0x7D	; 125
    1832:	da 01       	movw	r26, r20
    1834:	c9 01       	movw	r24, r18
    1836:	03 96       	adiw	r24, 0x03	; 3
    1838:	a1 1d       	adc	r26, r1
    183a:	b1 1d       	adc	r27, r1
    183c:	60 93 63 02 	sts	0x0263, r22
    1840:	80 93 5f 02 	sts	0x025F, r24
    1844:	90 93 60 02 	sts	0x0260, r25
    1848:	a0 93 61 02 	sts	0x0261, r26
    184c:	b0 93 62 02 	sts	0x0262, r27
    1850:	80 91 5b 02 	lds	r24, 0x025B
    1854:	90 91 5c 02 	lds	r25, 0x025C
    1858:	a0 91 5d 02 	lds	r26, 0x025D
    185c:	b0 91 5e 02 	lds	r27, 0x025E
    1860:	01 96       	adiw	r24, 0x01	; 1
    1862:	a1 1d       	adc	r26, r1
    1864:	b1 1d       	adc	r27, r1
    1866:	80 93 5b 02 	sts	0x025B, r24
    186a:	90 93 5c 02 	sts	0x025C, r25
    186e:	a0 93 5d 02 	sts	0x025D, r26
    1872:	b0 93 5e 02 	sts	0x025E, r27
    1876:	bf 91       	pop	r27
    1878:	af 91       	pop	r26
    187a:	9f 91       	pop	r25
    187c:	8f 91       	pop	r24
    187e:	7f 91       	pop	r23
    1880:	6f 91       	pop	r22
    1882:	5f 91       	pop	r21
    1884:	4f 91       	pop	r20
    1886:	3f 91       	pop	r19
    1888:	2f 91       	pop	r18
    188a:	0f 90       	pop	r0
    188c:	0f be       	out	0x3f, r0	; 63
    188e:	0f 90       	pop	r0
    1890:	1f 90       	pop	r1
    1892:	18 95       	reti

00001894 <init>:
    1894:	78 94       	sei
    1896:	83 b7       	in	r24, 0x33	; 51
    1898:	82 60       	ori	r24, 0x02	; 2
    189a:	83 bf       	out	0x33, r24	; 51
    189c:	83 b7       	in	r24, 0x33	; 51
    189e:	81 60       	ori	r24, 0x01	; 1
    18a0:	83 bf       	out	0x33, r24	; 51
    18a2:	89 b7       	in	r24, 0x39	; 57
    18a4:	81 60       	ori	r24, 0x01	; 1
    18a6:	89 bf       	out	0x39, r24	; 57
    18a8:	1e bc       	out	0x2e, r1	; 46
    18aa:	8e b5       	in	r24, 0x2e	; 46
    18ac:	82 60       	ori	r24, 0x02	; 2
    18ae:	8e bd       	out	0x2e, r24	; 46
    18b0:	8e b5       	in	r24, 0x2e	; 46
    18b2:	81 60       	ori	r24, 0x01	; 1
    18b4:	8e bd       	out	0x2e, r24	; 46
    18b6:	8f b5       	in	r24, 0x2f	; 47
    18b8:	81 60       	ori	r24, 0x01	; 1
    18ba:	8f bd       	out	0x2f, r24	; 47
    18bc:	85 b5       	in	r24, 0x25	; 37
    18be:	84 60       	ori	r24, 0x04	; 4
    18c0:	85 bd       	out	0x25, r24	; 37
    18c2:	85 b5       	in	r24, 0x25	; 37
    18c4:	80 64       	ori	r24, 0x40	; 64
    18c6:	85 bd       	out	0x25, r24	; 37
    18c8:	32 9a       	sbi	0x06, 2	; 6
    18ca:	31 9a       	sbi	0x06, 1	; 6
    18cc:	30 9a       	sbi	0x06, 0	; 6
    18ce:	37 9a       	sbi	0x06, 7	; 6
    18d0:	1a b8       	out	0x0a, r1	; 10
    18d2:	08 95       	ret

000018d4 <__udivmodsi4>:
    18d4:	a1 e2       	ldi	r26, 0x21	; 33
    18d6:	1a 2e       	mov	r1, r26
    18d8:	aa 1b       	sub	r26, r26
    18da:	bb 1b       	sub	r27, r27
    18dc:	fd 01       	movw	r30, r26
    18de:	0d c0       	rjmp	.+26     	; 0x18fa <__udivmodsi4_ep>

000018e0 <__udivmodsi4_loop>:
    18e0:	aa 1f       	adc	r26, r26
    18e2:	bb 1f       	adc	r27, r27
    18e4:	ee 1f       	adc	r30, r30
    18e6:	ff 1f       	adc	r31, r31
    18e8:	a2 17       	cp	r26, r18
    18ea:	b3 07       	cpc	r27, r19
    18ec:	e4 07       	cpc	r30, r20
    18ee:	f5 07       	cpc	r31, r21
    18f0:	20 f0       	brcs	.+8      	; 0x18fa <__udivmodsi4_ep>
    18f2:	a2 1b       	sub	r26, r18
    18f4:	b3 0b       	sbc	r27, r19
    18f6:	e4 0b       	sbc	r30, r20
    18f8:	f5 0b       	sbc	r31, r21

000018fa <__udivmodsi4_ep>:
    18fa:	66 1f       	adc	r22, r22
    18fc:	77 1f       	adc	r23, r23
    18fe:	88 1f       	adc	r24, r24
    1900:	99 1f       	adc	r25, r25
    1902:	1a 94       	dec	r1
    1904:	69 f7       	brne	.-38     	; 0x18e0 <__udivmodsi4_loop>
    1906:	60 95       	com	r22
    1908:	70 95       	com	r23
    190a:	80 95       	com	r24
    190c:	90 95       	com	r25
    190e:	9b 01       	movw	r18, r22
    1910:	ac 01       	movw	r20, r24
    1912:	bd 01       	movw	r22, r26
    1914:	cf 01       	movw	r24, r30
    1916:	08 95       	ret

00001918 <__prologue_saves__>:
    1918:	2f 92       	push	r2
    191a:	3f 92       	push	r3
    191c:	4f 92       	push	r4
    191e:	5f 92       	push	r5
    1920:	6f 92       	push	r6
    1922:	7f 92       	push	r7
    1924:	8f 92       	push	r8
    1926:	9f 92       	push	r9
    1928:	af 92       	push	r10
    192a:	bf 92       	push	r11
    192c:	cf 92       	push	r12
    192e:	df 92       	push	r13
    1930:	ef 92       	push	r14
    1932:	ff 92       	push	r15
    1934:	0f 93       	push	r16
    1936:	1f 93       	push	r17
    1938:	cf 93       	push	r28
    193a:	df 93       	push	r29
    193c:	cd b7       	in	r28, 0x3d	; 61
    193e:	de b7       	in	r29, 0x3e	; 62
    1940:	ca 1b       	sub	r28, r26
    1942:	db 0b       	sbc	r29, r27
    1944:	0f b6       	in	r0, 0x3f	; 63
    1946:	f8 94       	cli
    1948:	de bf       	out	0x3e, r29	; 62
    194a:	0f be       	out	0x3f, r0	; 63
    194c:	cd bf       	out	0x3d, r28	; 61
    194e:	09 94       	ijmp

00001950 <__epilogue_restores__>:
    1950:	2a 88       	ldd	r2, Y+18	; 0x12
    1952:	39 88       	ldd	r3, Y+17	; 0x11
    1954:	48 88       	ldd	r4, Y+16	; 0x10
    1956:	5f 84       	ldd	r5, Y+15	; 0x0f
    1958:	6e 84       	ldd	r6, Y+14	; 0x0e
    195a:	7d 84       	ldd	r7, Y+13	; 0x0d
    195c:	8c 84       	ldd	r8, Y+12	; 0x0c
    195e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1960:	aa 84       	ldd	r10, Y+10	; 0x0a
    1962:	b9 84       	ldd	r11, Y+9	; 0x09
    1964:	c8 84       	ldd	r12, Y+8	; 0x08
    1966:	df 80       	ldd	r13, Y+7	; 0x07
    1968:	ee 80       	ldd	r14, Y+6	; 0x06
    196a:	fd 80       	ldd	r15, Y+5	; 0x05
    196c:	0c 81       	ldd	r16, Y+4	; 0x04
    196e:	1b 81       	ldd	r17, Y+3	; 0x03
    1970:	aa 81       	ldd	r26, Y+2	; 0x02
    1972:	b9 81       	ldd	r27, Y+1	; 0x01
    1974:	ce 0f       	add	r28, r30
    1976:	d1 1d       	adc	r29, r1
    1978:	0f b6       	in	r0, 0x3f	; 63
    197a:	f8 94       	cli
    197c:	de bf       	out	0x3e, r29	; 62
    197e:	0f be       	out	0x3f, r0	; 63
    1980:	cd bf       	out	0x3d, r28	; 61
    1982:	ed 01       	movw	r28, r26
    1984:	08 95       	ret

00001986 <__tablejump2__>:
    1986:	ee 0f       	add	r30, r30
    1988:	ff 1f       	adc	r31, r31

0000198a <__tablejump__>:
    198a:	05 90       	lpm	r0, Z+
    198c:	f4 91       	lpm	r31, Z+
    198e:	e0 2d       	mov	r30, r0
    1990:	09 94       	ijmp
    1992:	11 f4       	brne	.+4      	; 0x1998 <__tablejump__+0xe>
    1994:	0e f4       	brtc	.+2      	; 0x1998 <__tablejump__+0xe>
    1996:	4d c0       	rjmp	.+154    	; 0x1a32 <__fp_nan>
    1998:	3e c0       	rjmp	.+124    	; 0x1a16 <__fp_mpack>

0000199a <sqrt>:
    199a:	5d d0       	rcall	.+186    	; 0x1a56 <__fp_splitA>
    199c:	d0 f3       	brcs	.-12     	; 0x1992 <__tablejump__+0x8>
    199e:	99 23       	and	r25, r25
    19a0:	d9 f3       	breq	.-10     	; 0x1998 <__tablejump__+0xe>
    19a2:	ce f3       	brts	.-14     	; 0x1996 <__tablejump__+0xc>
    19a4:	9f 57       	subi	r25, 0x7F	; 127
    19a6:	55 0b       	sbc	r21, r21
    19a8:	87 ff       	sbrs	r24, 7
    19aa:	46 d0       	rcall	.+140    	; 0x1a38 <__fp_norm2>
    19ac:	00 24       	eor	r0, r0
    19ae:	a0 e6       	ldi	r26, 0x60	; 96
    19b0:	40 ea       	ldi	r20, 0xA0	; 160
    19b2:	90 01       	movw	r18, r0
    19b4:	80 58       	subi	r24, 0x80	; 128
    19b6:	56 95       	lsr	r21
    19b8:	97 95       	ror	r25
    19ba:	28 f4       	brcc	.+10     	; 0x19c6 <sqrt+0x2c>
    19bc:	80 5c       	subi	r24, 0xC0	; 192
    19be:	66 0f       	add	r22, r22
    19c0:	77 1f       	adc	r23, r23
    19c2:	88 1f       	adc	r24, r24
    19c4:	20 f0       	brcs	.+8      	; 0x19ce <sqrt+0x34>
    19c6:	26 17       	cp	r18, r22
    19c8:	37 07       	cpc	r19, r23
    19ca:	48 07       	cpc	r20, r24
    19cc:	30 f4       	brcc	.+12     	; 0x19da <sqrt+0x40>
    19ce:	62 1b       	sub	r22, r18
    19d0:	73 0b       	sbc	r23, r19
    19d2:	84 0b       	sbc	r24, r20
    19d4:	20 29       	or	r18, r0
    19d6:	31 29       	or	r19, r1
    19d8:	4a 2b       	or	r20, r26
    19da:	a6 95       	lsr	r26
    19dc:	17 94       	ror	r1
    19de:	07 94       	ror	r0
    19e0:	20 25       	eor	r18, r0
    19e2:	31 25       	eor	r19, r1
    19e4:	4a 27       	eor	r20, r26
    19e6:	58 f7       	brcc	.-42     	; 0x19be <sqrt+0x24>
    19e8:	66 0f       	add	r22, r22
    19ea:	77 1f       	adc	r23, r23
    19ec:	88 1f       	adc	r24, r24
    19ee:	20 f0       	brcs	.+8      	; 0x19f8 <sqrt+0x5e>
    19f0:	26 17       	cp	r18, r22
    19f2:	37 07       	cpc	r19, r23
    19f4:	48 07       	cpc	r20, r24
    19f6:	30 f4       	brcc	.+12     	; 0x1a04 <sqrt+0x6a>
    19f8:	62 0b       	sbc	r22, r18
    19fa:	73 0b       	sbc	r23, r19
    19fc:	84 0b       	sbc	r24, r20
    19fe:	20 0d       	add	r18, r0
    1a00:	31 1d       	adc	r19, r1
    1a02:	41 1d       	adc	r20, r1
    1a04:	a0 95       	com	r26
    1a06:	81 f7       	brne	.-32     	; 0x19e8 <sqrt+0x4e>
    1a08:	b9 01       	movw	r22, r18
    1a0a:	84 2f       	mov	r24, r20
    1a0c:	91 58       	subi	r25, 0x81	; 129
    1a0e:	88 0f       	add	r24, r24
    1a10:	96 95       	lsr	r25
    1a12:	87 95       	ror	r24
    1a14:	08 95       	ret

00001a16 <__fp_mpack>:
    1a16:	9f 3f       	cpi	r25, 0xFF	; 255
    1a18:	31 f0       	breq	.+12     	; 0x1a26 <__fp_mpack_finite+0xc>

00001a1a <__fp_mpack_finite>:
    1a1a:	91 50       	subi	r25, 0x01	; 1
    1a1c:	20 f4       	brcc	.+8      	; 0x1a26 <__fp_mpack_finite+0xc>
    1a1e:	87 95       	ror	r24
    1a20:	77 95       	ror	r23
    1a22:	67 95       	ror	r22
    1a24:	b7 95       	ror	r27
    1a26:	88 0f       	add	r24, r24
    1a28:	91 1d       	adc	r25, r1
    1a2a:	96 95       	lsr	r25
    1a2c:	87 95       	ror	r24
    1a2e:	97 f9       	bld	r25, 7
    1a30:	08 95       	ret

00001a32 <__fp_nan>:
    1a32:	9f ef       	ldi	r25, 0xFF	; 255
    1a34:	80 ec       	ldi	r24, 0xC0	; 192
    1a36:	08 95       	ret

00001a38 <__fp_norm2>:
    1a38:	91 50       	subi	r25, 0x01	; 1
    1a3a:	50 40       	sbci	r21, 0x00	; 0
    1a3c:	66 0f       	add	r22, r22
    1a3e:	77 1f       	adc	r23, r23
    1a40:	88 1f       	adc	r24, r24
    1a42:	d2 f7       	brpl	.-12     	; 0x1a38 <__fp_norm2>
    1a44:	08 95       	ret

00001a46 <__fp_split3>:
    1a46:	57 fd       	sbrc	r21, 7
    1a48:	90 58       	subi	r25, 0x80	; 128
    1a4a:	44 0f       	add	r20, r20
    1a4c:	55 1f       	adc	r21, r21
    1a4e:	59 f0       	breq	.+22     	; 0x1a66 <__fp_splitA+0x10>
    1a50:	5f 3f       	cpi	r21, 0xFF	; 255
    1a52:	71 f0       	breq	.+28     	; 0x1a70 <__fp_splitA+0x1a>
    1a54:	47 95       	ror	r20

00001a56 <__fp_splitA>:
    1a56:	88 0f       	add	r24, r24
    1a58:	97 fb       	bst	r25, 7
    1a5a:	99 1f       	adc	r25, r25
    1a5c:	61 f0       	breq	.+24     	; 0x1a76 <__fp_splitA+0x20>
    1a5e:	9f 3f       	cpi	r25, 0xFF	; 255
    1a60:	79 f0       	breq	.+30     	; 0x1a80 <__fp_splitA+0x2a>
    1a62:	87 95       	ror	r24
    1a64:	08 95       	ret
    1a66:	12 16       	cp	r1, r18
    1a68:	13 06       	cpc	r1, r19
    1a6a:	14 06       	cpc	r1, r20
    1a6c:	55 1f       	adc	r21, r21
    1a6e:	f2 cf       	rjmp	.-28     	; 0x1a54 <__fp_split3+0xe>
    1a70:	46 95       	lsr	r20
    1a72:	f1 df       	rcall	.-30     	; 0x1a56 <__fp_splitA>
    1a74:	08 c0       	rjmp	.+16     	; 0x1a86 <__fp_splitA+0x30>
    1a76:	16 16       	cp	r1, r22
    1a78:	17 06       	cpc	r1, r23
    1a7a:	18 06       	cpc	r1, r24
    1a7c:	99 1f       	adc	r25, r25
    1a7e:	f1 cf       	rjmp	.-30     	; 0x1a62 <__fp_splitA+0xc>
    1a80:	86 95       	lsr	r24
    1a82:	71 05       	cpc	r23, r1
    1a84:	61 05       	cpc	r22, r1
    1a86:	08 94       	sec
    1a88:	08 95       	ret

00001a8a <atoi>:
    1a8a:	fc 01       	movw	r30, r24
    1a8c:	88 27       	eor	r24, r24
    1a8e:	99 27       	eor	r25, r25
    1a90:	e8 94       	clt
    1a92:	21 91       	ld	r18, Z+
    1a94:	20 32       	cpi	r18, 0x20	; 32
    1a96:	e9 f3       	breq	.-6      	; 0x1a92 <atoi+0x8>
    1a98:	29 30       	cpi	r18, 0x09	; 9
    1a9a:	10 f0       	brcs	.+4      	; 0x1aa0 <atoi+0x16>
    1a9c:	2e 30       	cpi	r18, 0x0E	; 14
    1a9e:	c8 f3       	brcs	.-14     	; 0x1a92 <atoi+0x8>
    1aa0:	2b 32       	cpi	r18, 0x2B	; 43
    1aa2:	39 f0       	breq	.+14     	; 0x1ab2 <atoi+0x28>
    1aa4:	2d 32       	cpi	r18, 0x2D	; 45
    1aa6:	31 f4       	brne	.+12     	; 0x1ab4 <atoi+0x2a>
    1aa8:	68 94       	set
    1aaa:	03 c0       	rjmp	.+6      	; 0x1ab2 <atoi+0x28>
    1aac:	16 d0       	rcall	.+44     	; 0x1ada <__mulhi_const_10>
    1aae:	82 0f       	add	r24, r18
    1ab0:	91 1d       	adc	r25, r1
    1ab2:	21 91       	ld	r18, Z+
    1ab4:	20 53       	subi	r18, 0x30	; 48
    1ab6:	2a 30       	cpi	r18, 0x0A	; 10
    1ab8:	c8 f3       	brcs	.-14     	; 0x1aac <atoi+0x22>
    1aba:	1e f4       	brtc	.+6      	; 0x1ac2 <atoi+0x38>
    1abc:	90 95       	com	r25
    1abe:	81 95       	neg	r24
    1ac0:	9f 4f       	sbci	r25, 0xFF	; 255
    1ac2:	08 95       	ret

00001ac4 <strchr>:
    1ac4:	fc 01       	movw	r30, r24
    1ac6:	81 91       	ld	r24, Z+
    1ac8:	86 17       	cp	r24, r22
    1aca:	21 f0       	breq	.+8      	; 0x1ad4 <strchr+0x10>
    1acc:	88 23       	and	r24, r24
    1ace:	d9 f7       	brne	.-10     	; 0x1ac6 <strchr+0x2>
    1ad0:	99 27       	eor	r25, r25
    1ad2:	08 95       	ret
    1ad4:	31 97       	sbiw	r30, 0x01	; 1
    1ad6:	cf 01       	movw	r24, r30
    1ad8:	08 95       	ret

00001ada <__mulhi_const_10>:
    1ada:	7a e0       	ldi	r23, 0x0A	; 10
    1adc:	97 9f       	mul	r25, r23
    1ade:	90 2d       	mov	r25, r0
    1ae0:	87 9f       	mul	r24, r23
    1ae2:	80 2d       	mov	r24, r0
    1ae4:	91 0d       	add	r25, r1
    1ae6:	11 24       	eor	r1, r1
    1ae8:	08 95       	ret

00001aea <_exit>:
    1aea:	f8 94       	cli

00001aec <__stop_program>:
    1aec:	ff cf       	rjmp	.-2      	; 0x1aec <__stop_program>
